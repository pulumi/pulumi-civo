// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides a Civo firewall resource. This can be used to create, modify, and delete firewalls.
 *
 * ## Import
 *
 * using ID
 *
 * ```sh
 * $ pulumi import civo:index/firewall:Firewall www b8ecd2ab-2267-4a5e-8692-cbf1d32583e3
 * ```
 */
export class Firewall extends pulumi.CustomResource {
    /**
     * Get an existing Firewall resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FirewallState, opts?: pulumi.CustomResourceOptions): Firewall {
        return new Firewall(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'civo:index/firewall:Firewall';

    /**
     * Returns true if the given object is an instance of Firewall.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Firewall {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Firewall.__pulumiType;
    }

    /**
     * The create rules flag is used to create the default firewall rules, if is not defined will be set to true, and if you set to false you need to define at least one ingress or egress rule
     */
    public readonly createDefaultRules!: pulumi.Output<boolean | undefined>;
    /**
     * The egress rules, this is a list of rules that will be applied to the firewall
     */
    public readonly egressRules!: pulumi.Output<outputs.FirewallEgressRule[]>;
    /**
     * The ingress rules, this is a list of rules that will be applied to the firewall
     */
    public readonly ingressRules!: pulumi.Output<outputs.FirewallIngressRule[]>;
    /**
     * The firewall name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The firewall network, if is not defined we use the default network
     */
    public readonly networkId!: pulumi.Output<string>;
    /**
     * The firewall region, if is not defined we use the global defined in the provider
     */
    public readonly region!: pulumi.Output<string>;

    /**
     * Create a Firewall resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FirewallArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FirewallArgs | FirewallState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FirewallState | undefined;
            resourceInputs["createDefaultRules"] = state ? state.createDefaultRules : undefined;
            resourceInputs["egressRules"] = state ? state.egressRules : undefined;
            resourceInputs["ingressRules"] = state ? state.ingressRules : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkId"] = state ? state.networkId : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
        } else {
            const args = argsOrState as FirewallArgs | undefined;
            resourceInputs["createDefaultRules"] = args ? args.createDefaultRules : undefined;
            resourceInputs["egressRules"] = args ? args.egressRules : undefined;
            resourceInputs["ingressRules"] = args ? args.ingressRules : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkId"] = args ? args.networkId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Firewall.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Firewall resources.
 */
export interface FirewallState {
    /**
     * The create rules flag is used to create the default firewall rules, if is not defined will be set to true, and if you set to false you need to define at least one ingress or egress rule
     */
    createDefaultRules?: pulumi.Input<boolean>;
    /**
     * The egress rules, this is a list of rules that will be applied to the firewall
     */
    egressRules?: pulumi.Input<pulumi.Input<inputs.FirewallEgressRule>[]>;
    /**
     * The ingress rules, this is a list of rules that will be applied to the firewall
     */
    ingressRules?: pulumi.Input<pulumi.Input<inputs.FirewallIngressRule>[]>;
    /**
     * The firewall name
     */
    name?: pulumi.Input<string>;
    /**
     * The firewall network, if is not defined we use the default network
     */
    networkId?: pulumi.Input<string>;
    /**
     * The firewall region, if is not defined we use the global defined in the provider
     */
    region?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Firewall resource.
 */
export interface FirewallArgs {
    /**
     * The create rules flag is used to create the default firewall rules, if is not defined will be set to true, and if you set to false you need to define at least one ingress or egress rule
     */
    createDefaultRules?: pulumi.Input<boolean>;
    /**
     * The egress rules, this is a list of rules that will be applied to the firewall
     */
    egressRules?: pulumi.Input<pulumi.Input<inputs.FirewallEgressRule>[]>;
    /**
     * The ingress rules, this is a list of rules that will be applied to the firewall
     */
    ingressRules?: pulumi.Input<pulumi.Input<inputs.FirewallIngressRule>[]>;
    /**
     * The firewall name
     */
    name?: pulumi.Input<string>;
    /**
     * The firewall network, if is not defined we use the default network
     */
    networkId?: pulumi.Input<string>;
    /**
     * The firewall region, if is not defined we use the global defined in the provider
     */
    region?: pulumi.Input<string>;
}
