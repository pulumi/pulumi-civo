// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a Civo instance resource. This can be used to create, modify, and delete instances.
 *
 * ## Schema
 *
 * ### Optional
 *
 * - **disk_image** (String) The ID for the disk image to use to build the instance
 * - **firewall_id** (String) The ID of the firewall to use, from the current list. If left blank or not sent, the default firewall will be used (open to all)
 * - **hostname** (String) A fully qualified domain name that should be set as the instance's hostname
 * - **id** (String) The ID of this resource.
 * - **initial_user** (String) The name of the initial user created on the server (optional; this will default to the template's defaultUsername and fallback to civo)
 * - **network_id** (String) This must be the ID of the network from the network listing (optional; default network used when not specified)
 * - **notes** (String) Add some notes to the instance
 * - **public_ip_required** (String) This should be either 'none' or 'create' (default: 'create')
 * - **region** (String) The region for the instance, if not declare we use the region in declared in the provider
 * - **reverse_dns** (String) A fully qualified domain name that should be used as the instance's IP's reverse DNS (optional, uses the hostname if unspecified)
 * - **script** (String) The contents of a script that will be uploaded to /usr/local/bin/civo-user-init-script on your instance, read/write/executable only by root and then will be executed at the end of the cloud initialization
 * - **size** (String) The name of the size, from the current list, e.g. g3.xsmall
 * - **sshkey_id** (String) The ID of an already uploaded SSH public key to use for login to the default user (optional; if one isn't provided a random password will be set and returned in the initialPassword field)
 * - **tags** (Set of String) An optional list of tags, represented as a key, value pair
 * - **template** (String, Deprecated) The ID for the template to use to build the instance
 *
 * ### Read-Only
 *
 * - **cpu_cores** (Number) Instance's CPU cores
 * - **created_at** (String) Timestamp when the instance was created
 * - **disk_gb** (Number) Instance's disk (GB)
 * - **initial_password** (String, Sensitive) Initial password for login
 * - **private_ip** (String) Instance's private IP address
 * - **public_ip** (String) Instance's public IP address
 * - **ram_mb** (Number) Instance's RAM (MB)
 * - **source_id** (String) Instance's source ID
 * - **source_type** (String) Instance's source type
 * - **status** (String) Instance's status
 *
 * ## Import
 *
 * Import is supported using the following syntax# using ID
 *
 * ```sh
 *  $ pulumi import civo:index/instance:Instance myintance 18bd98ad-1b6e-4f87-b48f-e690b4fd7413
 * ```
 */
export class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceState, opts?: pulumi.CustomResourceOptions): Instance {
        return new Instance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'civo:index/instance:Instance';

    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Instance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Instance.__pulumiType;
    }

    /**
     * Instance's CPU cores
     */
    public /*out*/ readonly cpuCores!: pulumi.Output<number>;
    /**
     * Timestamp when the instance was created
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Instance's disk (GB)
     */
    public /*out*/ readonly diskGb!: pulumi.Output<number>;
    /**
     * The ID for the disk image to use to build the instance
     */
    public readonly diskImage!: pulumi.Output<string>;
    /**
     * The ID of the firewall to use, from the current list. If left blank or not sent, the default firewall will be used (open
     * to all)
     */
    public readonly firewallId!: pulumi.Output<string>;
    /**
     * A fully qualified domain name that should be set as the instance's hostname
     */
    public readonly hostname!: pulumi.Output<string>;
    /**
     * Initial password for login
     */
    public /*out*/ readonly initialPassword!: pulumi.Output<string>;
    /**
     * The name of the initial user created on the server (optional; this will default to the template's default_username and
     * fallback to civo)
     */
    public readonly initialUser!: pulumi.Output<string | undefined>;
    /**
     * This must be the ID of the network from the network listing (optional; default network used when not specified)
     */
    public readonly networkId!: pulumi.Output<string>;
    /**
     * Add some notes to the instance
     */
    public readonly notes!: pulumi.Output<string | undefined>;
    /**
     * Instance's private IP address
     */
    public /*out*/ readonly privateIp!: pulumi.Output<string>;
    /**
     * Instance's public IP address
     */
    public /*out*/ readonly publicIp!: pulumi.Output<string>;
    /**
     * This should be either 'none' or 'create' (default: 'create')
     */
    public readonly publicIpRequired!: pulumi.Output<string | undefined>;
    /**
     * Instance's RAM (MB)
     */
    public /*out*/ readonly ramMb!: pulumi.Output<number>;
    /**
     * The region for the instance, if not declare we use the region in declared in the provider
     */
    public readonly region!: pulumi.Output<string | undefined>;
    /**
     * A fully qualified domain name that should be used as the instance's IP's reverse DNS (optional, uses the hostname if
     * unspecified)
     */
    public readonly reverseDns!: pulumi.Output<string | undefined>;
    /**
     * The contents of a script that will be uploaded to /usr/local/bin/civo-user-init-script on your instance,
     * read/write/executable only by root and then will be executed at the end of the cloud initialization
     */
    public readonly script!: pulumi.Output<string | undefined>;
    /**
     * The name of the size, from the current list, e.g. g3.xsmall
     */
    public readonly size!: pulumi.Output<string | undefined>;
    /**
     * Instance's source ID
     */
    public /*out*/ readonly sourceId!: pulumi.Output<string>;
    /**
     * Instance's source type
     */
    public /*out*/ readonly sourceType!: pulumi.Output<string>;
    /**
     * The ID of an already uploaded SSH public key to use for login to the default user (optional; if one isn't provided a
     * random password will be set and returned in the initial_password field)
     */
    public readonly sshkeyId!: pulumi.Output<string | undefined>;
    /**
     * Instance's status
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * An optional list of tags, represented as a key, value pair
     */
    public readonly tags!: pulumi.Output<string[] | undefined>;
    /**
     * The ID for the template to use to build the instance
     *
     * @deprecated "template" attribute is deprecated. Moving forward, please use "disk_image" attribute.
     */
    public readonly template!: pulumi.Output<string>;

    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: InstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceArgs | InstanceState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstanceState | undefined;
            inputs["cpuCores"] = state ? state.cpuCores : undefined;
            inputs["createdAt"] = state ? state.createdAt : undefined;
            inputs["diskGb"] = state ? state.diskGb : undefined;
            inputs["diskImage"] = state ? state.diskImage : undefined;
            inputs["firewallId"] = state ? state.firewallId : undefined;
            inputs["hostname"] = state ? state.hostname : undefined;
            inputs["initialPassword"] = state ? state.initialPassword : undefined;
            inputs["initialUser"] = state ? state.initialUser : undefined;
            inputs["networkId"] = state ? state.networkId : undefined;
            inputs["notes"] = state ? state.notes : undefined;
            inputs["privateIp"] = state ? state.privateIp : undefined;
            inputs["publicIp"] = state ? state.publicIp : undefined;
            inputs["publicIpRequired"] = state ? state.publicIpRequired : undefined;
            inputs["ramMb"] = state ? state.ramMb : undefined;
            inputs["region"] = state ? state.region : undefined;
            inputs["reverseDns"] = state ? state.reverseDns : undefined;
            inputs["script"] = state ? state.script : undefined;
            inputs["size"] = state ? state.size : undefined;
            inputs["sourceId"] = state ? state.sourceId : undefined;
            inputs["sourceType"] = state ? state.sourceType : undefined;
            inputs["sshkeyId"] = state ? state.sshkeyId : undefined;
            inputs["status"] = state ? state.status : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["template"] = state ? state.template : undefined;
        } else {
            const args = argsOrState as InstanceArgs | undefined;
            inputs["diskImage"] = args ? args.diskImage : undefined;
            inputs["firewallId"] = args ? args.firewallId : undefined;
            inputs["hostname"] = args ? args.hostname : undefined;
            inputs["initialUser"] = args ? args.initialUser : undefined;
            inputs["networkId"] = args ? args.networkId : undefined;
            inputs["notes"] = args ? args.notes : undefined;
            inputs["publicIpRequired"] = args ? args.publicIpRequired : undefined;
            inputs["region"] = args ? args.region : undefined;
            inputs["reverseDns"] = args ? args.reverseDns : undefined;
            inputs["script"] = args ? args.script : undefined;
            inputs["size"] = args ? args.size : undefined;
            inputs["sshkeyId"] = args ? args.sshkeyId : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["template"] = args ? args.template : undefined;
            inputs["cpuCores"] = undefined /*out*/;
            inputs["createdAt"] = undefined /*out*/;
            inputs["diskGb"] = undefined /*out*/;
            inputs["initialPassword"] = undefined /*out*/;
            inputs["privateIp"] = undefined /*out*/;
            inputs["publicIp"] = undefined /*out*/;
            inputs["ramMb"] = undefined /*out*/;
            inputs["sourceId"] = undefined /*out*/;
            inputs["sourceType"] = undefined /*out*/;
            inputs["status"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(Instance.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Instance resources.
 */
export interface InstanceState {
    /**
     * Instance's CPU cores
     */
    readonly cpuCores?: pulumi.Input<number>;
    /**
     * Timestamp when the instance was created
     */
    readonly createdAt?: pulumi.Input<string>;
    /**
     * Instance's disk (GB)
     */
    readonly diskGb?: pulumi.Input<number>;
    /**
     * The ID for the disk image to use to build the instance
     */
    readonly diskImage?: pulumi.Input<string>;
    /**
     * The ID of the firewall to use, from the current list. If left blank or not sent, the default firewall will be used (open
     * to all)
     */
    readonly firewallId?: pulumi.Input<string>;
    /**
     * A fully qualified domain name that should be set as the instance's hostname
     */
    readonly hostname?: pulumi.Input<string>;
    /**
     * Initial password for login
     */
    readonly initialPassword?: pulumi.Input<string>;
    /**
     * The name of the initial user created on the server (optional; this will default to the template's default_username and
     * fallback to civo)
     */
    readonly initialUser?: pulumi.Input<string>;
    /**
     * This must be the ID of the network from the network listing (optional; default network used when not specified)
     */
    readonly networkId?: pulumi.Input<string>;
    /**
     * Add some notes to the instance
     */
    readonly notes?: pulumi.Input<string>;
    /**
     * Instance's private IP address
     */
    readonly privateIp?: pulumi.Input<string>;
    /**
     * Instance's public IP address
     */
    readonly publicIp?: pulumi.Input<string>;
    /**
     * This should be either 'none' or 'create' (default: 'create')
     */
    readonly publicIpRequired?: pulumi.Input<string>;
    /**
     * Instance's RAM (MB)
     */
    readonly ramMb?: pulumi.Input<number>;
    /**
     * The region for the instance, if not declare we use the region in declared in the provider
     */
    readonly region?: pulumi.Input<string>;
    /**
     * A fully qualified domain name that should be used as the instance's IP's reverse DNS (optional, uses the hostname if
     * unspecified)
     */
    readonly reverseDns?: pulumi.Input<string>;
    /**
     * The contents of a script that will be uploaded to /usr/local/bin/civo-user-init-script on your instance,
     * read/write/executable only by root and then will be executed at the end of the cloud initialization
     */
    readonly script?: pulumi.Input<string>;
    /**
     * The name of the size, from the current list, e.g. g3.xsmall
     */
    readonly size?: pulumi.Input<string>;
    /**
     * Instance's source ID
     */
    readonly sourceId?: pulumi.Input<string>;
    /**
     * Instance's source type
     */
    readonly sourceType?: pulumi.Input<string>;
    /**
     * The ID of an already uploaded SSH public key to use for login to the default user (optional; if one isn't provided a
     * random password will be set and returned in the initial_password field)
     */
    readonly sshkeyId?: pulumi.Input<string>;
    /**
     * Instance's status
     */
    readonly status?: pulumi.Input<string>;
    /**
     * An optional list of tags, represented as a key, value pair
     */
    readonly tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID for the template to use to build the instance
     *
     * @deprecated "template" attribute is deprecated. Moving forward, please use "disk_image" attribute.
     */
    readonly template?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    /**
     * The ID for the disk image to use to build the instance
     */
    readonly diskImage?: pulumi.Input<string>;
    /**
     * The ID of the firewall to use, from the current list. If left blank or not sent, the default firewall will be used (open
     * to all)
     */
    readonly firewallId?: pulumi.Input<string>;
    /**
     * A fully qualified domain name that should be set as the instance's hostname
     */
    readonly hostname?: pulumi.Input<string>;
    /**
     * The name of the initial user created on the server (optional; this will default to the template's default_username and
     * fallback to civo)
     */
    readonly initialUser?: pulumi.Input<string>;
    /**
     * This must be the ID of the network from the network listing (optional; default network used when not specified)
     */
    readonly networkId?: pulumi.Input<string>;
    /**
     * Add some notes to the instance
     */
    readonly notes?: pulumi.Input<string>;
    /**
     * This should be either 'none' or 'create' (default: 'create')
     */
    readonly publicIpRequired?: pulumi.Input<string>;
    /**
     * The region for the instance, if not declare we use the region in declared in the provider
     */
    readonly region?: pulumi.Input<string>;
    /**
     * A fully qualified domain name that should be used as the instance's IP's reverse DNS (optional, uses the hostname if
     * unspecified)
     */
    readonly reverseDns?: pulumi.Input<string>;
    /**
     * The contents of a script that will be uploaded to /usr/local/bin/civo-user-init-script on your instance,
     * read/write/executable only by root and then will be executed at the end of the cloud initialization
     */
    readonly script?: pulumi.Input<string>;
    /**
     * The name of the size, from the current list, e.g. g3.xsmall
     */
    readonly size?: pulumi.Input<string>;
    /**
     * The ID of an already uploaded SSH public key to use for login to the default user (optional; if one isn't provided a
     * random password will be set and returned in the initial_password field)
     */
    readonly sshkeyId?: pulumi.Input<string>;
    /**
     * An optional list of tags, represented as a key, value pair
     */
    readonly tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID for the template to use to build the instance
     *
     * @deprecated "template" attribute is deprecated. Moving forward, please use "disk_image" attribute.
     */
    readonly template?: pulumi.Input<string>;
}
