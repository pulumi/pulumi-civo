// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Template extends pulumi.CustomResource {
    /**
     * Get an existing Template resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TemplateState, opts?: pulumi.CustomResourceOptions): Template {
        return new Template(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'civo:index/template:Template';

    /**
     * Returns true if the given object is an instance of Template.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Template {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Template.__pulumiType;
    }

    /**
     * Commonly referred to as 'user-data', this is a customisation script that is run afterthe instance is first booted. We
     * recommend using cloud-config as it's a great distribution-agnosticway of configuring cloud servers. If you put
     * $INITIAL_USER in your script, this will automaticallybe replaced by the initial user chosen when creating the instance,
     * $INITIAL_PASSWORD will bereplaced with the random password generated by the system, $HOSTNAME is the fully
     * qualifieddomain name of the instance and $SSH_KEY will be the content of the SSH public key.(this is technically
     * optional, but you won't really be able to use instances without it -see our learn guide on templates for more
     * information)
     */
    public readonly cloudConfig!: pulumi.Output<string | undefined>;
    /**
     * This is a unqiue, alphanumerical, short, human readable code for the template (required).
     */
    public readonly code!: pulumi.Output<string>;
    /**
     * The default username to suggest that the user creates (optional: defaults to civo).
     */
    public readonly defaultUsername!: pulumi.Output<string | undefined>;
    /**
     * A multi-line description of the template, in Markdown format (optional).
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * This is the Image ID of any default template or the ID of another template,either owned by you or global (optional; but
     * must be specified if no volume_id is specified).
     */
    public readonly imageId!: pulumi.Output<string | undefined>;
    /**
     * This is a short human readable name for the template (optional).
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A one line description of the template (optional)
     */
    public readonly shortDescription!: pulumi.Output<string | undefined>;
    /**
     * This is the ID of a bootable volume, either owned by you or global(optional; but must be specified if no image_id is
     * specified).
     */
    public readonly volumeId!: pulumi.Output<string | undefined>;

    /**
     * Create a Template resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TemplateArgs | TemplateState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as TemplateState | undefined;
            inputs["cloudConfig"] = state ? state.cloudConfig : undefined;
            inputs["code"] = state ? state.code : undefined;
            inputs["defaultUsername"] = state ? state.defaultUsername : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["imageId"] = state ? state.imageId : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["shortDescription"] = state ? state.shortDescription : undefined;
            inputs["volumeId"] = state ? state.volumeId : undefined;
        } else {
            const args = argsOrState as TemplateArgs | undefined;
            if (!args || args.code === undefined) {
                throw new Error("Missing required property 'code'");
            }
            inputs["cloudConfig"] = args ? args.cloudConfig : undefined;
            inputs["code"] = args ? args.code : undefined;
            inputs["defaultUsername"] = args ? args.defaultUsername : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["imageId"] = args ? args.imageId : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["shortDescription"] = args ? args.shortDescription : undefined;
            inputs["volumeId"] = args ? args.volumeId : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Template.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Template resources.
 */
export interface TemplateState {
    /**
     * Commonly referred to as 'user-data', this is a customisation script that is run afterthe instance is first booted. We
     * recommend using cloud-config as it's a great distribution-agnosticway of configuring cloud servers. If you put
     * $INITIAL_USER in your script, this will automaticallybe replaced by the initial user chosen when creating the instance,
     * $INITIAL_PASSWORD will bereplaced with the random password generated by the system, $HOSTNAME is the fully
     * qualifieddomain name of the instance and $SSH_KEY will be the content of the SSH public key.(this is technically
     * optional, but you won't really be able to use instances without it -see our learn guide on templates for more
     * information)
     */
    readonly cloudConfig?: pulumi.Input<string>;
    /**
     * This is a unqiue, alphanumerical, short, human readable code for the template (required).
     */
    readonly code?: pulumi.Input<string>;
    /**
     * The default username to suggest that the user creates (optional: defaults to civo).
     */
    readonly defaultUsername?: pulumi.Input<string>;
    /**
     * A multi-line description of the template, in Markdown format (optional).
     */
    readonly description?: pulumi.Input<string>;
    /**
     * This is the Image ID of any default template or the ID of another template,either owned by you or global (optional; but
     * must be specified if no volume_id is specified).
     */
    readonly imageId?: pulumi.Input<string>;
    /**
     * This is a short human readable name for the template (optional).
     */
    readonly name?: pulumi.Input<string>;
    /**
     * A one line description of the template (optional)
     */
    readonly shortDescription?: pulumi.Input<string>;
    /**
     * This is the ID of a bootable volume, either owned by you or global(optional; but must be specified if no image_id is
     * specified).
     */
    readonly volumeId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Template resource.
 */
export interface TemplateArgs {
    /**
     * Commonly referred to as 'user-data', this is a customisation script that is run afterthe instance is first booted. We
     * recommend using cloud-config as it's a great distribution-agnosticway of configuring cloud servers. If you put
     * $INITIAL_USER in your script, this will automaticallybe replaced by the initial user chosen when creating the instance,
     * $INITIAL_PASSWORD will bereplaced with the random password generated by the system, $HOSTNAME is the fully
     * qualifieddomain name of the instance and $SSH_KEY will be the content of the SSH public key.(this is technically
     * optional, but you won't really be able to use instances without it -see our learn guide on templates for more
     * information)
     */
    readonly cloudConfig?: pulumi.Input<string>;
    /**
     * This is a unqiue, alphanumerical, short, human readable code for the template (required).
     */
    readonly code: pulumi.Input<string>;
    /**
     * The default username to suggest that the user creates (optional: defaults to civo).
     */
    readonly defaultUsername?: pulumi.Input<string>;
    /**
     * A multi-line description of the template, in Markdown format (optional).
     */
    readonly description?: pulumi.Input<string>;
    /**
     * This is the Image ID of any default template or the ID of another template,either owned by you or global (optional; but
     * must be specified if no volume_id is specified).
     */
    readonly imageId?: pulumi.Input<string>;
    /**
     * This is a short human readable name for the template (optional).
     */
    readonly name?: pulumi.Input<string>;
    /**
     * A one line description of the template (optional)
     */
    readonly shortDescription?: pulumi.Input<string>;
    /**
     * This is the ID of a bootable volume, either owned by you or global(optional; but must be specified if no image_id is
     * specified).
     */
    readonly volumeId?: pulumi.Input<string>;
}
