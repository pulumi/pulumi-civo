// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Retrieves information about the database versions that Civo supports, with the ability to filter the results.
 */
export function getDatabaseVersion(args?: GetDatabaseVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseVersionResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("civo:index/getDatabaseVersion:getDatabaseVersion", {
        "filters": args.filters,
        "sorts": args.sorts,
    }, opts);
}

/**
 * A collection of arguments for invoking getDatabaseVersion.
 */
export interface GetDatabaseVersionArgs {
    /**
     * One or more key/value pairs on which to filter results
     */
    filters?: inputs.GetDatabaseVersionFilter[];
    /**
     * One or more key/direction pairs on which to sort results
     */
    sorts?: inputs.GetDatabaseVersionSort[];
}

/**
 * A collection of values returned by getDatabaseVersion.
 */
export interface GetDatabaseVersionResult {
    /**
     * One or more key/value pairs on which to filter results
     */
    readonly filters?: outputs.GetDatabaseVersionFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * One or more key/direction pairs on which to sort results
     */
    readonly sorts?: outputs.GetDatabaseVersionSort[];
    readonly versions: outputs.GetDatabaseVersionVersion[];
}
/**
 * Retrieves information about the database versions that Civo supports, with the ability to filter the results.
 */
export function getDatabaseVersionOutput(args?: GetDatabaseVersionOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDatabaseVersionResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("civo:index/getDatabaseVersion:getDatabaseVersion", {
        "filters": args.filters,
        "sorts": args.sorts,
    }, opts);
}

/**
 * A collection of arguments for invoking getDatabaseVersion.
 */
export interface GetDatabaseVersionOutputArgs {
    /**
     * One or more key/value pairs on which to filter results
     */
    filters?: pulumi.Input<pulumi.Input<inputs.GetDatabaseVersionFilterArgs>[]>;
    /**
     * One or more key/direction pairs on which to sort results
     */
    sorts?: pulumi.Input<pulumi.Input<inputs.GetDatabaseVersionSortArgs>[]>;
}
