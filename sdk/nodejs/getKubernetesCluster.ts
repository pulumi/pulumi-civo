// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Provides a Civo Kubernetes cluster data source.
 *
 * Note: This data source returns a single Kubernetes cluster. When specifying a name, an error will be raised if more than one Kubernetes cluster found.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as civo from "@pulumi/civo";
 *
 * const my-cluster = civo.getKubernetesCluster({
 *     name: "my-super-cluster",
 * });
 * export const kubernetesClusterOutput = my_cluster.then(my_cluster => my_cluster.masterIp);
 * ```
 *
 * <!-- schema generated by tfplugindocs -->
 * ## Schema
 *
 * ### Optional
 *
 * - **id** (String) The ID of this resource.
 * - **name** (String) The name of the Kubernetes Cluster
 * - **region** (String) The region where cluster is running
 *
 * ### Read-Only
 *
 * - **api_endpoint** (String) The base URL of the API server on the Kubernetes master node
 * - **applications** (String) A list of application installed
 * - **created_at** (String) The date where the Kubernetes cluster was create
 * - **dns_entry** (String) The unique dns entry for the cluster in this case point to the master
 * - **installed_applications** (List of Object) (see below for nested schema)
 * - **instances** (List of Object) (see below for nested schema)
 * - **kubeconfig** (String) A representation of the Kubernetes cluster's kubeconfig in yaml format
 * - **kubernetes_version** (String) The version of Kubernetes
 * - **master_ip** (String) The IP of the Kubernetes master node
 * - **num_target_nodes** (Number) The size of the Kubernetes cluster
 * - **pools** (List of Object) (see below for nested schema)
 * - **ready** (Boolean) If the Kubernetes cluster is ready
 * - **status** (String) The status of Kubernetes cluster
 * - **tags** (String) A list of tags
 * - **target_nodes_size** (String) The size of each node
 *
 * <a id="nestedatt--installed_applications"></a>
 * ### Nested Schema for `installedApplications`
 *
 * Read-Only:
 *
 * - **application** (String)
 * - **category** (String)
 * - **installed** (Boolean)
 * - **version** (String)
 *
 * <a id="nestedatt--instances"></a>
 * ### Nested Schema for `instances`
 *
 * Read-Only:
 *
 * - **cpu_cores** (Number)
 * - **disk_gb** (Number)
 * - **hostname** (String)
 * - **ram_mb** (Number)
 * - **size** (String)
 * - **status** (String)
 * - **tags** (Set of String)
 *
 * <a id="nestedatt--pools"></a>
 * ### Nested Schema for `pools`
 *
 * Read-Only:
 *
 * - **count** (Number)
 * - **id** (String)
 * - **instance_names** (Set of String)
 * - **instances** (List of Object) (see below for nested schema)
 * - **size** (String)
 *
 * <a id="nestedobjatt--pools--instances"></a>
 * ### Nested Schema for `pools.instances`
 *
 * Read-Only:
 *
 * - **cpu_cores** (Number)
 * - **disk_gb** (Number)
 * - **hostname** (String)
 * - **ram_mb** (Number)
 * - **size** (String)
 * - **status** (String)
 * - **tags** (Set of String)
 */
export function getKubernetesCluster(args?: GetKubernetesClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetKubernetesClusterResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("civo:index/getKubernetesCluster:getKubernetesCluster", {
        "id": args.id,
        "name": args.name,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getKubernetesCluster.
 */
export interface GetKubernetesClusterArgs {
    readonly id?: string;
    readonly name?: string;
    readonly region?: string;
}

/**
 * A collection of values returned by getKubernetesCluster.
 */
export interface GetKubernetesClusterResult {
    readonly apiEndpoint: string;
    readonly applications: string;
    readonly createdAt: string;
    readonly dnsEntry: string;
    readonly id?: string;
    readonly installedApplications: outputs.GetKubernetesClusterInstalledApplication[];
    readonly instances: outputs.GetKubernetesClusterInstance[];
    readonly kubeconfig: string;
    readonly kubernetesVersion: string;
    readonly masterIp: string;
    readonly name?: string;
    readonly numTargetNodes: number;
    readonly pools: outputs.GetKubernetesClusterPool[];
    readonly ready: boolean;
    readonly region?: string;
    readonly status: string;
    readonly tags: string;
    readonly targetNodesSize: string;
}
