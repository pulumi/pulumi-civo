// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides an Object Store resource. This can be used to create, modify, and delete object stores.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as civo from "@pulumi/civo";
 *
 * const backup = new civo.ObjectStore("backup", {
 *     maxSizeGb: 500,
 *     region: "LON1",
 * });
 * ```
 *
 * ## Import
 *
 * # using ID
 *
 * ```sh
 *  $ pulumi import civo:index/objectStore:ObjectStore custom_object b8ecd2ab-2267-4a5e-8692-cbf1d32583e3
 * ```
 */
export class ObjectStore extends pulumi.CustomResource {
    /**
     * Get an existing ObjectStore resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectStoreState, opts?: pulumi.CustomResourceOptions): ObjectStore {
        return new ObjectStore(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'civo:index/objectStore:ObjectStore';

    /**
     * Returns true if the given object is an instance of ObjectStore.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectStore {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectStore.__pulumiType;
    }

    /**
     * The access key ID from the Object Store credential. If this is not set, a new credential will be created.
     */
    public readonly accessKeyId!: pulumi.Output<string>;
    /**
     * The endpoint of the Object Store. It is generated by the provider.
     */
    public /*out*/ readonly bucketUrl!: pulumi.Output<string>;
    /**
     * The maximum size of the Object Store. Default is 500GB.
     */
    public readonly maxSizeGb!: pulumi.Output<number | undefined>;
    /**
     * The name of the Object Store. Must be unique.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The region for the Object Store, if not declared we use the region as declared in the provider (Defaults to LON1)
     */
    public readonly region!: pulumi.Output<string | undefined>;
    /**
     * The status of the Object Store.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a ObjectStore resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ObjectStoreArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectStoreArgs | ObjectStoreState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectStoreState | undefined;
            resourceInputs["accessKeyId"] = state ? state.accessKeyId : undefined;
            resourceInputs["bucketUrl"] = state ? state.bucketUrl : undefined;
            resourceInputs["maxSizeGb"] = state ? state.maxSizeGb : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as ObjectStoreArgs | undefined;
            resourceInputs["accessKeyId"] = args ? args.accessKeyId : undefined;
            resourceInputs["maxSizeGb"] = args ? args.maxSizeGb : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["bucketUrl"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectStore.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ObjectStore resources.
 */
export interface ObjectStoreState {
    /**
     * The access key ID from the Object Store credential. If this is not set, a new credential will be created.
     */
    accessKeyId?: pulumi.Input<string>;
    /**
     * The endpoint of the Object Store. It is generated by the provider.
     */
    bucketUrl?: pulumi.Input<string>;
    /**
     * The maximum size of the Object Store. Default is 500GB.
     */
    maxSizeGb?: pulumi.Input<number>;
    /**
     * The name of the Object Store. Must be unique.
     */
    name?: pulumi.Input<string>;
    /**
     * The region for the Object Store, if not declared we use the region as declared in the provider (Defaults to LON1)
     */
    region?: pulumi.Input<string>;
    /**
     * The status of the Object Store.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectStore resource.
 */
export interface ObjectStoreArgs {
    /**
     * The access key ID from the Object Store credential. If this is not set, a new credential will be created.
     */
    accessKeyId?: pulumi.Input<string>;
    /**
     * The maximum size of the Object Store. Default is 500GB.
     */
    maxSizeGb?: pulumi.Input<number>;
    /**
     * The name of the Object Store. Must be unique.
     */
    name?: pulumi.Input<string>;
    /**
     * The region for the Object Store, if not declared we use the region as declared in the provider (Defaults to LON1)
     */
    region?: pulumi.Input<string>;
}
