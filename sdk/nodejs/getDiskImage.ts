// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Get information on an disk image for use in other resources (e.g. creating a Instance).
 */
export function getDiskImage(args?: GetDiskImageArgs, opts?: pulumi.InvokeOptions): Promise<GetDiskImageResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("civo:index/getDiskImage:getDiskImage", {
        "filters": args.filters,
        "region": args.region,
        "sorts": args.sorts,
    }, opts);
}

/**
 * A collection of arguments for invoking getDiskImage.
 */
export interface GetDiskImageArgs {
    /**
     * Filter the results. The `filter` block is documented below.
     */
    readonly filters?: inputs.GetDiskImageFilter[];
    /**
     * If is used, them all diskImage will be from that region, has to be declared here if is not declared in the provider
     */
    readonly region?: string;
    /**
     * Sort the results. The `sort` block is documented below.
     */
    readonly sorts?: inputs.GetDiskImageSort[];
}

/**
 * A collection of values returned by getDiskImage.
 */
export interface GetDiskImageResult {
    readonly diskimages: outputs.GetDiskImageDiskimage[];
    readonly filters?: outputs.GetDiskImageFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly region?: string;
    readonly sorts?: outputs.GetDiskImageSort[];
}
