// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Get information on an disk image for use in other resources (e.g. creating a instance) with the ability to filter the results.
 *
 * ## Schema
 *
 * ### Optional
 *
 * - **filter** (Block Set) One or more key/value pairs on which to filter results (see below for nested schema)
 * - **id** (String) The ID of this resource.
 * - **region** (String) If is used, all disk image will be from this region. Required if no region is set in provider.
 * - **sort** (Block List) One or more key/direction pairs on which to sort results (see below for nested schema)
 *
 * ### Read-Only
 *
 * - **diskimages** (List of Object) (see below for nested schema)
 *
 * <a id="nestedblock--filter"></a>
 * ### Nested Schema for `filter`
 *
 * Required:
 *
 * - **key** (String) Filter diskimages by this key. This may be one of `id`, `label`, `name`, `version`.
 * - **values** (List of String) Only retrieves `diskimages` which keys has value that matches one of the values provided here
 *
 * Optional:
 *
 * - **all** (Boolean) Set to `true` to require that a field match all of the `values` instead of just one or more of them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure that all of the `values` are present in the list or set.
 * - **match_by** (String) One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as substrings to find within the string field.
 *
 * <a id="nestedblock--sort"></a>
 * ### Nested Schema for `sort`
 *
 * Required:
 *
 * - **key** (String) Sort diskimages by this key. This may be one of `id`, `label`, `name`, `version`.
 *
 * Optional:
 *
 * - **direction** (String) The sort direction. This may be either `asc` or `desc`.
 *
 * <a id="nestedatt--diskimages"></a>
 * ### Nested Schema for `diskimages`
 *
 * Read-Only:
 *
 * - **id** (String)
 * - **label** (String)
 * - **name** (String)
 * - **version** (String)
 */
export function getDiskImage(args?: GetDiskImageArgs, opts?: pulumi.InvokeOptions): Promise<GetDiskImageResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("civo:index/getDiskImage:getDiskImage", {
        "filters": args.filters,
        "region": args.region,
        "sorts": args.sorts,
    }, opts);
}

/**
 * A collection of arguments for invoking getDiskImage.
 */
export interface GetDiskImageArgs {
    readonly filters?: inputs.GetDiskImageFilter[];
    readonly region?: string;
    readonly sorts?: inputs.GetDiskImageSort[];
}

/**
 * A collection of values returned by getDiskImage.
 */
export interface GetDiskImageResult {
    readonly diskimages: outputs.GetDiskImageDiskimage[];
    readonly filters?: outputs.GetDiskImageFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly region?: string;
    readonly sorts?: outputs.GetDiskImageSort[];
}
