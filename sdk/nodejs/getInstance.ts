// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Get information on an instance for use in other resources. This data source provides all of the instance's properties as configured on your Civo account.
 *
 * Note: This data source returns a single instance. When specifying a hostname, an error will be raised if more than one instances found.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as civo from "@pulumi/civo";
 *
 * const myhostaname = civo.getInstance({
 *     hostname: "myhostname.com",
 * });
 * export const instanceOutput = myhostaname.then(myhostaname => myhostaname.publicIp);
 * ```
 */
export function getInstance(args?: GetInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetInstanceResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("civo:index/getInstance:getInstance", {
        "hostname": args.hostname,
        "id": args.id,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getInstance.
 */
export interface GetInstanceArgs {
    hostname?: string;
    id?: string;
    region?: string;
}

/**
 * A collection of values returned by getInstance.
 */
export interface GetInstanceResult {
    readonly cpuCores: number;
    readonly createdAt: string;
    readonly diskGb: number;
    readonly firewallId: string;
    readonly hostname?: string;
    readonly id?: string;
    readonly initialPassword: string;
    readonly initialUser: string;
    readonly networkId: string;
    readonly notes: string;
    readonly privateIp: string;
    readonly pseudoIp: string;
    readonly publicIp: string;
    readonly ramMb: number;
    readonly region?: string;
    readonly reverseDns: string;
    readonly script: string;
    readonly size: string;
    readonly sshkeyId: string;
    readonly status: string;
    readonly tags: string[];
    readonly template: string;
}

export function getInstanceOutput(args?: GetInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInstanceResult> {
    return pulumi.output(args).apply(a => getInstance(a, opts))
}

/**
 * A collection of arguments for invoking getInstance.
 */
export interface GetInstanceOutputArgs {
    hostname?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}
