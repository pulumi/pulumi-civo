// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.civo.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSizeSize {
    private Integer cpu;
    private String description;
    private Integer disk;
    private Integer gpu;
    private String gpuType;
    private String name;
    private Integer ram;
    private Boolean selectable;
    private String type;

    private GetSizeSize() {}
    public Integer cpu() {
        return this.cpu;
    }
    public String description() {
        return this.description;
    }
    public Integer disk() {
        return this.disk;
    }
    public Integer gpu() {
        return this.gpu;
    }
    public String gpuType() {
        return this.gpuType;
    }
    public String name() {
        return this.name;
    }
    public Integer ram() {
        return this.ram;
    }
    public Boolean selectable() {
        return this.selectable;
    }
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSizeSize defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer cpu;
        private String description;
        private Integer disk;
        private Integer gpu;
        private String gpuType;
        private String name;
        private Integer ram;
        private Boolean selectable;
        private String type;
        public Builder() {}
        public Builder(GetSizeSize defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cpu = defaults.cpu;
    	      this.description = defaults.description;
    	      this.disk = defaults.disk;
    	      this.gpu = defaults.gpu;
    	      this.gpuType = defaults.gpuType;
    	      this.name = defaults.name;
    	      this.ram = defaults.ram;
    	      this.selectable = defaults.selectable;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder cpu(Integer cpu) {
            if (cpu == null) {
              throw new MissingRequiredPropertyException("GetSizeSize", "cpu");
            }
            this.cpu = cpu;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetSizeSize", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder disk(Integer disk) {
            if (disk == null) {
              throw new MissingRequiredPropertyException("GetSizeSize", "disk");
            }
            this.disk = disk;
            return this;
        }
        @CustomType.Setter
        public Builder gpu(Integer gpu) {
            if (gpu == null) {
              throw new MissingRequiredPropertyException("GetSizeSize", "gpu");
            }
            this.gpu = gpu;
            return this;
        }
        @CustomType.Setter
        public Builder gpuType(String gpuType) {
            if (gpuType == null) {
              throw new MissingRequiredPropertyException("GetSizeSize", "gpuType");
            }
            this.gpuType = gpuType;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetSizeSize", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder ram(Integer ram) {
            if (ram == null) {
              throw new MissingRequiredPropertyException("GetSizeSize", "ram");
            }
            this.ram = ram;
            return this;
        }
        @CustomType.Setter
        public Builder selectable(Boolean selectable) {
            if (selectable == null) {
              throw new MissingRequiredPropertyException("GetSizeSize", "selectable");
            }
            this.selectable = selectable;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetSizeSize", "type");
            }
            this.type = type;
            return this;
        }
        public GetSizeSize build() {
            final var _resultValue = new GetSizeSize();
            _resultValue.cpu = cpu;
            _resultValue.description = description;
            _resultValue.disk = disk;
            _resultValue.gpu = gpu;
            _resultValue.gpuType = gpuType;
            _resultValue.name = name;
            _resultValue.ram = ram;
            _resultValue.selectable = selectable;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
