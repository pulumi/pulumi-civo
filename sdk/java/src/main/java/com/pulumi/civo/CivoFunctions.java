// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.civo;

import com.pulumi.civo.Utilities;
import com.pulumi.civo.inputs.GetDiskImageArgs;
import com.pulumi.civo.inputs.GetDiskImagePlainArgs;
import com.pulumi.civo.inputs.GetDnsDomainNameArgs;
import com.pulumi.civo.inputs.GetDnsDomainNamePlainArgs;
import com.pulumi.civo.inputs.GetDnsDomainRecordArgs;
import com.pulumi.civo.inputs.GetDnsDomainRecordPlainArgs;
import com.pulumi.civo.inputs.GetFirewallArgs;
import com.pulumi.civo.inputs.GetFirewallPlainArgs;
import com.pulumi.civo.inputs.GetInstanceArgs;
import com.pulumi.civo.inputs.GetInstancePlainArgs;
import com.pulumi.civo.inputs.GetInstancesArgs;
import com.pulumi.civo.inputs.GetInstancesPlainArgs;
import com.pulumi.civo.inputs.GetInstancesSizeArgs;
import com.pulumi.civo.inputs.GetInstancesSizePlainArgs;
import com.pulumi.civo.inputs.GetKubernetesClusterArgs;
import com.pulumi.civo.inputs.GetKubernetesClusterPlainArgs;
import com.pulumi.civo.inputs.GetKubernetesVersionArgs;
import com.pulumi.civo.inputs.GetKubernetesVersionPlainArgs;
import com.pulumi.civo.inputs.GetLoadBalancerArgs;
import com.pulumi.civo.inputs.GetLoadBalancerPlainArgs;
import com.pulumi.civo.inputs.GetNetworkArgs;
import com.pulumi.civo.inputs.GetNetworkPlainArgs;
import com.pulumi.civo.inputs.GetObjectStoreArgs;
import com.pulumi.civo.inputs.GetObjectStorePlainArgs;
import com.pulumi.civo.inputs.GetRegionArgs;
import com.pulumi.civo.inputs.GetRegionPlainArgs;
import com.pulumi.civo.inputs.GetReservedIpArgs;
import com.pulumi.civo.inputs.GetReservedIpPlainArgs;
import com.pulumi.civo.inputs.GetSizeArgs;
import com.pulumi.civo.inputs.GetSizePlainArgs;
import com.pulumi.civo.inputs.GetSshKeyArgs;
import com.pulumi.civo.inputs.GetSshKeyPlainArgs;
import com.pulumi.civo.inputs.GetVolumeArgs;
import com.pulumi.civo.inputs.GetVolumePlainArgs;
import com.pulumi.civo.outputs.GetDiskImageResult;
import com.pulumi.civo.outputs.GetDnsDomainNameResult;
import com.pulumi.civo.outputs.GetDnsDomainRecordResult;
import com.pulumi.civo.outputs.GetFirewallResult;
import com.pulumi.civo.outputs.GetInstanceResult;
import com.pulumi.civo.outputs.GetInstancesResult;
import com.pulumi.civo.outputs.GetInstancesSizeResult;
import com.pulumi.civo.outputs.GetKubernetesClusterResult;
import com.pulumi.civo.outputs.GetKubernetesVersionResult;
import com.pulumi.civo.outputs.GetLoadBalancerResult;
import com.pulumi.civo.outputs.GetNetworkResult;
import com.pulumi.civo.outputs.GetObjectStoreResult;
import com.pulumi.civo.outputs.GetRegionResult;
import com.pulumi.civo.outputs.GetReservedIpResult;
import com.pulumi.civo.outputs.GetSizeResult;
import com.pulumi.civo.outputs.GetSshKeyResult;
import com.pulumi.civo.outputs.GetVolumeResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import java.util.concurrent.CompletableFuture;

public final class CivoFunctions {
    /**
     * Get information on an disk image for use in other resources (e.g. creating a instance) with the ability to filter the results.
     * 
     */
    public static Output<GetDiskImageResult> getDiskImage() {
        return getDiskImage(GetDiskImageArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get information on an disk image for use in other resources (e.g. creating a instance) with the ability to filter the results.
     * 
     */
    public static CompletableFuture<GetDiskImageResult> getDiskImagePlain() {
        return getDiskImagePlain(GetDiskImagePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get information on an disk image for use in other resources (e.g. creating a instance) with the ability to filter the results.
     * 
     */
    public static Output<GetDiskImageResult> getDiskImage(GetDiskImageArgs args) {
        return getDiskImage(args, InvokeOptions.Empty);
    }
    /**
     * Get information on an disk image for use in other resources (e.g. creating a instance) with the ability to filter the results.
     * 
     */
    public static CompletableFuture<GetDiskImageResult> getDiskImagePlain(GetDiskImagePlainArgs args) {
        return getDiskImagePlain(args, InvokeOptions.Empty);
    }
    /**
     * Get information on an disk image for use in other resources (e.g. creating a instance) with the ability to filter the results.
     * 
     */
    public static Output<GetDiskImageResult> getDiskImage(GetDiskImageArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("civo:index/getDiskImage:getDiskImage", TypeShape.of(GetDiskImageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information on an disk image for use in other resources (e.g. creating a instance) with the ability to filter the results.
     * 
     */
    public static CompletableFuture<GetDiskImageResult> getDiskImagePlain(GetDiskImagePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("civo:index/getDiskImage:getDiskImage", TypeShape.of(GetDiskImageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information on a domain. This data source provides the name and the id.
     * 
     * An error will be raised if the provided domain name is not in your Civo account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetDnsDomainNameArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var domain = CivoFunctions.getDnsDomainName(GetDnsDomainNameArgs.builder()
     *             .name(&#34;domain.com&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;domainOutput&#34;, domain.applyValue(getDnsDomainNameResult -&gt; getDnsDomainNameResult.name()));
     *         ctx.export(&#34;domainIdOutput&#34;, domain.applyValue(getDnsDomainNameResult -&gt; getDnsDomainNameResult.id()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetDnsDomainNameResult> getDnsDomainName() {
        return getDnsDomainName(GetDnsDomainNameArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get information on a domain. This data source provides the name and the id.
     * 
     * An error will be raised if the provided domain name is not in your Civo account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetDnsDomainNameArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var domain = CivoFunctions.getDnsDomainName(GetDnsDomainNameArgs.builder()
     *             .name(&#34;domain.com&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;domainOutput&#34;, domain.applyValue(getDnsDomainNameResult -&gt; getDnsDomainNameResult.name()));
     *         ctx.export(&#34;domainIdOutput&#34;, domain.applyValue(getDnsDomainNameResult -&gt; getDnsDomainNameResult.id()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetDnsDomainNameResult> getDnsDomainNamePlain() {
        return getDnsDomainNamePlain(GetDnsDomainNamePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get information on a domain. This data source provides the name and the id.
     * 
     * An error will be raised if the provided domain name is not in your Civo account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetDnsDomainNameArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var domain = CivoFunctions.getDnsDomainName(GetDnsDomainNameArgs.builder()
     *             .name(&#34;domain.com&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;domainOutput&#34;, domain.applyValue(getDnsDomainNameResult -&gt; getDnsDomainNameResult.name()));
     *         ctx.export(&#34;domainIdOutput&#34;, domain.applyValue(getDnsDomainNameResult -&gt; getDnsDomainNameResult.id()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetDnsDomainNameResult> getDnsDomainName(GetDnsDomainNameArgs args) {
        return getDnsDomainName(args, InvokeOptions.Empty);
    }
    /**
     * Get information on a domain. This data source provides the name and the id.
     * 
     * An error will be raised if the provided domain name is not in your Civo account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetDnsDomainNameArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var domain = CivoFunctions.getDnsDomainName(GetDnsDomainNameArgs.builder()
     *             .name(&#34;domain.com&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;domainOutput&#34;, domain.applyValue(getDnsDomainNameResult -&gt; getDnsDomainNameResult.name()));
     *         ctx.export(&#34;domainIdOutput&#34;, domain.applyValue(getDnsDomainNameResult -&gt; getDnsDomainNameResult.id()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetDnsDomainNameResult> getDnsDomainNamePlain(GetDnsDomainNamePlainArgs args) {
        return getDnsDomainNamePlain(args, InvokeOptions.Empty);
    }
    /**
     * Get information on a domain. This data source provides the name and the id.
     * 
     * An error will be raised if the provided domain name is not in your Civo account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetDnsDomainNameArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var domain = CivoFunctions.getDnsDomainName(GetDnsDomainNameArgs.builder()
     *             .name(&#34;domain.com&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;domainOutput&#34;, domain.applyValue(getDnsDomainNameResult -&gt; getDnsDomainNameResult.name()));
     *         ctx.export(&#34;domainIdOutput&#34;, domain.applyValue(getDnsDomainNameResult -&gt; getDnsDomainNameResult.id()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetDnsDomainNameResult> getDnsDomainName(GetDnsDomainNameArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("civo:index/getDnsDomainName:getDnsDomainName", TypeShape.of(GetDnsDomainNameResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information on a domain. This data source provides the name and the id.
     * 
     * An error will be raised if the provided domain name is not in your Civo account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetDnsDomainNameArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var domain = CivoFunctions.getDnsDomainName(GetDnsDomainNameArgs.builder()
     *             .name(&#34;domain.com&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;domainOutput&#34;, domain.applyValue(getDnsDomainNameResult -&gt; getDnsDomainNameResult.name()));
     *         ctx.export(&#34;domainIdOutput&#34;, domain.applyValue(getDnsDomainNameResult -&gt; getDnsDomainNameResult.id()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetDnsDomainNameResult> getDnsDomainNamePlain(GetDnsDomainNamePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("civo:index/getDnsDomainName:getDnsDomainName", TypeShape.of(GetDnsDomainNameResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information on a DNS record. This data source provides the name, TTL, and zone file as configured on your Civo account.
     * 
     * An error will be raised if the provided domain name or record are not in your Civo account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetDnsDomainNameArgs;
     * import com.pulumi.civo.inputs.GetDnsDomainRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var domain = CivoFunctions.getDnsDomainName(GetDnsDomainNameArgs.builder()
     *             .name(&#34;domain.com&#34;)
     *             .build());
     * 
     *         final var www = CivoFunctions.getDnsDomainRecord(GetDnsDomainRecordArgs.builder()
     *             .domainId(domain.applyValue(getDnsDomainNameResult -&gt; getDnsDomainNameResult.id()))
     *             .name(&#34;www&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;recordType&#34;, www.applyValue(getDnsDomainRecordResult -&gt; getDnsDomainRecordResult.type()));
     *         ctx.export(&#34;recordTtl&#34;, www.applyValue(getDnsDomainRecordResult -&gt; getDnsDomainRecordResult.ttl()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetDnsDomainRecordResult> getDnsDomainRecord(GetDnsDomainRecordArgs args) {
        return getDnsDomainRecord(args, InvokeOptions.Empty);
    }
    /**
     * Get information on a DNS record. This data source provides the name, TTL, and zone file as configured on your Civo account.
     * 
     * An error will be raised if the provided domain name or record are not in your Civo account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetDnsDomainNameArgs;
     * import com.pulumi.civo.inputs.GetDnsDomainRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var domain = CivoFunctions.getDnsDomainName(GetDnsDomainNameArgs.builder()
     *             .name(&#34;domain.com&#34;)
     *             .build());
     * 
     *         final var www = CivoFunctions.getDnsDomainRecord(GetDnsDomainRecordArgs.builder()
     *             .domainId(domain.applyValue(getDnsDomainNameResult -&gt; getDnsDomainNameResult.id()))
     *             .name(&#34;www&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;recordType&#34;, www.applyValue(getDnsDomainRecordResult -&gt; getDnsDomainRecordResult.type()));
     *         ctx.export(&#34;recordTtl&#34;, www.applyValue(getDnsDomainRecordResult -&gt; getDnsDomainRecordResult.ttl()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetDnsDomainRecordResult> getDnsDomainRecordPlain(GetDnsDomainRecordPlainArgs args) {
        return getDnsDomainRecordPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get information on a DNS record. This data source provides the name, TTL, and zone file as configured on your Civo account.
     * 
     * An error will be raised if the provided domain name or record are not in your Civo account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetDnsDomainNameArgs;
     * import com.pulumi.civo.inputs.GetDnsDomainRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var domain = CivoFunctions.getDnsDomainName(GetDnsDomainNameArgs.builder()
     *             .name(&#34;domain.com&#34;)
     *             .build());
     * 
     *         final var www = CivoFunctions.getDnsDomainRecord(GetDnsDomainRecordArgs.builder()
     *             .domainId(domain.applyValue(getDnsDomainNameResult -&gt; getDnsDomainNameResult.id()))
     *             .name(&#34;www&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;recordType&#34;, www.applyValue(getDnsDomainRecordResult -&gt; getDnsDomainRecordResult.type()));
     *         ctx.export(&#34;recordTtl&#34;, www.applyValue(getDnsDomainRecordResult -&gt; getDnsDomainRecordResult.ttl()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetDnsDomainRecordResult> getDnsDomainRecord(GetDnsDomainRecordArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("civo:index/getDnsDomainRecord:getDnsDomainRecord", TypeShape.of(GetDnsDomainRecordResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information on a DNS record. This data source provides the name, TTL, and zone file as configured on your Civo account.
     * 
     * An error will be raised if the provided domain name or record are not in your Civo account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetDnsDomainNameArgs;
     * import com.pulumi.civo.inputs.GetDnsDomainRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var domain = CivoFunctions.getDnsDomainName(GetDnsDomainNameArgs.builder()
     *             .name(&#34;domain.com&#34;)
     *             .build());
     * 
     *         final var www = CivoFunctions.getDnsDomainRecord(GetDnsDomainRecordArgs.builder()
     *             .domainId(domain.applyValue(getDnsDomainNameResult -&gt; getDnsDomainNameResult.id()))
     *             .name(&#34;www&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;recordType&#34;, www.applyValue(getDnsDomainRecordResult -&gt; getDnsDomainRecordResult.type()));
     *         ctx.export(&#34;recordTtl&#34;, www.applyValue(getDnsDomainRecordResult -&gt; getDnsDomainRecordResult.ttl()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetDnsDomainRecordResult> getDnsDomainRecordPlain(GetDnsDomainRecordPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("civo:index/getDnsDomainRecord:getDnsDomainRecord", TypeShape.of(GetDnsDomainRecordResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieve information about a firewall for use in other resources.
     * 
     * This data source provides all of the firewall&#39;s properties as configured on your Civo account.
     * 
     * Firewalls may be looked up by id or name, and you can optionally pass region if you want to make a lookup for an expecific firewall inside that region.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetFirewallArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = CivoFunctions.getFirewall(GetFirewallArgs.builder()
     *             .name(&#34;test-firewall&#34;)
     *             .region(&#34;NYC1&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetFirewallResult> getFirewall() {
        return getFirewall(GetFirewallArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieve information about a firewall for use in other resources.
     * 
     * This data source provides all of the firewall&#39;s properties as configured on your Civo account.
     * 
     * Firewalls may be looked up by id or name, and you can optionally pass region if you want to make a lookup for an expecific firewall inside that region.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetFirewallArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = CivoFunctions.getFirewall(GetFirewallArgs.builder()
     *             .name(&#34;test-firewall&#34;)
     *             .region(&#34;NYC1&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetFirewallResult> getFirewallPlain() {
        return getFirewallPlain(GetFirewallPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieve information about a firewall for use in other resources.
     * 
     * This data source provides all of the firewall&#39;s properties as configured on your Civo account.
     * 
     * Firewalls may be looked up by id or name, and you can optionally pass region if you want to make a lookup for an expecific firewall inside that region.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetFirewallArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = CivoFunctions.getFirewall(GetFirewallArgs.builder()
     *             .name(&#34;test-firewall&#34;)
     *             .region(&#34;NYC1&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetFirewallResult> getFirewall(GetFirewallArgs args) {
        return getFirewall(args, InvokeOptions.Empty);
    }
    /**
     * Retrieve information about a firewall for use in other resources.
     * 
     * This data source provides all of the firewall&#39;s properties as configured on your Civo account.
     * 
     * Firewalls may be looked up by id or name, and you can optionally pass region if you want to make a lookup for an expecific firewall inside that region.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetFirewallArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = CivoFunctions.getFirewall(GetFirewallArgs.builder()
     *             .name(&#34;test-firewall&#34;)
     *             .region(&#34;NYC1&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetFirewallResult> getFirewallPlain(GetFirewallPlainArgs args) {
        return getFirewallPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieve information about a firewall for use in other resources.
     * 
     * This data source provides all of the firewall&#39;s properties as configured on your Civo account.
     * 
     * Firewalls may be looked up by id or name, and you can optionally pass region if you want to make a lookup for an expecific firewall inside that region.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetFirewallArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = CivoFunctions.getFirewall(GetFirewallArgs.builder()
     *             .name(&#34;test-firewall&#34;)
     *             .region(&#34;NYC1&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetFirewallResult> getFirewall(GetFirewallArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("civo:index/getFirewall:getFirewall", TypeShape.of(GetFirewallResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieve information about a firewall for use in other resources.
     * 
     * This data source provides all of the firewall&#39;s properties as configured on your Civo account.
     * 
     * Firewalls may be looked up by id or name, and you can optionally pass region if you want to make a lookup for an expecific firewall inside that region.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetFirewallArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = CivoFunctions.getFirewall(GetFirewallArgs.builder()
     *             .name(&#34;test-firewall&#34;)
     *             .region(&#34;NYC1&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetFirewallResult> getFirewallPlain(GetFirewallPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("civo:index/getFirewall:getFirewall", TypeShape.of(GetFirewallResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information on an instance for use in other resources. This data source provides all of the instance&#39;s properties as configured on your Civo account.
     * 
     * Note: This data source returns a single instance. When specifying a hostname, an error will be raised if more than one instances found.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myhostaname = CivoFunctions.getInstance(GetInstanceArgs.builder()
     *             .hostname(&#34;myhostname.com&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;instanceOutput&#34;, myhostaname.applyValue(getInstanceResult -&gt; getInstanceResult.publicIp()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetInstanceResult> getInstance() {
        return getInstance(GetInstanceArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get information on an instance for use in other resources. This data source provides all of the instance&#39;s properties as configured on your Civo account.
     * 
     * Note: This data source returns a single instance. When specifying a hostname, an error will be raised if more than one instances found.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myhostaname = CivoFunctions.getInstance(GetInstanceArgs.builder()
     *             .hostname(&#34;myhostname.com&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;instanceOutput&#34;, myhostaname.applyValue(getInstanceResult -&gt; getInstanceResult.publicIp()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetInstanceResult> getInstancePlain() {
        return getInstancePlain(GetInstancePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get information on an instance for use in other resources. This data source provides all of the instance&#39;s properties as configured on your Civo account.
     * 
     * Note: This data source returns a single instance. When specifying a hostname, an error will be raised if more than one instances found.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myhostaname = CivoFunctions.getInstance(GetInstanceArgs.builder()
     *             .hostname(&#34;myhostname.com&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;instanceOutput&#34;, myhostaname.applyValue(getInstanceResult -&gt; getInstanceResult.publicIp()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetInstanceResult> getInstance(GetInstanceArgs args) {
        return getInstance(args, InvokeOptions.Empty);
    }
    /**
     * Get information on an instance for use in other resources. This data source provides all of the instance&#39;s properties as configured on your Civo account.
     * 
     * Note: This data source returns a single instance. When specifying a hostname, an error will be raised if more than one instances found.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myhostaname = CivoFunctions.getInstance(GetInstanceArgs.builder()
     *             .hostname(&#34;myhostname.com&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;instanceOutput&#34;, myhostaname.applyValue(getInstanceResult -&gt; getInstanceResult.publicIp()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetInstanceResult> getInstancePlain(GetInstancePlainArgs args) {
        return getInstancePlain(args, InvokeOptions.Empty);
    }
    /**
     * Get information on an instance for use in other resources. This data source provides all of the instance&#39;s properties as configured on your Civo account.
     * 
     * Note: This data source returns a single instance. When specifying a hostname, an error will be raised if more than one instances found.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myhostaname = CivoFunctions.getInstance(GetInstanceArgs.builder()
     *             .hostname(&#34;myhostname.com&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;instanceOutput&#34;, myhostaname.applyValue(getInstanceResult -&gt; getInstanceResult.publicIp()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetInstanceResult> getInstance(GetInstanceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("civo:index/getInstance:getInstance", TypeShape.of(GetInstanceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information on an instance for use in other resources. This data source provides all of the instance&#39;s properties as configured on your Civo account.
     * 
     * Note: This data source returns a single instance. When specifying a hostname, an error will be raised if more than one instances found.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myhostaname = CivoFunctions.getInstance(GetInstanceArgs.builder()
     *             .hostname(&#34;myhostname.com&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;instanceOutput&#34;, myhostaname.applyValue(getInstanceResult -&gt; getInstanceResult.publicIp()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetInstanceResult> getInstancePlain(GetInstancePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("civo:index/getInstance:getInstance", TypeShape.of(GetInstanceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information on instances for use in other resources, with the ability to filter and sort the results. If no filters are specified, all instances will be returned.
     * 
     * Note: You can use the `civo.Instance` data source to obtain metadata about a single instance if you already know the id, unique hostname, or unique tag to retrieve.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var small-size = CivoFunctions.getInstances(GetInstancesArgs.builder()
     *             .region(&#34;NYC1&#34;)
     *             .filters(GetInstancesFilterArgs.builder()
     *                 .key(&#34;size&#34;)
     *                 .values(g3.small())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetInstancesResult> getInstances() {
        return getInstances(GetInstancesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get information on instances for use in other resources, with the ability to filter and sort the results. If no filters are specified, all instances will be returned.
     * 
     * Note: You can use the `civo.Instance` data source to obtain metadata about a single instance if you already know the id, unique hostname, or unique tag to retrieve.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var small-size = CivoFunctions.getInstances(GetInstancesArgs.builder()
     *             .region(&#34;NYC1&#34;)
     *             .filters(GetInstancesFilterArgs.builder()
     *                 .key(&#34;size&#34;)
     *                 .values(g3.small())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetInstancesResult> getInstancesPlain() {
        return getInstancesPlain(GetInstancesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get information on instances for use in other resources, with the ability to filter and sort the results. If no filters are specified, all instances will be returned.
     * 
     * Note: You can use the `civo.Instance` data source to obtain metadata about a single instance if you already know the id, unique hostname, or unique tag to retrieve.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var small-size = CivoFunctions.getInstances(GetInstancesArgs.builder()
     *             .region(&#34;NYC1&#34;)
     *             .filters(GetInstancesFilterArgs.builder()
     *                 .key(&#34;size&#34;)
     *                 .values(g3.small())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetInstancesResult> getInstances(GetInstancesArgs args) {
        return getInstances(args, InvokeOptions.Empty);
    }
    /**
     * Get information on instances for use in other resources, with the ability to filter and sort the results. If no filters are specified, all instances will be returned.
     * 
     * Note: You can use the `civo.Instance` data source to obtain metadata about a single instance if you already know the id, unique hostname, or unique tag to retrieve.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var small-size = CivoFunctions.getInstances(GetInstancesArgs.builder()
     *             .region(&#34;NYC1&#34;)
     *             .filters(GetInstancesFilterArgs.builder()
     *                 .key(&#34;size&#34;)
     *                 .values(g3.small())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetInstancesResult> getInstancesPlain(GetInstancesPlainArgs args) {
        return getInstancesPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get information on instances for use in other resources, with the ability to filter and sort the results. If no filters are specified, all instances will be returned.
     * 
     * Note: You can use the `civo.Instance` data source to obtain metadata about a single instance if you already know the id, unique hostname, or unique tag to retrieve.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var small-size = CivoFunctions.getInstances(GetInstancesArgs.builder()
     *             .region(&#34;NYC1&#34;)
     *             .filters(GetInstancesFilterArgs.builder()
     *                 .key(&#34;size&#34;)
     *                 .values(g3.small())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetInstancesResult> getInstances(GetInstancesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("civo:index/getInstances:getInstances", TypeShape.of(GetInstancesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information on instances for use in other resources, with the ability to filter and sort the results. If no filters are specified, all instances will be returned.
     * 
     * Note: You can use the `civo.Instance` data source to obtain metadata about a single instance if you already know the id, unique hostname, or unique tag to retrieve.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var small-size = CivoFunctions.getInstances(GetInstancesArgs.builder()
     *             .region(&#34;NYC1&#34;)
     *             .filters(GetInstancesFilterArgs.builder()
     *                 .key(&#34;size&#34;)
     *                 .values(g3.small())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetInstancesResult> getInstancesPlain(GetInstancesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("civo:index/getInstances:getInstances", TypeShape.of(GetInstancesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves information about the instance sizes that Civo supports, with the ability to filter the results.
     * 
     */
    public static Output<GetInstancesSizeResult> getInstancesSize() {
        return getInstancesSize(GetInstancesSizeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves information about the instance sizes that Civo supports, with the ability to filter the results.
     * 
     */
    public static CompletableFuture<GetInstancesSizeResult> getInstancesSizePlain() {
        return getInstancesSizePlain(GetInstancesSizePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves information about the instance sizes that Civo supports, with the ability to filter the results.
     * 
     */
    public static Output<GetInstancesSizeResult> getInstancesSize(GetInstancesSizeArgs args) {
        return getInstancesSize(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves information about the instance sizes that Civo supports, with the ability to filter the results.
     * 
     */
    public static CompletableFuture<GetInstancesSizeResult> getInstancesSizePlain(GetInstancesSizePlainArgs args) {
        return getInstancesSizePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves information about the instance sizes that Civo supports, with the ability to filter the results.
     * 
     */
    public static Output<GetInstancesSizeResult> getInstancesSize(GetInstancesSizeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("civo:index/getInstancesSize:getInstancesSize", TypeShape.of(GetInstancesSizeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves information about the instance sizes that Civo supports, with the ability to filter the results.
     * 
     */
    public static CompletableFuture<GetInstancesSizeResult> getInstancesSizePlain(GetInstancesSizePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("civo:index/getInstancesSize:getInstancesSize", TypeShape.of(GetInstancesSizeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provides a Civo Kubernetes cluster data source.
     * 
     * Note: This data source returns a single Kubernetes cluster. When specifying a name, an error will be raised if more than one Kubernetes cluster found.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetKubernetesClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-cluster = CivoFunctions.getKubernetesCluster(GetKubernetesClusterArgs.builder()
     *             .name(&#34;my-super-cluster&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;kubernetesClusterOutput&#34;, my_cluster.masterIp());
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetKubernetesClusterResult> getKubernetesCluster() {
        return getKubernetesCluster(GetKubernetesClusterArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Provides a Civo Kubernetes cluster data source.
     * 
     * Note: This data source returns a single Kubernetes cluster. When specifying a name, an error will be raised if more than one Kubernetes cluster found.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetKubernetesClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-cluster = CivoFunctions.getKubernetesCluster(GetKubernetesClusterArgs.builder()
     *             .name(&#34;my-super-cluster&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;kubernetesClusterOutput&#34;, my_cluster.masterIp());
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetKubernetesClusterResult> getKubernetesClusterPlain() {
        return getKubernetesClusterPlain(GetKubernetesClusterPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Provides a Civo Kubernetes cluster data source.
     * 
     * Note: This data source returns a single Kubernetes cluster. When specifying a name, an error will be raised if more than one Kubernetes cluster found.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetKubernetesClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-cluster = CivoFunctions.getKubernetesCluster(GetKubernetesClusterArgs.builder()
     *             .name(&#34;my-super-cluster&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;kubernetesClusterOutput&#34;, my_cluster.masterIp());
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetKubernetesClusterResult> getKubernetesCluster(GetKubernetesClusterArgs args) {
        return getKubernetesCluster(args, InvokeOptions.Empty);
    }
    /**
     * Provides a Civo Kubernetes cluster data source.
     * 
     * Note: This data source returns a single Kubernetes cluster. When specifying a name, an error will be raised if more than one Kubernetes cluster found.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetKubernetesClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-cluster = CivoFunctions.getKubernetesCluster(GetKubernetesClusterArgs.builder()
     *             .name(&#34;my-super-cluster&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;kubernetesClusterOutput&#34;, my_cluster.masterIp());
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetKubernetesClusterResult> getKubernetesClusterPlain(GetKubernetesClusterPlainArgs args) {
        return getKubernetesClusterPlain(args, InvokeOptions.Empty);
    }
    /**
     * Provides a Civo Kubernetes cluster data source.
     * 
     * Note: This data source returns a single Kubernetes cluster. When specifying a name, an error will be raised if more than one Kubernetes cluster found.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetKubernetesClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-cluster = CivoFunctions.getKubernetesCluster(GetKubernetesClusterArgs.builder()
     *             .name(&#34;my-super-cluster&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;kubernetesClusterOutput&#34;, my_cluster.masterIp());
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetKubernetesClusterResult> getKubernetesCluster(GetKubernetesClusterArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("civo:index/getKubernetesCluster:getKubernetesCluster", TypeShape.of(GetKubernetesClusterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provides a Civo Kubernetes cluster data source.
     * 
     * Note: This data source returns a single Kubernetes cluster. When specifying a name, an error will be raised if more than one Kubernetes cluster found.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetKubernetesClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-cluster = CivoFunctions.getKubernetesCluster(GetKubernetesClusterArgs.builder()
     *             .name(&#34;my-super-cluster&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;kubernetesClusterOutput&#34;, my_cluster.masterIp());
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetKubernetesClusterResult> getKubernetesClusterPlain(GetKubernetesClusterPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("civo:index/getKubernetesCluster:getKubernetesCluster", TypeShape.of(GetKubernetesClusterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provides access to the available Civo Kubernetes versions, with the ability to filter the results.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetKubernetesVersionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var stable = CivoFunctions.getKubernetesVersion(GetKubernetesVersionArgs.builder()
     *             .filters(GetKubernetesVersionFilterArgs.builder()
     *                 .key(&#34;type&#34;)
     *                 .values(&#34;stable&#34;)
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetKubernetesVersionResult> getKubernetesVersion() {
        return getKubernetesVersion(GetKubernetesVersionArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Provides access to the available Civo Kubernetes versions, with the ability to filter the results.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetKubernetesVersionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var stable = CivoFunctions.getKubernetesVersion(GetKubernetesVersionArgs.builder()
     *             .filters(GetKubernetesVersionFilterArgs.builder()
     *                 .key(&#34;type&#34;)
     *                 .values(&#34;stable&#34;)
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetKubernetesVersionResult> getKubernetesVersionPlain() {
        return getKubernetesVersionPlain(GetKubernetesVersionPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Provides access to the available Civo Kubernetes versions, with the ability to filter the results.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetKubernetesVersionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var stable = CivoFunctions.getKubernetesVersion(GetKubernetesVersionArgs.builder()
     *             .filters(GetKubernetesVersionFilterArgs.builder()
     *                 .key(&#34;type&#34;)
     *                 .values(&#34;stable&#34;)
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetKubernetesVersionResult> getKubernetesVersion(GetKubernetesVersionArgs args) {
        return getKubernetesVersion(args, InvokeOptions.Empty);
    }
    /**
     * Provides access to the available Civo Kubernetes versions, with the ability to filter the results.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetKubernetesVersionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var stable = CivoFunctions.getKubernetesVersion(GetKubernetesVersionArgs.builder()
     *             .filters(GetKubernetesVersionFilterArgs.builder()
     *                 .key(&#34;type&#34;)
     *                 .values(&#34;stable&#34;)
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetKubernetesVersionResult> getKubernetesVersionPlain(GetKubernetesVersionPlainArgs args) {
        return getKubernetesVersionPlain(args, InvokeOptions.Empty);
    }
    /**
     * Provides access to the available Civo Kubernetes versions, with the ability to filter the results.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetKubernetesVersionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var stable = CivoFunctions.getKubernetesVersion(GetKubernetesVersionArgs.builder()
     *             .filters(GetKubernetesVersionFilterArgs.builder()
     *                 .key(&#34;type&#34;)
     *                 .values(&#34;stable&#34;)
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetKubernetesVersionResult> getKubernetesVersion(GetKubernetesVersionArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("civo:index/getKubernetesVersion:getKubernetesVersion", TypeShape.of(GetKubernetesVersionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provides access to the available Civo Kubernetes versions, with the ability to filter the results.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetKubernetesVersionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var stable = CivoFunctions.getKubernetesVersion(GetKubernetesVersionArgs.builder()
     *             .filters(GetKubernetesVersionFilterArgs.builder()
     *                 .key(&#34;type&#34;)
     *                 .values(&#34;stable&#34;)
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetKubernetesVersionResult> getKubernetesVersionPlain(GetKubernetesVersionPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("civo:index/getKubernetesVersion:getKubernetesVersion", TypeShape.of(GetKubernetesVersionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information on a load balancer for use in other resources. This data source provides all of the load balancers properties as configured on your Civo account.
     * 
     * An error will be raised if the provided load balancer name does not exist in your Civo account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetLoadBalancerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-lb = CivoFunctions.getLoadBalancer(GetLoadBalancerArgs.builder()
     *             .name(&#34;lb-name&#34;)
     *             .region(&#34;LON1&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;civoLoadbalancerOutput&#34;, my_lb.publicIp());
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLoadBalancerResult> getLoadBalancer() {
        return getLoadBalancer(GetLoadBalancerArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get information on a load balancer for use in other resources. This data source provides all of the load balancers properties as configured on your Civo account.
     * 
     * An error will be raised if the provided load balancer name does not exist in your Civo account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetLoadBalancerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-lb = CivoFunctions.getLoadBalancer(GetLoadBalancerArgs.builder()
     *             .name(&#34;lb-name&#34;)
     *             .region(&#34;LON1&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;civoLoadbalancerOutput&#34;, my_lb.publicIp());
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLoadBalancerResult> getLoadBalancerPlain() {
        return getLoadBalancerPlain(GetLoadBalancerPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get information on a load balancer for use in other resources. This data source provides all of the load balancers properties as configured on your Civo account.
     * 
     * An error will be raised if the provided load balancer name does not exist in your Civo account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetLoadBalancerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-lb = CivoFunctions.getLoadBalancer(GetLoadBalancerArgs.builder()
     *             .name(&#34;lb-name&#34;)
     *             .region(&#34;LON1&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;civoLoadbalancerOutput&#34;, my_lb.publicIp());
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLoadBalancerResult> getLoadBalancer(GetLoadBalancerArgs args) {
        return getLoadBalancer(args, InvokeOptions.Empty);
    }
    /**
     * Get information on a load balancer for use in other resources. This data source provides all of the load balancers properties as configured on your Civo account.
     * 
     * An error will be raised if the provided load balancer name does not exist in your Civo account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetLoadBalancerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-lb = CivoFunctions.getLoadBalancer(GetLoadBalancerArgs.builder()
     *             .name(&#34;lb-name&#34;)
     *             .region(&#34;LON1&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;civoLoadbalancerOutput&#34;, my_lb.publicIp());
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLoadBalancerResult> getLoadBalancerPlain(GetLoadBalancerPlainArgs args) {
        return getLoadBalancerPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get information on a load balancer for use in other resources. This data source provides all of the load balancers properties as configured on your Civo account.
     * 
     * An error will be raised if the provided load balancer name does not exist in your Civo account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetLoadBalancerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-lb = CivoFunctions.getLoadBalancer(GetLoadBalancerArgs.builder()
     *             .name(&#34;lb-name&#34;)
     *             .region(&#34;LON1&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;civoLoadbalancerOutput&#34;, my_lb.publicIp());
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLoadBalancerResult> getLoadBalancer(GetLoadBalancerArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("civo:index/getLoadBalancer:getLoadBalancer", TypeShape.of(GetLoadBalancerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information on a load balancer for use in other resources. This data source provides all of the load balancers properties as configured on your Civo account.
     * 
     * An error will be raised if the provided load balancer name does not exist in your Civo account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetLoadBalancerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-lb = CivoFunctions.getLoadBalancer(GetLoadBalancerArgs.builder()
     *             .name(&#34;lb-name&#34;)
     *             .region(&#34;LON1&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;civoLoadbalancerOutput&#34;, my_lb.publicIp());
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLoadBalancerResult> getLoadBalancerPlain(GetLoadBalancerPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("civo:index/getLoadBalancer:getLoadBalancer", TypeShape.of(GetLoadBalancerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieve information about a network for use in other resources.
     * 
     * This data source provides all of the network&#39;s properties as configured on your Civo account.
     * 
     * Networks may be looked up by id or label, and you can optionally pass region if you want to make a lookup for an expecific network inside that region.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = CivoFunctions.getNetwork(GetNetworkArgs.builder()
     *             .label(&#34;test-network&#34;)
     *             .region(&#34;NYC1&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetNetworkResult> getNetwork() {
        return getNetwork(GetNetworkArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieve information about a network for use in other resources.
     * 
     * This data source provides all of the network&#39;s properties as configured on your Civo account.
     * 
     * Networks may be looked up by id or label, and you can optionally pass region if you want to make a lookup for an expecific network inside that region.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = CivoFunctions.getNetwork(GetNetworkArgs.builder()
     *             .label(&#34;test-network&#34;)
     *             .region(&#34;NYC1&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetNetworkResult> getNetworkPlain() {
        return getNetworkPlain(GetNetworkPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieve information about a network for use in other resources.
     * 
     * This data source provides all of the network&#39;s properties as configured on your Civo account.
     * 
     * Networks may be looked up by id or label, and you can optionally pass region if you want to make a lookup for an expecific network inside that region.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = CivoFunctions.getNetwork(GetNetworkArgs.builder()
     *             .label(&#34;test-network&#34;)
     *             .region(&#34;NYC1&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetNetworkResult> getNetwork(GetNetworkArgs args) {
        return getNetwork(args, InvokeOptions.Empty);
    }
    /**
     * Retrieve information about a network for use in other resources.
     * 
     * This data source provides all of the network&#39;s properties as configured on your Civo account.
     * 
     * Networks may be looked up by id or label, and you can optionally pass region if you want to make a lookup for an expecific network inside that region.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = CivoFunctions.getNetwork(GetNetworkArgs.builder()
     *             .label(&#34;test-network&#34;)
     *             .region(&#34;NYC1&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetNetworkResult> getNetworkPlain(GetNetworkPlainArgs args) {
        return getNetworkPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieve information about a network for use in other resources.
     * 
     * This data source provides all of the network&#39;s properties as configured on your Civo account.
     * 
     * Networks may be looked up by id or label, and you can optionally pass region if you want to make a lookup for an expecific network inside that region.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = CivoFunctions.getNetwork(GetNetworkArgs.builder()
     *             .label(&#34;test-network&#34;)
     *             .region(&#34;NYC1&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetNetworkResult> getNetwork(GetNetworkArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("civo:index/getNetwork:getNetwork", TypeShape.of(GetNetworkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieve information about a network for use in other resources.
     * 
     * This data source provides all of the network&#39;s properties as configured on your Civo account.
     * 
     * Networks may be looked up by id or label, and you can optionally pass region if you want to make a lookup for an expecific network inside that region.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetNetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = CivoFunctions.getNetwork(GetNetworkArgs.builder()
     *             .label(&#34;test-network&#34;)
     *             .region(&#34;NYC1&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetNetworkResult> getNetworkPlain(GetNetworkPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("civo:index/getNetwork:getNetwork", TypeShape.of(GetNetworkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information of an Object Store for use in other resources. This data source provides all of the Object Store&#39;s properties as configured on your Civo account.
     * 
     * Note: This data source returns a single Object Store. When specifying a name, an error will be raised if more than one Object Stores with the same name found.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetObjectStoreArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var backup = CivoFunctions.getObjectStore(GetObjectStoreArgs.builder()
     *             .name(&#34;backup-server&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetObjectStoreResult> getObjectStore() {
        return getObjectStore(GetObjectStoreArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get information of an Object Store for use in other resources. This data source provides all of the Object Store&#39;s properties as configured on your Civo account.
     * 
     * Note: This data source returns a single Object Store. When specifying a name, an error will be raised if more than one Object Stores with the same name found.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetObjectStoreArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var backup = CivoFunctions.getObjectStore(GetObjectStoreArgs.builder()
     *             .name(&#34;backup-server&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetObjectStoreResult> getObjectStorePlain() {
        return getObjectStorePlain(GetObjectStorePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get information of an Object Store for use in other resources. This data source provides all of the Object Store&#39;s properties as configured on your Civo account.
     * 
     * Note: This data source returns a single Object Store. When specifying a name, an error will be raised if more than one Object Stores with the same name found.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetObjectStoreArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var backup = CivoFunctions.getObjectStore(GetObjectStoreArgs.builder()
     *             .name(&#34;backup-server&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetObjectStoreResult> getObjectStore(GetObjectStoreArgs args) {
        return getObjectStore(args, InvokeOptions.Empty);
    }
    /**
     * Get information of an Object Store for use in other resources. This data source provides all of the Object Store&#39;s properties as configured on your Civo account.
     * 
     * Note: This data source returns a single Object Store. When specifying a name, an error will be raised if more than one Object Stores with the same name found.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetObjectStoreArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var backup = CivoFunctions.getObjectStore(GetObjectStoreArgs.builder()
     *             .name(&#34;backup-server&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetObjectStoreResult> getObjectStorePlain(GetObjectStorePlainArgs args) {
        return getObjectStorePlain(args, InvokeOptions.Empty);
    }
    /**
     * Get information of an Object Store for use in other resources. This data source provides all of the Object Store&#39;s properties as configured on your Civo account.
     * 
     * Note: This data source returns a single Object Store. When specifying a name, an error will be raised if more than one Object Stores with the same name found.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetObjectStoreArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var backup = CivoFunctions.getObjectStore(GetObjectStoreArgs.builder()
     *             .name(&#34;backup-server&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetObjectStoreResult> getObjectStore(GetObjectStoreArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("civo:index/getObjectStore:getObjectStore", TypeShape.of(GetObjectStoreResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information of an Object Store for use in other resources. This data source provides all of the Object Store&#39;s properties as configured on your Civo account.
     * 
     * Note: This data source returns a single Object Store. When specifying a name, an error will be raised if more than one Object Stores with the same name found.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetObjectStoreArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var backup = CivoFunctions.getObjectStore(GetObjectStoreArgs.builder()
     *             .name(&#34;backup-server&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetObjectStoreResult> getObjectStorePlain(GetObjectStorePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("civo:index/getObjectStore:getObjectStore", TypeShape.of(GetObjectStoreResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves information about the region that Civo supports, with the ability to filter the results.
     * 
     */
    public static Output<GetRegionResult> getRegion() {
        return getRegion(GetRegionArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves information about the region that Civo supports, with the ability to filter the results.
     * 
     */
    public static CompletableFuture<GetRegionResult> getRegionPlain() {
        return getRegionPlain(GetRegionPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves information about the region that Civo supports, with the ability to filter the results.
     * 
     */
    public static Output<GetRegionResult> getRegion(GetRegionArgs args) {
        return getRegion(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves information about the region that Civo supports, with the ability to filter the results.
     * 
     */
    public static CompletableFuture<GetRegionResult> getRegionPlain(GetRegionPlainArgs args) {
        return getRegionPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves information about the region that Civo supports, with the ability to filter the results.
     * 
     */
    public static Output<GetRegionResult> getRegion(GetRegionArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("civo:index/getRegion:getRegion", TypeShape.of(GetRegionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves information about the region that Civo supports, with the ability to filter the results.
     * 
     */
    public static CompletableFuture<GetRegionResult> getRegionPlain(GetRegionPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("civo:index/getRegion:getRegion", TypeShape.of(GetRegionResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetReservedIpResult> getReservedIp() {
        return getReservedIp(GetReservedIpArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetReservedIpResult> getReservedIpPlain() {
        return getReservedIpPlain(GetReservedIpPlainArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetReservedIpResult> getReservedIp(GetReservedIpArgs args) {
        return getReservedIp(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetReservedIpResult> getReservedIpPlain(GetReservedIpPlainArgs args) {
        return getReservedIpPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetReservedIpResult> getReservedIp(GetReservedIpArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("civo:index/getReservedIp:getReservedIp", TypeShape.of(GetReservedIpResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetReservedIpResult> getReservedIpPlain(GetReservedIpPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("civo:index/getReservedIp:getReservedIp", TypeShape.of(GetReservedIpResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves information about the sizes that Civo supports, with the ability to filter the results.
     * 
     */
    public static Output<GetSizeResult> getSize() {
        return getSize(GetSizeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves information about the sizes that Civo supports, with the ability to filter the results.
     * 
     */
    public static CompletableFuture<GetSizeResult> getSizePlain() {
        return getSizePlain(GetSizePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieves information about the sizes that Civo supports, with the ability to filter the results.
     * 
     */
    public static Output<GetSizeResult> getSize(GetSizeArgs args) {
        return getSize(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves information about the sizes that Civo supports, with the ability to filter the results.
     * 
     */
    public static CompletableFuture<GetSizeResult> getSizePlain(GetSizePlainArgs args) {
        return getSizePlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves information about the sizes that Civo supports, with the ability to filter the results.
     * 
     */
    public static Output<GetSizeResult> getSize(GetSizeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("civo:index/getSize:getSize", TypeShape.of(GetSizeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves information about the sizes that Civo supports, with the ability to filter the results.
     * 
     */
    public static CompletableFuture<GetSizeResult> getSizePlain(GetSizePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("civo:index/getSize:getSize", TypeShape.of(GetSizeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information on a SSH key. This data source provides the name, and fingerprint as configured on your Civo account.
     * 
     * An error will be raised if the provided SSH key name does not exist in your Civo account.
     * 
     */
    public static Output<GetSshKeyResult> getSshKey() {
        return getSshKey(GetSshKeyArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get information on a SSH key. This data source provides the name, and fingerprint as configured on your Civo account.
     * 
     * An error will be raised if the provided SSH key name does not exist in your Civo account.
     * 
     */
    public static CompletableFuture<GetSshKeyResult> getSshKeyPlain() {
        return getSshKeyPlain(GetSshKeyPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get information on a SSH key. This data source provides the name, and fingerprint as configured on your Civo account.
     * 
     * An error will be raised if the provided SSH key name does not exist in your Civo account.
     * 
     */
    public static Output<GetSshKeyResult> getSshKey(GetSshKeyArgs args) {
        return getSshKey(args, InvokeOptions.Empty);
    }
    /**
     * Get information on a SSH key. This data source provides the name, and fingerprint as configured on your Civo account.
     * 
     * An error will be raised if the provided SSH key name does not exist in your Civo account.
     * 
     */
    public static CompletableFuture<GetSshKeyResult> getSshKeyPlain(GetSshKeyPlainArgs args) {
        return getSshKeyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get information on a SSH key. This data source provides the name, and fingerprint as configured on your Civo account.
     * 
     * An error will be raised if the provided SSH key name does not exist in your Civo account.
     * 
     */
    public static Output<GetSshKeyResult> getSshKey(GetSshKeyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("civo:index/getSshKey:getSshKey", TypeShape.of(GetSshKeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information on a SSH key. This data source provides the name, and fingerprint as configured on your Civo account.
     * 
     * An error will be raised if the provided SSH key name does not exist in your Civo account.
     * 
     */
    public static CompletableFuture<GetSshKeyResult> getSshKeyPlain(GetSshKeyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("civo:index/getSshKey:getSshKey", TypeShape.of(GetSshKeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information on a volume for use in other resources. This data source provides all of the volumes properties as configured on your Civo account.
     * 
     * An error will be raised if the provided volume name does not exist in your Civo account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetVolumeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var mysql = CivoFunctions.getVolume(GetVolumeArgs.builder()
     *             .name(&#34;database-mysql&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetVolumeResult> getVolume() {
        return getVolume(GetVolumeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get information on a volume for use in other resources. This data source provides all of the volumes properties as configured on your Civo account.
     * 
     * An error will be raised if the provided volume name does not exist in your Civo account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetVolumeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var mysql = CivoFunctions.getVolume(GetVolumeArgs.builder()
     *             .name(&#34;database-mysql&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetVolumeResult> getVolumePlain() {
        return getVolumePlain(GetVolumePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get information on a volume for use in other resources. This data source provides all of the volumes properties as configured on your Civo account.
     * 
     * An error will be raised if the provided volume name does not exist in your Civo account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetVolumeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var mysql = CivoFunctions.getVolume(GetVolumeArgs.builder()
     *             .name(&#34;database-mysql&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetVolumeResult> getVolume(GetVolumeArgs args) {
        return getVolume(args, InvokeOptions.Empty);
    }
    /**
     * Get information on a volume for use in other resources. This data source provides all of the volumes properties as configured on your Civo account.
     * 
     * An error will be raised if the provided volume name does not exist in your Civo account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetVolumeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var mysql = CivoFunctions.getVolume(GetVolumeArgs.builder()
     *             .name(&#34;database-mysql&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetVolumeResult> getVolumePlain(GetVolumePlainArgs args) {
        return getVolumePlain(args, InvokeOptions.Empty);
    }
    /**
     * Get information on a volume for use in other resources. This data source provides all of the volumes properties as configured on your Civo account.
     * 
     * An error will be raised if the provided volume name does not exist in your Civo account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetVolumeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var mysql = CivoFunctions.getVolume(GetVolumeArgs.builder()
     *             .name(&#34;database-mysql&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetVolumeResult> getVolume(GetVolumeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("civo:index/getVolume:getVolume", TypeShape.of(GetVolumeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information on a volume for use in other resources. This data source provides all of the volumes properties as configured on your Civo account.
     * 
     * An error will be raised if the provided volume name does not exist in your Civo account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.civo.CivoFunctions;
     * import com.pulumi.civo.inputs.GetVolumeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var mysql = CivoFunctions.getVolume(GetVolumeArgs.builder()
     *             .name(&#34;database-mysql&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetVolumeResult> getVolumePlain(GetVolumePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("civo:index/getVolume:getVolume", TypeShape.of(GetVolumeResult.class), args, Utilities.withVersion(options));
    }
}
