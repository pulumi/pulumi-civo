// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.civo.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetLoadBalancerBackend {
    private final Integer healthCheckPort;
    private final String ip;
    private final String protocol;
    private final Integer sourcePort;
    private final Integer targetPort;

    @CustomType.Constructor
    private GetLoadBalancerBackend(
        @CustomType.Parameter("healthCheckPort") Integer healthCheckPort,
        @CustomType.Parameter("ip") String ip,
        @CustomType.Parameter("protocol") String protocol,
        @CustomType.Parameter("sourcePort") Integer sourcePort,
        @CustomType.Parameter("targetPort") Integer targetPort) {
        this.healthCheckPort = healthCheckPort;
        this.ip = ip;
        this.protocol = protocol;
        this.sourcePort = sourcePort;
        this.targetPort = targetPort;
    }

    public Integer healthCheckPort() {
        return this.healthCheckPort;
    }
    public String ip() {
        return this.ip;
    }
    public String protocol() {
        return this.protocol;
    }
    public Integer sourcePort() {
        return this.sourcePort;
    }
    public Integer targetPort() {
        return this.targetPort;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLoadBalancerBackend defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer healthCheckPort;
        private String ip;
        private String protocol;
        private Integer sourcePort;
        private Integer targetPort;

        public Builder() {
    	      // Empty
        }

        public Builder(GetLoadBalancerBackend defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.healthCheckPort = defaults.healthCheckPort;
    	      this.ip = defaults.ip;
    	      this.protocol = defaults.protocol;
    	      this.sourcePort = defaults.sourcePort;
    	      this.targetPort = defaults.targetPort;
        }

        public Builder healthCheckPort(Integer healthCheckPort) {
            this.healthCheckPort = Objects.requireNonNull(healthCheckPort);
            return this;
        }
        public Builder ip(String ip) {
            this.ip = Objects.requireNonNull(ip);
            return this;
        }
        public Builder protocol(String protocol) {
            this.protocol = Objects.requireNonNull(protocol);
            return this;
        }
        public Builder sourcePort(Integer sourcePort) {
            this.sourcePort = Objects.requireNonNull(sourcePort);
            return this;
        }
        public Builder targetPort(Integer targetPort) {
            this.targetPort = Objects.requireNonNull(targetPort);
            return this;
        }        public GetLoadBalancerBackend build() {
            return new GetLoadBalancerBackend(healthCheckPort, ip, protocol, sourcePort, targetPort);
        }
    }
}
