// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.civo.outputs;

import com.pulumi.civo.outputs.GetKubernetesClusterInstalledApplication;
import com.pulumi.civo.outputs.GetKubernetesClusterPool;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetKubernetesClusterResult {
    private final String apiEndpoint;
    private final String applications;
    private final String cni;
    private final String createdAt;
    private final String dnsEntry;
    private final @Nullable String id;
    private final List<GetKubernetesClusterInstalledApplication> installedApplications;
    private final String kubeconfig;
    private final String kubernetesVersion;
    private final String masterIp;
    private final @Nullable String name;
    /**
     * @deprecated
     * This field is deprecated and will be removed in a future version of the provider
     * 
     */
    @Deprecated /* This field is deprecated and will be removed in a future version of the provider */
    private final Integer numTargetNodes;
    private final List<GetKubernetesClusterPool> pools;
    private final Boolean ready;
    private final @Nullable String region;
    private final String status;
    private final List<String> tags;
    /**
     * @deprecated
     * This field is deprecated and will be removed in a future version of the provider
     * 
     */
    @Deprecated /* This field is deprecated and will be removed in a future version of the provider */
    private final String targetNodesSize;

    @CustomType.Constructor
    private GetKubernetesClusterResult(
        @CustomType.Parameter("apiEndpoint") String apiEndpoint,
        @CustomType.Parameter("applications") String applications,
        @CustomType.Parameter("cni") String cni,
        @CustomType.Parameter("createdAt") String createdAt,
        @CustomType.Parameter("dnsEntry") String dnsEntry,
        @CustomType.Parameter("id") @Nullable String id,
        @CustomType.Parameter("installedApplications") List<GetKubernetesClusterInstalledApplication> installedApplications,
        @CustomType.Parameter("kubeconfig") String kubeconfig,
        @CustomType.Parameter("kubernetesVersion") String kubernetesVersion,
        @CustomType.Parameter("masterIp") String masterIp,
        @CustomType.Parameter("name") @Nullable String name,
        @CustomType.Parameter("numTargetNodes") Integer numTargetNodes,
        @CustomType.Parameter("pools") List<GetKubernetesClusterPool> pools,
        @CustomType.Parameter("ready") Boolean ready,
        @CustomType.Parameter("region") @Nullable String region,
        @CustomType.Parameter("status") String status,
        @CustomType.Parameter("tags") List<String> tags,
        @CustomType.Parameter("targetNodesSize") String targetNodesSize) {
        this.apiEndpoint = apiEndpoint;
        this.applications = applications;
        this.cni = cni;
        this.createdAt = createdAt;
        this.dnsEntry = dnsEntry;
        this.id = id;
        this.installedApplications = installedApplications;
        this.kubeconfig = kubeconfig;
        this.kubernetesVersion = kubernetesVersion;
        this.masterIp = masterIp;
        this.name = name;
        this.numTargetNodes = numTargetNodes;
        this.pools = pools;
        this.ready = ready;
        this.region = region;
        this.status = status;
        this.tags = tags;
        this.targetNodesSize = targetNodesSize;
    }

    public String apiEndpoint() {
        return this.apiEndpoint;
    }
    public String applications() {
        return this.applications;
    }
    public String cni() {
        return this.cni;
    }
    public String createdAt() {
        return this.createdAt;
    }
    public String dnsEntry() {
        return this.dnsEntry;
    }
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public List<GetKubernetesClusterInstalledApplication> installedApplications() {
        return this.installedApplications;
    }
    public String kubeconfig() {
        return this.kubeconfig;
    }
    public String kubernetesVersion() {
        return this.kubernetesVersion;
    }
    public String masterIp() {
        return this.masterIp;
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @deprecated
     * This field is deprecated and will be removed in a future version of the provider
     * 
     */
    @Deprecated /* This field is deprecated and will be removed in a future version of the provider */
    public Integer numTargetNodes() {
        return this.numTargetNodes;
    }
    public List<GetKubernetesClusterPool> pools() {
        return this.pools;
    }
    public Boolean ready() {
        return this.ready;
    }
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    public String status() {
        return this.status;
    }
    public List<String> tags() {
        return this.tags;
    }
    /**
     * @deprecated
     * This field is deprecated and will be removed in a future version of the provider
     * 
     */
    @Deprecated /* This field is deprecated and will be removed in a future version of the provider */
    public String targetNodesSize() {
        return this.targetNodesSize;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKubernetesClusterResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String apiEndpoint;
        private String applications;
        private String cni;
        private String createdAt;
        private String dnsEntry;
        private @Nullable String id;
        private List<GetKubernetesClusterInstalledApplication> installedApplications;
        private String kubeconfig;
        private String kubernetesVersion;
        private String masterIp;
        private @Nullable String name;
        private Integer numTargetNodes;
        private List<GetKubernetesClusterPool> pools;
        private Boolean ready;
        private @Nullable String region;
        private String status;
        private List<String> tags;
        private String targetNodesSize;

        public Builder() {
    	      // Empty
        }

        public Builder(GetKubernetesClusterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiEndpoint = defaults.apiEndpoint;
    	      this.applications = defaults.applications;
    	      this.cni = defaults.cni;
    	      this.createdAt = defaults.createdAt;
    	      this.dnsEntry = defaults.dnsEntry;
    	      this.id = defaults.id;
    	      this.installedApplications = defaults.installedApplications;
    	      this.kubeconfig = defaults.kubeconfig;
    	      this.kubernetesVersion = defaults.kubernetesVersion;
    	      this.masterIp = defaults.masterIp;
    	      this.name = defaults.name;
    	      this.numTargetNodes = defaults.numTargetNodes;
    	      this.pools = defaults.pools;
    	      this.ready = defaults.ready;
    	      this.region = defaults.region;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.targetNodesSize = defaults.targetNodesSize;
        }

        public Builder apiEndpoint(String apiEndpoint) {
            this.apiEndpoint = Objects.requireNonNull(apiEndpoint);
            return this;
        }
        public Builder applications(String applications) {
            this.applications = Objects.requireNonNull(applications);
            return this;
        }
        public Builder cni(String cni) {
            this.cni = Objects.requireNonNull(cni);
            return this;
        }
        public Builder createdAt(String createdAt) {
            this.createdAt = Objects.requireNonNull(createdAt);
            return this;
        }
        public Builder dnsEntry(String dnsEntry) {
            this.dnsEntry = Objects.requireNonNull(dnsEntry);
            return this;
        }
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        public Builder installedApplications(List<GetKubernetesClusterInstalledApplication> installedApplications) {
            this.installedApplications = Objects.requireNonNull(installedApplications);
            return this;
        }
        public Builder installedApplications(GetKubernetesClusterInstalledApplication... installedApplications) {
            return installedApplications(List.of(installedApplications));
        }
        public Builder kubeconfig(String kubeconfig) {
            this.kubeconfig = Objects.requireNonNull(kubeconfig);
            return this;
        }
        public Builder kubernetesVersion(String kubernetesVersion) {
            this.kubernetesVersion = Objects.requireNonNull(kubernetesVersion);
            return this;
        }
        public Builder masterIp(String masterIp) {
            this.masterIp = Objects.requireNonNull(masterIp);
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public Builder numTargetNodes(Integer numTargetNodes) {
            this.numTargetNodes = Objects.requireNonNull(numTargetNodes);
            return this;
        }
        public Builder pools(List<GetKubernetesClusterPool> pools) {
            this.pools = Objects.requireNonNull(pools);
            return this;
        }
        public Builder pools(GetKubernetesClusterPool... pools) {
            return pools(List.of(pools));
        }
        public Builder ready(Boolean ready) {
            this.ready = Objects.requireNonNull(ready);
            return this;
        }
        public Builder region(@Nullable String region) {
            this.region = region;
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder tags(List<String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        public Builder targetNodesSize(String targetNodesSize) {
            this.targetNodesSize = Objects.requireNonNull(targetNodesSize);
            return this;
        }        public GetKubernetesClusterResult build() {
            return new GetKubernetesClusterResult(apiEndpoint, applications, cni, createdAt, dnsEntry, id, installedApplications, kubeconfig, kubernetesVersion, masterIp, name, numTargetNodes, pools, ready, region, status, tags, targetNodesSize);
        }
    }
}
