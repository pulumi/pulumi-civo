// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.civo.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetInstancesSizeSize {
    private Integer cpu;
    private String description;
    private Integer disk;
    private String name;
    private Integer ram;
    private Boolean selectable;
    private String type;

    private GetInstancesSizeSize() {}
    public Integer cpu() {
        return this.cpu;
    }
    public String description() {
        return this.description;
    }
    public Integer disk() {
        return this.disk;
    }
    public String name() {
        return this.name;
    }
    public Integer ram() {
        return this.ram;
    }
    public Boolean selectable() {
        return this.selectable;
    }
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstancesSizeSize defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer cpu;
        private String description;
        private Integer disk;
        private String name;
        private Integer ram;
        private Boolean selectable;
        private String type;
        public Builder() {}
        public Builder(GetInstancesSizeSize defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cpu = defaults.cpu;
    	      this.description = defaults.description;
    	      this.disk = defaults.disk;
    	      this.name = defaults.name;
    	      this.ram = defaults.ram;
    	      this.selectable = defaults.selectable;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder cpu(Integer cpu) {
            this.cpu = Objects.requireNonNull(cpu);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder disk(Integer disk) {
            this.disk = Objects.requireNonNull(disk);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder ram(Integer ram) {
            this.ram = Objects.requireNonNull(ram);
            return this;
        }
        @CustomType.Setter
        public Builder selectable(Boolean selectable) {
            this.selectable = Objects.requireNonNull(selectable);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetInstancesSizeSize build() {
            final var o = new GetInstancesSizeSize();
            o.cpu = cpu;
            o.description = description;
            o.disk = disk;
            o.name = name;
            o.ram = ram;
            o.selectable = selectable;
            o.type = type;
            return o;
        }
    }
}
