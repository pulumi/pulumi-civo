// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.civo.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetInstancesInstance {
    private final Integer cpuCores;
    private final String createdAt;
    private final Integer diskGb;
    private final String firewallId;
    private final String hostname;
    private final String id;
    private final String initialPassword;
    private final String initialUser;
    private final String networkId;
    private final String notes;
    private final String privateIp;
    private final String pseudoIp;
    private final String publicIp;
    private final Integer ramMb;
    private final String region;
    private final String reverseDns;
    private final String script;
    private final String size;
    private final String sshkeyId;
    private final String status;
    private final List<String> tags;
    private final String template;

    @CustomType.Constructor
    private GetInstancesInstance(
        @CustomType.Parameter("cpuCores") Integer cpuCores,
        @CustomType.Parameter("createdAt") String createdAt,
        @CustomType.Parameter("diskGb") Integer diskGb,
        @CustomType.Parameter("firewallId") String firewallId,
        @CustomType.Parameter("hostname") String hostname,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("initialPassword") String initialPassword,
        @CustomType.Parameter("initialUser") String initialUser,
        @CustomType.Parameter("networkId") String networkId,
        @CustomType.Parameter("notes") String notes,
        @CustomType.Parameter("privateIp") String privateIp,
        @CustomType.Parameter("pseudoIp") String pseudoIp,
        @CustomType.Parameter("publicIp") String publicIp,
        @CustomType.Parameter("ramMb") Integer ramMb,
        @CustomType.Parameter("region") String region,
        @CustomType.Parameter("reverseDns") String reverseDns,
        @CustomType.Parameter("script") String script,
        @CustomType.Parameter("size") String size,
        @CustomType.Parameter("sshkeyId") String sshkeyId,
        @CustomType.Parameter("status") String status,
        @CustomType.Parameter("tags") List<String> tags,
        @CustomType.Parameter("template") String template) {
        this.cpuCores = cpuCores;
        this.createdAt = createdAt;
        this.diskGb = diskGb;
        this.firewallId = firewallId;
        this.hostname = hostname;
        this.id = id;
        this.initialPassword = initialPassword;
        this.initialUser = initialUser;
        this.networkId = networkId;
        this.notes = notes;
        this.privateIp = privateIp;
        this.pseudoIp = pseudoIp;
        this.publicIp = publicIp;
        this.ramMb = ramMb;
        this.region = region;
        this.reverseDns = reverseDns;
        this.script = script;
        this.size = size;
        this.sshkeyId = sshkeyId;
        this.status = status;
        this.tags = tags;
        this.template = template;
    }

    public Integer cpuCores() {
        return this.cpuCores;
    }
    public String createdAt() {
        return this.createdAt;
    }
    public Integer diskGb() {
        return this.diskGb;
    }
    public String firewallId() {
        return this.firewallId;
    }
    public String hostname() {
        return this.hostname;
    }
    public String id() {
        return this.id;
    }
    public String initialPassword() {
        return this.initialPassword;
    }
    public String initialUser() {
        return this.initialUser;
    }
    public String networkId() {
        return this.networkId;
    }
    public String notes() {
        return this.notes;
    }
    public String privateIp() {
        return this.privateIp;
    }
    public String pseudoIp() {
        return this.pseudoIp;
    }
    public String publicIp() {
        return this.publicIp;
    }
    public Integer ramMb() {
        return this.ramMb;
    }
    public String region() {
        return this.region;
    }
    public String reverseDns() {
        return this.reverseDns;
    }
    public String script() {
        return this.script;
    }
    public String size() {
        return this.size;
    }
    public String sshkeyId() {
        return this.sshkeyId;
    }
    public String status() {
        return this.status;
    }
    public List<String> tags() {
        return this.tags;
    }
    public String template() {
        return this.template;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstancesInstance defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer cpuCores;
        private String createdAt;
        private Integer diskGb;
        private String firewallId;
        private String hostname;
        private String id;
        private String initialPassword;
        private String initialUser;
        private String networkId;
        private String notes;
        private String privateIp;
        private String pseudoIp;
        private String publicIp;
        private Integer ramMb;
        private String region;
        private String reverseDns;
        private String script;
        private String size;
        private String sshkeyId;
        private String status;
        private List<String> tags;
        private String template;

        public Builder() {
    	      // Empty
        }

        public Builder(GetInstancesInstance defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cpuCores = defaults.cpuCores;
    	      this.createdAt = defaults.createdAt;
    	      this.diskGb = defaults.diskGb;
    	      this.firewallId = defaults.firewallId;
    	      this.hostname = defaults.hostname;
    	      this.id = defaults.id;
    	      this.initialPassword = defaults.initialPassword;
    	      this.initialUser = defaults.initialUser;
    	      this.networkId = defaults.networkId;
    	      this.notes = defaults.notes;
    	      this.privateIp = defaults.privateIp;
    	      this.pseudoIp = defaults.pseudoIp;
    	      this.publicIp = defaults.publicIp;
    	      this.ramMb = defaults.ramMb;
    	      this.region = defaults.region;
    	      this.reverseDns = defaults.reverseDns;
    	      this.script = defaults.script;
    	      this.size = defaults.size;
    	      this.sshkeyId = defaults.sshkeyId;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.template = defaults.template;
        }

        public Builder cpuCores(Integer cpuCores) {
            this.cpuCores = Objects.requireNonNull(cpuCores);
            return this;
        }
        public Builder createdAt(String createdAt) {
            this.createdAt = Objects.requireNonNull(createdAt);
            return this;
        }
        public Builder diskGb(Integer diskGb) {
            this.diskGb = Objects.requireNonNull(diskGb);
            return this;
        }
        public Builder firewallId(String firewallId) {
            this.firewallId = Objects.requireNonNull(firewallId);
            return this;
        }
        public Builder hostname(String hostname) {
            this.hostname = Objects.requireNonNull(hostname);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder initialPassword(String initialPassword) {
            this.initialPassword = Objects.requireNonNull(initialPassword);
            return this;
        }
        public Builder initialUser(String initialUser) {
            this.initialUser = Objects.requireNonNull(initialUser);
            return this;
        }
        public Builder networkId(String networkId) {
            this.networkId = Objects.requireNonNull(networkId);
            return this;
        }
        public Builder notes(String notes) {
            this.notes = Objects.requireNonNull(notes);
            return this;
        }
        public Builder privateIp(String privateIp) {
            this.privateIp = Objects.requireNonNull(privateIp);
            return this;
        }
        public Builder pseudoIp(String pseudoIp) {
            this.pseudoIp = Objects.requireNonNull(pseudoIp);
            return this;
        }
        public Builder publicIp(String publicIp) {
            this.publicIp = Objects.requireNonNull(publicIp);
            return this;
        }
        public Builder ramMb(Integer ramMb) {
            this.ramMb = Objects.requireNonNull(ramMb);
            return this;
        }
        public Builder region(String region) {
            this.region = Objects.requireNonNull(region);
            return this;
        }
        public Builder reverseDns(String reverseDns) {
            this.reverseDns = Objects.requireNonNull(reverseDns);
            return this;
        }
        public Builder script(String script) {
            this.script = Objects.requireNonNull(script);
            return this;
        }
        public Builder size(String size) {
            this.size = Objects.requireNonNull(size);
            return this;
        }
        public Builder sshkeyId(String sshkeyId) {
            this.sshkeyId = Objects.requireNonNull(sshkeyId);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder tags(List<String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        public Builder template(String template) {
            this.template = Objects.requireNonNull(template);
            return this;
        }        public GetInstancesInstance build() {
            return new GetInstancesInstance(cpuCores, createdAt, diskGb, firewallId, hostname, id, initialPassword, initialUser, networkId, notes, privateIp, pseudoIp, publicIp, ramMb, region, reverseDns, script, size, sshkeyId, status, tags, template);
        }
    }
}
