// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.civo.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FirewallEgressRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final FirewallEgressRuleArgs Empty = new FirewallEgressRuleArgs();

    @Import(name="action", required=true)
    private Output<String> action;

    public Output<String> action() {
        return this.action;
    }

    @Import(name="cidrs", required=true)
    private Output<List<String>> cidrs;

    public Output<List<String>> cidrs() {
        return this.cidrs;
    }

    @Import(name="id")
    private @Nullable Output<String> id;

    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    @Import(name="label")
    private @Nullable Output<String> label;

    public Optional<Output<String>> label() {
        return Optional.ofNullable(this.label);
    }

    @Import(name="portRange")
    private @Nullable Output<String> portRange;

    public Optional<Output<String>> portRange() {
        return Optional.ofNullable(this.portRange);
    }

    @Import(name="protocol")
    private @Nullable Output<String> protocol;

    public Optional<Output<String>> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    private FirewallEgressRuleArgs() {}

    private FirewallEgressRuleArgs(FirewallEgressRuleArgs $) {
        this.action = $.action;
        this.cidrs = $.cidrs;
        this.id = $.id;
        this.label = $.label;
        this.portRange = $.portRange;
        this.protocol = $.protocol;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FirewallEgressRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FirewallEgressRuleArgs $;

        public Builder() {
            $ = new FirewallEgressRuleArgs();
        }

        public Builder(FirewallEgressRuleArgs defaults) {
            $ = new FirewallEgressRuleArgs(Objects.requireNonNull(defaults));
        }

        public Builder action(Output<String> action) {
            $.action = action;
            return this;
        }

        public Builder action(String action) {
            return action(Output.of(action));
        }

        public Builder cidrs(Output<List<String>> cidrs) {
            $.cidrs = cidrs;
            return this;
        }

        public Builder cidrs(List<String> cidrs) {
            return cidrs(Output.of(cidrs));
        }

        public Builder cidrs(String... cidrs) {
            return cidrs(List.of(cidrs));
        }

        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder label(@Nullable Output<String> label) {
            $.label = label;
            return this;
        }

        public Builder label(String label) {
            return label(Output.of(label));
        }

        public Builder portRange(@Nullable Output<String> portRange) {
            $.portRange = portRange;
            return this;
        }

        public Builder portRange(String portRange) {
            return portRange(Output.of(portRange));
        }

        public Builder protocol(@Nullable Output<String> protocol) {
            $.protocol = protocol;
            return this;
        }

        public Builder protocol(String protocol) {
            return protocol(Output.of(protocol));
        }

        public FirewallEgressRuleArgs build() {
            $.action = Objects.requireNonNull($.action, "expected parameter 'action' to be non-null");
            $.cidrs = Objects.requireNonNull($.cidrs, "expected parameter 'cidrs' to be non-null");
            return $;
        }
    }

}
