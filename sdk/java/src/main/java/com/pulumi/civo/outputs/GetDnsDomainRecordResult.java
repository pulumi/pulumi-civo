// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.civo.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDnsDomainRecordResult {
    /**
     * @return The ID account of the domain
     * 
     */
    private String accountId;
    /**
     * @return The date when it was created in UTC format
     * 
     */
    private String createdAt;
    /**
     * @return The ID of the domain
     * 
     */
    private String domainId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The name of the record
     * 
     */
    private String name;
    /**
     * @return The priority of the record
     * 
     */
    private Integer priority;
    /**
     * @return How long caching DNS servers should cache this record
     * 
     */
    private Integer ttl;
    /**
     * @return The choice of record type from A, CNAME, MX, SRV or TXT
     * 
     */
    private String type;
    /**
     * @return The date when it was updated in UTC format
     * 
     */
    private String updatedAt;
    /**
     * @return The IP address (A or MX), hostname (CNAME or MX) or text value (TXT) to serve for this record
     * 
     */
    private String value;

    private GetDnsDomainRecordResult() {}
    /**
     * @return The ID account of the domain
     * 
     */
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return The date when it was created in UTC format
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return The ID of the domain
     * 
     */
    public String domainId() {
        return this.domainId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the record
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The priority of the record
     * 
     */
    public Integer priority() {
        return this.priority;
    }
    /**
     * @return How long caching DNS servers should cache this record
     * 
     */
    public Integer ttl() {
        return this.ttl;
    }
    /**
     * @return The choice of record type from A, CNAME, MX, SRV or TXT
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The date when it was updated in UTC format
     * 
     */
    public String updatedAt() {
        return this.updatedAt;
    }
    /**
     * @return The IP address (A or MX), hostname (CNAME or MX) or text value (TXT) to serve for this record
     * 
     */
    public String value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDnsDomainRecordResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private String createdAt;
        private String domainId;
        private String id;
        private String name;
        private Integer priority;
        private Integer ttl;
        private String type;
        private String updatedAt;
        private String value;
        public Builder() {}
        public Builder(GetDnsDomainRecordResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.createdAt = defaults.createdAt;
    	      this.domainId = defaults.domainId;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.priority = defaults.priority;
    	      this.ttl = defaults.ttl;
    	      this.type = defaults.type;
    	      this.updatedAt = defaults.updatedAt;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("GetDnsDomainRecordResult", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetDnsDomainRecordResult", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder domainId(String domainId) {
            if (domainId == null) {
              throw new MissingRequiredPropertyException("GetDnsDomainRecordResult", "domainId");
            }
            this.domainId = domainId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDnsDomainRecordResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetDnsDomainRecordResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder priority(Integer priority) {
            if (priority == null) {
              throw new MissingRequiredPropertyException("GetDnsDomainRecordResult", "priority");
            }
            this.priority = priority;
            return this;
        }
        @CustomType.Setter
        public Builder ttl(Integer ttl) {
            if (ttl == null) {
              throw new MissingRequiredPropertyException("GetDnsDomainRecordResult", "ttl");
            }
            this.ttl = ttl;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetDnsDomainRecordResult", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder updatedAt(String updatedAt) {
            if (updatedAt == null) {
              throw new MissingRequiredPropertyException("GetDnsDomainRecordResult", "updatedAt");
            }
            this.updatedAt = updatedAt;
            return this;
        }
        @CustomType.Setter
        public Builder value(String value) {
            if (value == null) {
              throw new MissingRequiredPropertyException("GetDnsDomainRecordResult", "value");
            }
            this.value = value;
            return this;
        }
        public GetDnsDomainRecordResult build() {
            final var _resultValue = new GetDnsDomainRecordResult();
            _resultValue.accountId = accountId;
            _resultValue.createdAt = createdAt;
            _resultValue.domainId = domainId;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.priority = priority;
            _resultValue.ttl = ttl;
            _resultValue.type = type;
            _resultValue.updatedAt = updatedAt;
            _resultValue.value = value;
            return _resultValue;
        }
    }
}
