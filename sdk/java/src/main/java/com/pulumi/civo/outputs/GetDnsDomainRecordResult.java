// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.civo.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDnsDomainRecordResult {
    private String accountId;
    private String createdAt;
    private String domainId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String name;
    private Integer priority;
    private Integer ttl;
    private String type;
    private String updatedAt;
    private String value;

    private GetDnsDomainRecordResult() {}
    public String accountId() {
        return this.accountId;
    }
    public String createdAt() {
        return this.createdAt;
    }
    public String domainId() {
        return this.domainId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    public Integer priority() {
        return this.priority;
    }
    public Integer ttl() {
        return this.ttl;
    }
    public String type() {
        return this.type;
    }
    public String updatedAt() {
        return this.updatedAt;
    }
    public String value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDnsDomainRecordResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private String createdAt;
        private String domainId;
        private String id;
        private String name;
        private Integer priority;
        private Integer ttl;
        private String type;
        private String updatedAt;
        private String value;
        public Builder() {}
        public Builder(GetDnsDomainRecordResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.createdAt = defaults.createdAt;
    	      this.domainId = defaults.domainId;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.priority = defaults.priority;
    	      this.ttl = defaults.ttl;
    	      this.type = defaults.type;
    	      this.updatedAt = defaults.updatedAt;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            this.accountId = Objects.requireNonNull(accountId);
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            this.createdAt = Objects.requireNonNull(createdAt);
            return this;
        }
        @CustomType.Setter
        public Builder domainId(String domainId) {
            this.domainId = Objects.requireNonNull(domainId);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder priority(Integer priority) {
            this.priority = Objects.requireNonNull(priority);
            return this;
        }
        @CustomType.Setter
        public Builder ttl(Integer ttl) {
            this.ttl = Objects.requireNonNull(ttl);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder updatedAt(String updatedAt) {
            this.updatedAt = Objects.requireNonNull(updatedAt);
            return this;
        }
        @CustomType.Setter
        public Builder value(String value) {
            this.value = Objects.requireNonNull(value);
            return this;
        }
        public GetDnsDomainRecordResult build() {
            final var o = new GetDnsDomainRecordResult();
            o.accountId = accountId;
            o.createdAt = createdAt;
            o.domainId = domainId;
            o.id = id;
            o.name = name;
            o.priority = priority;
            o.ttl = ttl;
            o.type = type;
            o.updatedAt = updatedAt;
            o.value = value;
            return o;
        }
    }
}
