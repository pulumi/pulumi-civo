// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Civo
{
    public partial class Instance : Pulumi.CustomResource
    {
        [Output("cpuCores")]
        public Output<int> CpuCores { get; private set; } = null!;

        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        [Output("diskGb")]
        public Output<int> DiskGb { get; private set; } = null!;

        /// <summary>
        /// The ID of the firewall to use, from the current list. If left blank or not sent, the default firewall will be used (open
        /// to all)
        /// </summary>
        [Output("firewallId")]
        public Output<string?> FirewallId { get; private set; } = null!;

        /// <summary>
        /// A fully qualified domain name that should be set as the instance's hostname (required)
        /// </summary>
        [Output("hostname")]
        public Output<string> Hostname { get; private set; } = null!;

        [Output("initialPassword")]
        public Output<string> InitialPassword { get; private set; } = null!;

        /// <summary>
        /// The name of the initial user created on the server (optional; this will default to the template's default_username and
        /// fallback to civo)
        /// </summary>
        [Output("initialUser")]
        public Output<string?> InitialUser { get; private set; } = null!;

        /// <summary>
        /// This must be the ID of the network from the network listing (optional; default network used when not specified)
        /// </summary>
        [Output("networkId")]
        public Output<string?> NetworkId { get; private set; } = null!;

        /// <summary>
        /// Add some notes to the instance
        /// </summary>
        [Output("notes")]
        public Output<string?> Notes { get; private set; } = null!;

        [Output("privateIp")]
        public Output<string> PrivateIp { get; private set; } = null!;

        [Output("pseudoIp")]
        public Output<string> PseudoIp { get; private set; } = null!;

        [Output("publicIp")]
        public Output<string> PublicIp { get; private set; } = null!;

        /// <summary>
        /// This should be either none, create or `move_ip_from:intances_id` by default is create
        /// </summary>
        [Output("publicIpRequiered")]
        public Output<string?> PublicIpRequiered { get; private set; } = null!;

        [Output("ramMb")]
        public Output<int> RamMb { get; private set; } = null!;

        /// <summary>
        /// A fully qualified domain name that should be used as the instance's IP's reverse DNS (optional, uses the hostname if
        /// unspecified)
        /// </summary>
        [Output("reverseDns")]
        public Output<string?> ReverseDns { get; private set; } = null!;

        /// <summary>
        /// the contents of a script that will be uploaded to /usr/local/bin/civo-user-init-script on your instance,
        /// read/write/executable only by root and then will be executed at the end of the cloud initialization
        /// </summary>
        [Output("script")]
        public Output<string?> Script { get; private set; } = null!;

        /// <summary>
        /// The name of the size, from the current list, e.g. g2.small (required)
        /// </summary>
        [Output("size")]
        public Output<string?> Size { get; private set; } = null!;

        /// <summary>
        /// The ID of an already uploaded SSH public key to use for login to the default user (optional; if one isn't provided a
        /// random password will be set and returned in the initial_password field)
        /// </summary>
        [Output("sshkeyId")]
        public Output<string?> SshkeyId { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// An optional list of tags, represented as a key, value pair
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;

        /// <summary>
        /// The ID for the template to use to build the instance
        /// </summary>
        [Output("template")]
        public Output<string?> Template { get; private set; } = null!;


        /// <summary>
        /// Create a Instance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Instance(string name, InstanceArgs args, CustomResourceOptions? options = null)
            : base("civo:index/instance:Instance", name, args ?? new InstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Instance(string name, Input<string> id, InstanceState? state = null, CustomResourceOptions? options = null)
            : base("civo:index/instance:Instance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Instance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Instance Get(string name, Input<string> id, InstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new Instance(name, id, state, options);
        }
    }

    public sealed class InstanceArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the firewall to use, from the current list. If left blank or not sent, the default firewall will be used (open
        /// to all)
        /// </summary>
        [Input("firewallId")]
        public Input<string>? FirewallId { get; set; }

        /// <summary>
        /// A fully qualified domain name that should be set as the instance's hostname (required)
        /// </summary>
        [Input("hostname", required: true)]
        public Input<string> Hostname { get; set; } = null!;

        /// <summary>
        /// The name of the initial user created on the server (optional; this will default to the template's default_username and
        /// fallback to civo)
        /// </summary>
        [Input("initialUser")]
        public Input<string>? InitialUser { get; set; }

        /// <summary>
        /// This must be the ID of the network from the network listing (optional; default network used when not specified)
        /// </summary>
        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        /// <summary>
        /// Add some notes to the instance
        /// </summary>
        [Input("notes")]
        public Input<string>? Notes { get; set; }

        /// <summary>
        /// This should be either none, create or `move_ip_from:intances_id` by default is create
        /// </summary>
        [Input("publicIpRequiered")]
        public Input<string>? PublicIpRequiered { get; set; }

        /// <summary>
        /// A fully qualified domain name that should be used as the instance's IP's reverse DNS (optional, uses the hostname if
        /// unspecified)
        /// </summary>
        [Input("reverseDns")]
        public Input<string>? ReverseDns { get; set; }

        /// <summary>
        /// the contents of a script that will be uploaded to /usr/local/bin/civo-user-init-script on your instance,
        /// read/write/executable only by root and then will be executed at the end of the cloud initialization
        /// </summary>
        [Input("script")]
        public Input<string>? Script { get; set; }

        /// <summary>
        /// The name of the size, from the current list, e.g. g2.small (required)
        /// </summary>
        [Input("size")]
        public Input<string>? Size { get; set; }

        /// <summary>
        /// The ID of an already uploaded SSH public key to use for login to the default user (optional; if one isn't provided a
        /// random password will be set and returned in the initial_password field)
        /// </summary>
        [Input("sshkeyId")]
        public Input<string>? SshkeyId { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// An optional list of tags, represented as a key, value pair
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The ID for the template to use to build the instance
        /// </summary>
        [Input("template")]
        public Input<string>? Template { get; set; }

        public InstanceArgs()
        {
        }
    }

    public sealed class InstanceState : Pulumi.ResourceArgs
    {
        [Input("cpuCores")]
        public Input<int>? CpuCores { get; set; }

        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        [Input("diskGb")]
        public Input<int>? DiskGb { get; set; }

        /// <summary>
        /// The ID of the firewall to use, from the current list. If left blank or not sent, the default firewall will be used (open
        /// to all)
        /// </summary>
        [Input("firewallId")]
        public Input<string>? FirewallId { get; set; }

        /// <summary>
        /// A fully qualified domain name that should be set as the instance's hostname (required)
        /// </summary>
        [Input("hostname")]
        public Input<string>? Hostname { get; set; }

        [Input("initialPassword")]
        public Input<string>? InitialPassword { get; set; }

        /// <summary>
        /// The name of the initial user created on the server (optional; this will default to the template's default_username and
        /// fallback to civo)
        /// </summary>
        [Input("initialUser")]
        public Input<string>? InitialUser { get; set; }

        /// <summary>
        /// This must be the ID of the network from the network listing (optional; default network used when not specified)
        /// </summary>
        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        /// <summary>
        /// Add some notes to the instance
        /// </summary>
        [Input("notes")]
        public Input<string>? Notes { get; set; }

        [Input("privateIp")]
        public Input<string>? PrivateIp { get; set; }

        [Input("pseudoIp")]
        public Input<string>? PseudoIp { get; set; }

        [Input("publicIp")]
        public Input<string>? PublicIp { get; set; }

        /// <summary>
        /// This should be either none, create or `move_ip_from:intances_id` by default is create
        /// </summary>
        [Input("publicIpRequiered")]
        public Input<string>? PublicIpRequiered { get; set; }

        [Input("ramMb")]
        public Input<int>? RamMb { get; set; }

        /// <summary>
        /// A fully qualified domain name that should be used as the instance's IP's reverse DNS (optional, uses the hostname if
        /// unspecified)
        /// </summary>
        [Input("reverseDns")]
        public Input<string>? ReverseDns { get; set; }

        /// <summary>
        /// the contents of a script that will be uploaded to /usr/local/bin/civo-user-init-script on your instance,
        /// read/write/executable only by root and then will be executed at the end of the cloud initialization
        /// </summary>
        [Input("script")]
        public Input<string>? Script { get; set; }

        /// <summary>
        /// The name of the size, from the current list, e.g. g2.small (required)
        /// </summary>
        [Input("size")]
        public Input<string>? Size { get; set; }

        /// <summary>
        /// The ID of an already uploaded SSH public key to use for login to the default user (optional; if one isn't provided a
        /// random password will be set and returned in the initial_password field)
        /// </summary>
        [Input("sshkeyId")]
        public Input<string>? SshkeyId { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// An optional list of tags, represented as a key, value pair
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The ID for the template to use to build the instance
        /// </summary>
        [Input("template")]
        public Input<string>? Template { get; set; }

        public InstanceState()
        {
        }
    }
}
