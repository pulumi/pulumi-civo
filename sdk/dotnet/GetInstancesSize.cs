// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Civo
{
    public static class GetInstancesSize
    {
        /// <summary>
        /// Retrieves information about the instance sizes that Civo supports, with the ability to filter the results.
        /// 
        /// ## Schema
        /// 
        /// ### Optional
        /// 
        /// - **filter** (Block Set) One or more key/value pairs on which to filter results (see below for nested schema)
        /// - **id** (String) The ID of this resource.
        /// - **sort** (Block List) One or more key/direction pairs on which to sort results (see below for nested schema)
        /// 
        /// ### Read-Only
        /// 
        /// - **sizes** (List of Object) (see below for nested schema)
        /// 
        /// &lt;a id="nestedblock--filter"&gt;&lt;/a&gt;
        /// ### Nested Schema for `filter`
        /// 
        /// Required:
        /// 
        /// - **key** (String) Filter sizes by this key. This may be one of `cpu`, `description`, `disk`, `name`, `ram`, `selectable`, `type`.
        /// - **values** (List of String) Only retrieves `sizes` which keys has value that matches one of the values provided here
        /// 
        /// Optional:
        /// 
        /// - **all** (Boolean) Set to `true` to require that a field match all of the `values` instead of just one or more of them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure that all of the `values` are present in the list or set.
        /// - **match_by** (String) One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as substrings to find within the string field.
        /// 
        /// 
        /// &lt;a id="nestedblock--sort"&gt;&lt;/a&gt;
        /// ### Nested Schema for `sort`
        /// 
        /// Required:
        /// 
        /// - **key** (String) Sort sizes by this key. This may be one of `cpu`, `description`, `disk`, `name`, `ram`, `selectable`, `type`.
        /// 
        /// Optional:
        /// 
        /// - **direction** (String) The sort direction. This may be either `asc` or `desc`.
        /// 
        /// 
        /// &lt;a id="nestedatt--sizes"&gt;&lt;/a&gt;
        /// ### Nested Schema for `sizes`
        /// 
        /// Read-Only:
        /// 
        /// - **cpu** (Number)
        /// - **description** (String)
        /// - **disk** (Number)
        /// - **name** (String)
        /// - **ram** (Number)
        /// - **selectable** (Boolean)
        /// - **type** (String)
        /// </summary>
        public static Task<GetInstancesSizeResult> InvokeAsync(GetInstancesSizeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetInstancesSizeResult>("civo:index/getInstancesSize:getInstancesSize", args ?? new GetInstancesSizeArgs(), options.WithVersion());
    }


    public sealed class GetInstancesSizeArgs : Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetInstancesSizeFilterArgs>? _filters;
        public List<Inputs.GetInstancesSizeFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetInstancesSizeFilterArgs>());
            set => _filters = value;
        }

        [Input("sorts")]
        private List<Inputs.GetInstancesSizeSortArgs>? _sorts;
        public List<Inputs.GetInstancesSizeSortArgs> Sorts
        {
            get => _sorts ?? (_sorts = new List<Inputs.GetInstancesSizeSortArgs>());
            set => _sorts = value;
        }

        public GetInstancesSizeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetInstancesSizeResult
    {
        public readonly ImmutableArray<Outputs.GetInstancesSizeFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetInstancesSizeSizeResult> Sizes;
        public readonly ImmutableArray<Outputs.GetInstancesSizeSortResult> Sorts;

        [OutputConstructor]
        private GetInstancesSizeResult(
            ImmutableArray<Outputs.GetInstancesSizeFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetInstancesSizeSizeResult> sizes,

            ImmutableArray<Outputs.GetInstancesSizeSortResult> sorts)
        {
            Filters = filters;
            Id = id;
            Sizes = sizes;
            Sorts = sorts;
        }
    }
}
