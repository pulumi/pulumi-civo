// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Civo
{
    public static class GetSize
    {
        /// <summary>
        /// Retrieves information about the sizes that Civo supports, with the ability to filter the results.
        /// </summary>
        public static Task<GetSizeResult> InvokeAsync(GetSizeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSizeResult>("civo:index/getSize:getSize", args ?? new GetSizeArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves information about the sizes that Civo supports, with the ability to filter the results.
        /// </summary>
        public static Output<GetSizeResult> Invoke(GetSizeInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSizeResult>("civo:index/getSize:getSize", args ?? new GetSizeInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves information about the sizes that Civo supports, with the ability to filter the results.
        /// </summary>
        public static Output<GetSizeResult> Invoke(GetSizeInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSizeResult>("civo:index/getSize:getSize", args ?? new GetSizeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSizeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetSizeFilterArgs>? _filters;

        /// <summary>
        /// One or more key/value pairs on which to filter results
        /// </summary>
        public List<Inputs.GetSizeFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetSizeFilterArgs>());
            set => _filters = value;
        }

        [Input("sorts")]
        private List<Inputs.GetSizeSortArgs>? _sorts;

        /// <summary>
        /// One or more key/direction pairs on which to sort results
        /// </summary>
        public List<Inputs.GetSizeSortArgs> Sorts
        {
            get => _sorts ?? (_sorts = new List<Inputs.GetSizeSortArgs>());
            set => _sorts = value;
        }

        public GetSizeArgs()
        {
        }
        public static new GetSizeArgs Empty => new GetSizeArgs();
    }

    public sealed class GetSizeInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetSizeFilterInputArgs>? _filters;

        /// <summary>
        /// One or more key/value pairs on which to filter results
        /// </summary>
        public InputList<Inputs.GetSizeFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetSizeFilterInputArgs>());
            set => _filters = value;
        }

        [Input("sorts")]
        private InputList<Inputs.GetSizeSortInputArgs>? _sorts;

        /// <summary>
        /// One or more key/direction pairs on which to sort results
        /// </summary>
        public InputList<Inputs.GetSizeSortInputArgs> Sorts
        {
            get => _sorts ?? (_sorts = new InputList<Inputs.GetSizeSortInputArgs>());
            set => _sorts = value;
        }

        public GetSizeInvokeArgs()
        {
        }
        public static new GetSizeInvokeArgs Empty => new GetSizeInvokeArgs();
    }


    [OutputType]
    public sealed class GetSizeResult
    {
        /// <summary>
        /// One or more key/value pairs on which to filter results
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSizeFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetSizeSizeResult> Sizes;
        /// <summary>
        /// One or more key/direction pairs on which to sort results
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSizeSortResult> Sorts;

        [OutputConstructor]
        private GetSizeResult(
            ImmutableArray<Outputs.GetSizeFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetSizeSizeResult> sizes,

            ImmutableArray<Outputs.GetSizeSortResult> sorts)
        {
            Filters = filters;
            Id = id;
            Sizes = sizes;
            Sorts = sorts;
        }
    }
}
