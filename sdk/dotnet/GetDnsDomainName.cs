// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Civo
{
    public static class GetDnsDomainName
    {
        /// <summary>
        /// Get information on a domain. This data source provides the name and the id.
        /// 
        /// An error will be raised if the provided domain name is not in your Civo account.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Civo = Pulumi.Civo;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var domain = Output.Create(Civo.GetDnsDomainName.InvokeAsync(new Civo.GetDnsDomainNameArgs
        ///         {
        ///             Name = "domain.com",
        ///         }));
        ///         this.DomainOutput = domain.Apply(domain =&gt; domain.Name);
        ///         this.DomainIdOutput = domain.Apply(domain =&gt; domain.Id);
        ///     }
        /// 
        ///     [Output("domainOutput")]
        ///     public Output&lt;string&gt; DomainOutput { get; set; }
        ///     [Output("domainIdOutput")]
        ///     public Output&lt;string&gt; DomainIdOutput { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDnsDomainNameResult> InvokeAsync(GetDnsDomainNameArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDnsDomainNameResult>("civo:index/getDnsDomainName:getDnsDomainName", args ?? new GetDnsDomainNameArgs(), options.WithDefaults());

        /// <summary>
        /// Get information on a domain. This data source provides the name and the id.
        /// 
        /// An error will be raised if the provided domain name is not in your Civo account.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Civo = Pulumi.Civo;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var domain = Output.Create(Civo.GetDnsDomainName.InvokeAsync(new Civo.GetDnsDomainNameArgs
        ///         {
        ///             Name = "domain.com",
        ///         }));
        ///         this.DomainOutput = domain.Apply(domain =&gt; domain.Name);
        ///         this.DomainIdOutput = domain.Apply(domain =&gt; domain.Id);
        ///     }
        /// 
        ///     [Output("domainOutput")]
        ///     public Output&lt;string&gt; DomainOutput { get; set; }
        ///     [Output("domainIdOutput")]
        ///     public Output&lt;string&gt; DomainIdOutput { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetDnsDomainNameResult> Invoke(GetDnsDomainNameInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetDnsDomainNameResult>("civo:index/getDnsDomainName:getDnsDomainName", args ?? new GetDnsDomainNameInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDnsDomainNameArgs : Pulumi.InvokeArgs
    {
        [Input("id")]
        public string? Id { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        public GetDnsDomainNameArgs()
        {
        }
    }

    public sealed class GetDnsDomainNameInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetDnsDomainNameInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDnsDomainNameResult
    {
        public readonly string? Id;
        public readonly string? Name;

        [OutputConstructor]
        private GetDnsDomainNameResult(
            string? id,

            string? name)
        {
            Id = id;
            Name = name;
        }
    }
}
