// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Civo
{
    public static class GetKubernetesCluster
    {
        public static Task<GetKubernetesClusterResult> InvokeAsync(GetKubernetesClusterArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetKubernetesClusterResult>("civo:index/getKubernetesCluster:getKubernetesCluster", args ?? new GetKubernetesClusterArgs(), options.WithVersion());
    }


    public sealed class GetKubernetesClusterArgs : Pulumi.InvokeArgs
    {
        [Input("id")]
        public string? Id { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        public GetKubernetesClusterArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetKubernetesClusterResult
    {
        public readonly string ApiEndpoint;
        public readonly string Applications;
        public readonly string BuiltAt;
        public readonly string CreatedAt;
        public readonly string DnsEntry;
        public readonly string? Id;
        public readonly ImmutableArray<Outputs.GetKubernetesClusterInstalledApplicationResult> InstalledApplications;
        public readonly ImmutableArray<Outputs.GetKubernetesClusterInstanceResult> Instances;
        public readonly string Kubeconfig;
        public readonly string KubernetesVersion;
        public readonly string MasterIp;
        public readonly string? Name;
        public readonly int NumTargetNodes;
        public readonly bool Ready;
        public readonly string Status;
        public readonly string Tags;
        public readonly string TargetNodesSize;

        [OutputConstructor]
        private GetKubernetesClusterResult(
            string apiEndpoint,

            string applications,

            string builtAt,

            string createdAt,

            string dnsEntry,

            string? id,

            ImmutableArray<Outputs.GetKubernetesClusterInstalledApplicationResult> installedApplications,

            ImmutableArray<Outputs.GetKubernetesClusterInstanceResult> instances,

            string kubeconfig,

            string kubernetesVersion,

            string masterIp,

            string? name,

            int numTargetNodes,

            bool ready,

            string status,

            string tags,

            string targetNodesSize)
        {
            ApiEndpoint = apiEndpoint;
            Applications = applications;
            BuiltAt = builtAt;
            CreatedAt = createdAt;
            DnsEntry = dnsEntry;
            Id = id;
            InstalledApplications = installedApplications;
            Instances = instances;
            Kubeconfig = kubeconfig;
            KubernetesVersion = kubernetesVersion;
            MasterIp = masterIp;
            Name = name;
            NumTargetNodes = numTargetNodes;
            Ready = ready;
            Status = status;
            Tags = tags;
            TargetNodesSize = targetNodesSize;
        }
    }
}
