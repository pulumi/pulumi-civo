// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Civo
{
    public static class GetInstances
    {
        public static Task<GetInstancesResult> InvokeAsync(GetInstancesArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetInstancesResult>("civo:index/getInstances:getInstances", args ?? new GetInstancesArgs(), options.WithVersion());
    }


    public sealed class GetInstancesArgs : Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetInstancesFilterArgs>? _filters;

        /// <summary>
        /// Filter the results. The `filter` block is documented below.
        /// </summary>
        public List<Inputs.GetInstancesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetInstancesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// If is used, them all instances will be from that region.
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        [Input("sorts")]
        private List<Inputs.GetInstancesSortArgs>? _sorts;

        /// <summary>
        /// Sort the results. The `sort` block is documented below.
        /// </summary>
        public List<Inputs.GetInstancesSortArgs> Sorts
        {
            get => _sorts ?? (_sorts = new List<Inputs.GetInstancesSortArgs>());
            set => _sorts = value;
        }

        public GetInstancesArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetInstancesResult
    {
        public readonly ImmutableArray<Outputs.GetInstancesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of Instances satisfying any `filter` and `sort` criteria. Each instance has the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstancesInstanceResult> Instances;
        public readonly string? Region;
        public readonly ImmutableArray<Outputs.GetInstancesSortResult> Sorts;

        [OutputConstructor]
        private GetInstancesResult(
            ImmutableArray<Outputs.GetInstancesFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetInstancesInstanceResult> instances,

            string? region,

            ImmutableArray<Outputs.GetInstancesSortResult> sorts)
        {
            Filters = filters;
            Id = id;
            Instances = instances;
            Region = region;
            Sorts = sorts;
        }
    }
}
