// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Civo
{
    public static class GetSnapshot
    {
        public static Task<GetSnapshotResult> InvokeAsync(GetSnapshotArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSnapshotResult>("civo:index/getSnapshot:getSnapshot", args ?? new GetSnapshotArgs(), options.WithVersion());
    }


    public sealed class GetSnapshotArgs : Pulumi.InvokeArgs
    {
        [Input("id")]
        public string? Id { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        public GetSnapshotArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetSnapshotResult
    {
        public readonly string CompletedAt;
        public readonly string CronTiming;
        public readonly string Hostname;
        public readonly string? Id;
        public readonly string InstanceId;
        public readonly string? Name;
        public readonly string NextExecution;
        public readonly string Region;
        public readonly string RequestedAt;
        public readonly bool Safe;
        public readonly int SizeGb;
        public readonly string State;
        public readonly string TemplateId;

        [OutputConstructor]
        private GetSnapshotResult(
            string completedAt,

            string cronTiming,

            string hostname,

            string? id,

            string instanceId,

            string? name,

            string nextExecution,

            string region,

            string requestedAt,

            bool safe,

            int sizeGb,

            string state,

            string templateId)
        {
            CompletedAt = completedAt;
            CronTiming = cronTiming;
            Hostname = hostname;
            Id = id;
            InstanceId = instanceId;
            Name = name;
            NextExecution = nextExecution;
            Region = region;
            RequestedAt = requestedAt;
            Safe = safe;
            SizeGb = sizeGb;
            State = state;
            TemplateId = templateId;
        }
    }
}
