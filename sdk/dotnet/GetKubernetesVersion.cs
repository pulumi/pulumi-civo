// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Civo
{
    public static class GetKubernetesVersion
    {
        /// <summary>
        /// Provides access to the available Civo Kubernetes versions, with the ability to filter the results.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Civo = Pulumi.Civo;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var talos = Civo.GetKubernetesVersion.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Civo.Inputs.GetKubernetesVersionFilterInputArgs
        ///             {
        ///                 Key = "type",
        ///                 Values = new[]
        ///                 {
        ///                     "talos",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        ///     var k3s = Civo.GetKubernetesVersion.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Civo.Inputs.GetKubernetesVersionFilterInputArgs
        ///             {
        ///                 Key = "type",
        ///                 Values = new[]
        ///                 {
        ///                     "k3s",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetKubernetesVersionResult> InvokeAsync(GetKubernetesVersionArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetKubernetesVersionResult>("civo:index/getKubernetesVersion:getKubernetesVersion", args ?? new GetKubernetesVersionArgs(), options.WithDefaults());

        /// <summary>
        /// Provides access to the available Civo Kubernetes versions, with the ability to filter the results.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Civo = Pulumi.Civo;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var talos = Civo.GetKubernetesVersion.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Civo.Inputs.GetKubernetesVersionFilterInputArgs
        ///             {
        ///                 Key = "type",
        ///                 Values = new[]
        ///                 {
        ///                     "talos",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        ///     var k3s = Civo.GetKubernetesVersion.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Civo.Inputs.GetKubernetesVersionFilterInputArgs
        ///             {
        ///                 Key = "type",
        ///                 Values = new[]
        ///                 {
        ///                     "k3s",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetKubernetesVersionResult> Invoke(GetKubernetesVersionInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetKubernetesVersionResult>("civo:index/getKubernetesVersion:getKubernetesVersion", args ?? new GetKubernetesVersionInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides access to the available Civo Kubernetes versions, with the ability to filter the results.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Civo = Pulumi.Civo;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var talos = Civo.GetKubernetesVersion.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Civo.Inputs.GetKubernetesVersionFilterInputArgs
        ///             {
        ///                 Key = "type",
        ///                 Values = new[]
        ///                 {
        ///                     "talos",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        ///     var k3s = Civo.GetKubernetesVersion.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Civo.Inputs.GetKubernetesVersionFilterInputArgs
        ///             {
        ///                 Key = "type",
        ///                 Values = new[]
        ///                 {
        ///                     "k3s",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetKubernetesVersionResult> Invoke(GetKubernetesVersionInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetKubernetesVersionResult>("civo:index/getKubernetesVersion:getKubernetesVersion", args ?? new GetKubernetesVersionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetKubernetesVersionArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetKubernetesVersionFilterArgs>? _filters;

        /// <summary>
        /// One or more key/value pairs on which to filter results
        /// </summary>
        public List<Inputs.GetKubernetesVersionFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetKubernetesVersionFilterArgs>());
            set => _filters = value;
        }

        [Input("sorts")]
        private List<Inputs.GetKubernetesVersionSortArgs>? _sorts;

        /// <summary>
        /// One or more key/direction pairs on which to sort results
        /// </summary>
        public List<Inputs.GetKubernetesVersionSortArgs> Sorts
        {
            get => _sorts ?? (_sorts = new List<Inputs.GetKubernetesVersionSortArgs>());
            set => _sorts = value;
        }

        public GetKubernetesVersionArgs()
        {
        }
        public static new GetKubernetesVersionArgs Empty => new GetKubernetesVersionArgs();
    }

    public sealed class GetKubernetesVersionInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetKubernetesVersionFilterInputArgs>? _filters;

        /// <summary>
        /// One or more key/value pairs on which to filter results
        /// </summary>
        public InputList<Inputs.GetKubernetesVersionFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetKubernetesVersionFilterInputArgs>());
            set => _filters = value;
        }

        [Input("sorts")]
        private InputList<Inputs.GetKubernetesVersionSortInputArgs>? _sorts;

        /// <summary>
        /// One or more key/direction pairs on which to sort results
        /// </summary>
        public InputList<Inputs.GetKubernetesVersionSortInputArgs> Sorts
        {
            get => _sorts ?? (_sorts = new InputList<Inputs.GetKubernetesVersionSortInputArgs>());
            set => _sorts = value;
        }

        public GetKubernetesVersionInvokeArgs()
        {
        }
        public static new GetKubernetesVersionInvokeArgs Empty => new GetKubernetesVersionInvokeArgs();
    }


    [OutputType]
    public sealed class GetKubernetesVersionResult
    {
        /// <summary>
        /// One or more key/value pairs on which to filter results
        /// </summary>
        public readonly ImmutableArray<Outputs.GetKubernetesVersionFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// One or more key/direction pairs on which to sort results
        /// </summary>
        public readonly ImmutableArray<Outputs.GetKubernetesVersionSortResult> Sorts;
        public readonly ImmutableArray<Outputs.GetKubernetesVersionVersionResult> Versions;

        [OutputConstructor]
        private GetKubernetesVersionResult(
            ImmutableArray<Outputs.GetKubernetesVersionFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetKubernetesVersionSortResult> sorts,

            ImmutableArray<Outputs.GetKubernetesVersionVersionResult> versions)
        {
            Filters = filters;
            Id = id;
            Sorts = sorts;
            Versions = versions;
        }
    }
}
