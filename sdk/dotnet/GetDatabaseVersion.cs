// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Civo
{
    public static class GetDatabaseVersion
    {
        /// <summary>
        /// Retrieves information about the database versions that Civo supports, with the ability to filter the results.
        /// </summary>
        public static Task<GetDatabaseVersionResult> InvokeAsync(GetDatabaseVersionArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDatabaseVersionResult>("civo:index/getDatabaseVersion:getDatabaseVersion", args ?? new GetDatabaseVersionArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves information about the database versions that Civo supports, with the ability to filter the results.
        /// </summary>
        public static Output<GetDatabaseVersionResult> Invoke(GetDatabaseVersionInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDatabaseVersionResult>("civo:index/getDatabaseVersion:getDatabaseVersion", args ?? new GetDatabaseVersionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDatabaseVersionArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetDatabaseVersionFilterArgs>? _filters;

        /// <summary>
        /// One or more key/value pairs on which to filter results
        /// </summary>
        public List<Inputs.GetDatabaseVersionFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDatabaseVersionFilterArgs>());
            set => _filters = value;
        }

        [Input("sorts")]
        private List<Inputs.GetDatabaseVersionSortArgs>? _sorts;

        /// <summary>
        /// One or more key/direction pairs on which to sort results
        /// </summary>
        public List<Inputs.GetDatabaseVersionSortArgs> Sorts
        {
            get => _sorts ?? (_sorts = new List<Inputs.GetDatabaseVersionSortArgs>());
            set => _sorts = value;
        }

        public GetDatabaseVersionArgs()
        {
        }
        public static new GetDatabaseVersionArgs Empty => new GetDatabaseVersionArgs();
    }

    public sealed class GetDatabaseVersionInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetDatabaseVersionFilterInputArgs>? _filters;

        /// <summary>
        /// One or more key/value pairs on which to filter results
        /// </summary>
        public InputList<Inputs.GetDatabaseVersionFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetDatabaseVersionFilterInputArgs>());
            set => _filters = value;
        }

        [Input("sorts")]
        private InputList<Inputs.GetDatabaseVersionSortInputArgs>? _sorts;

        /// <summary>
        /// One or more key/direction pairs on which to sort results
        /// </summary>
        public InputList<Inputs.GetDatabaseVersionSortInputArgs> Sorts
        {
            get => _sorts ?? (_sorts = new InputList<Inputs.GetDatabaseVersionSortInputArgs>());
            set => _sorts = value;
        }

        public GetDatabaseVersionInvokeArgs()
        {
        }
        public static new GetDatabaseVersionInvokeArgs Empty => new GetDatabaseVersionInvokeArgs();
    }


    [OutputType]
    public sealed class GetDatabaseVersionResult
    {
        /// <summary>
        /// One or more key/value pairs on which to filter results
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDatabaseVersionFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// One or more key/direction pairs on which to sort results
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDatabaseVersionSortResult> Sorts;
        public readonly ImmutableArray<Outputs.GetDatabaseVersionVersionResult> Versions;

        [OutputConstructor]
        private GetDatabaseVersionResult(
            ImmutableArray<Outputs.GetDatabaseVersionFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetDatabaseVersionSortResult> sorts,

            ImmutableArray<Outputs.GetDatabaseVersionVersionResult> versions)
        {
            Filters = filters;
            Id = id;
            Sorts = sorts;
            Versions = versions;
        }
    }
}
