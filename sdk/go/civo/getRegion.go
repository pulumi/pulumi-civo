// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package civo

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-civo/sdk/v2/go/civo/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Retrieves information about the region that Civo supports, with the ability to filter the results.
func GetRegion(ctx *pulumi.Context, args *GetRegionArgs, opts ...pulumi.InvokeOption) (*GetRegionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRegionResult
	err := ctx.Invoke("civo:index/getRegion:getRegion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRegion.
type GetRegionArgs struct {
	// One or more key/value pairs on which to filter results
	Filters []GetRegionFilter `pulumi:"filters"`
	// One or more key/direction pairs on which to sort results
	Sorts []GetRegionSort `pulumi:"sorts"`
}

// A collection of values returned by getRegion.
type GetRegionResult struct {
	// One or more key/value pairs on which to filter results
	Filters []GetRegionFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id      string            `pulumi:"id"`
	Regions []GetRegionRegion `pulumi:"regions"`
	// One or more key/direction pairs on which to sort results
	Sorts []GetRegionSort `pulumi:"sorts"`
}

func GetRegionOutput(ctx *pulumi.Context, args GetRegionOutputArgs, opts ...pulumi.InvokeOption) GetRegionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRegionResult, error) {
			args := v.(GetRegionArgs)
			r, err := GetRegion(ctx, &args, opts...)
			var s GetRegionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetRegionResultOutput)
}

// A collection of arguments for invoking getRegion.
type GetRegionOutputArgs struct {
	// One or more key/value pairs on which to filter results
	Filters GetRegionFilterArrayInput `pulumi:"filters"`
	// One or more key/direction pairs on which to sort results
	Sorts GetRegionSortArrayInput `pulumi:"sorts"`
}

func (GetRegionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionArgs)(nil)).Elem()
}

// A collection of values returned by getRegion.
type GetRegionResultOutput struct{ *pulumi.OutputState }

func (GetRegionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionResult)(nil)).Elem()
}

func (o GetRegionResultOutput) ToGetRegionResultOutput() GetRegionResultOutput {
	return o
}

func (o GetRegionResultOutput) ToGetRegionResultOutputWithContext(ctx context.Context) GetRegionResultOutput {
	return o
}

func (o GetRegionResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetRegionResult] {
	return pulumix.Output[GetRegionResult]{
		OutputState: o.OutputState,
	}
}

// One or more key/value pairs on which to filter results
func (o GetRegionResultOutput) Filters() GetRegionFilterArrayOutput {
	return o.ApplyT(func(v GetRegionResult) []GetRegionFilter { return v.Filters }).(GetRegionFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRegionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRegionResultOutput) Regions() GetRegionRegionArrayOutput {
	return o.ApplyT(func(v GetRegionResult) []GetRegionRegion { return v.Regions }).(GetRegionRegionArrayOutput)
}

// One or more key/direction pairs on which to sort results
func (o GetRegionResultOutput) Sorts() GetRegionSortArrayOutput {
	return o.ApplyT(func(v GetRegionResult) []GetRegionSort { return v.Sorts }).(GetRegionSortArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRegionResultOutput{})
}
