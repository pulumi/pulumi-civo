// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package civo

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides access to the available Civo Kubernetes versions, with the ability to filter the results.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-civo/sdk/v2/go/civo"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := civo.GetKubernetesVersion(ctx, &civo.GetKubernetesVersionArgs{
// 			Filters: []civo.GetKubernetesVersionFilter{
// 				civo.GetKubernetesVersionFilter{
// 					Key: "type",
// 					Values: []string{
// 						"stable",
// 					},
// 				},
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// <!-- schema generated by tfplugindocs -->
// ## Schema
//
// ### Optional
//
// - **filter** (Block Set) One or more key/value pairs on which to filter results (see below for nested schema)
// - **id** (String) The ID of this resource.
// - **sort** (Block List) One or more key/direction pairs on which to sort results (see below for nested schema)
//
// ### Read-Only
//
// - **versions** (List of Object) (see below for nested schema)
//
// <a id="nestedblock--filter"></a>
// ### Nested Schema for `filter`
//
// Required:
//
// - **key** (String) Filter versions by this key. This may be one of `default`, `label`, `type`, `version`.
// - **values** (List of String) Only retrieves `versions` which keys has value that matches one of the values provided here
//
// Optional:
//
// - **all** (Boolean) Set to `true` to require that a field match all of the `values` instead of just one or more of them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure that all of the `values` are present in the list or set.
// - **match_by** (String) One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as substrings to find within the string field.
//
// <a id="nestedblock--sort"></a>
// ### Nested Schema for `sort`
//
// Required:
//
// - **key** (String) Sort versions by this key. This may be one of `default`, `label`, `type`, `version`.
//
// Optional:
//
// - **direction** (String) The sort direction. This may be either `asc` or `desc`.
//
// <a id="nestedatt--versions"></a>
// ### Nested Schema for `versions`
//
// Read-Only:
//
// - **default** (Boolean)
// - **label** (String)
// - **type** (String)
// - **version** (String)
func GetKubernetesVersion(ctx *pulumi.Context, args *GetKubernetesVersionArgs, opts ...pulumi.InvokeOption) (*GetKubernetesVersionResult, error) {
	var rv GetKubernetesVersionResult
	err := ctx.Invoke("civo:index/getKubernetesVersion:getKubernetesVersion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKubernetesVersion.
type GetKubernetesVersionArgs struct {
	Filters []GetKubernetesVersionFilter `pulumi:"filters"`
	Sorts   []GetKubernetesVersionSort   `pulumi:"sorts"`
}

// A collection of values returned by getKubernetesVersion.
type GetKubernetesVersionResult struct {
	Filters []GetKubernetesVersionFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id       string                        `pulumi:"id"`
	Sorts    []GetKubernetesVersionSort    `pulumi:"sorts"`
	Versions []GetKubernetesVersionVersion `pulumi:"versions"`
}
