// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package civo

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type KubernetesCluster struct {
	pulumi.CustomResourceState

	ApiEndpoint pulumi.StringOutput `pulumi:"apiEndpoint"`
	// a comma separated list of applications to install.Spaces within application names are fine, but shouldn't be either side
	// of the comma.If you want to remove a default installed application, prefix it with a '-', e.g. -traefik.
	Applications          pulumi.StringPtrOutput                           `pulumi:"applications"`
	BuiltAt               pulumi.StringOutput                              `pulumi:"builtAt"`
	CreatedAt             pulumi.StringOutput                              `pulumi:"createdAt"`
	DnsEntry              pulumi.StringOutput                              `pulumi:"dnsEntry"`
	InstalledApplications KubernetesClusterInstalledApplicationArrayOutput `pulumi:"installedApplications"`
	Instances             KubernetesClusterInstanceArrayOutput             `pulumi:"instances"`
	Kubeconfig            pulumi.StringOutput                              `pulumi:"kubeconfig"`
	// the version of k3s to install (optional, the default is currently the latest available)
	KubernetesVersion pulumi.StringPtrOutput `pulumi:"kubernetesVersion"`
	MasterIp          pulumi.StringOutput    `pulumi:"masterIp"`
	// a name for your cluster, must be unique within your account (required)
	Name pulumi.StringOutput `pulumi:"name"`
	// the number of instances to create (optional, the default at the time of writing is 3)
	NumTargetNodes pulumi.IntPtrOutput `pulumi:"numTargetNodes"`
	Ready          pulumi.BoolOutput   `pulumi:"ready"`
	Status         pulumi.StringOutput `pulumi:"status"`
	// a space separated list of tags, to be used freely as required (optional)
	Tags pulumi.StringPtrOutput `pulumi:"tags"`
	// the size of each node (optional, the default is currently g2.small)
	TargetNodesSize pulumi.StringPtrOutput `pulumi:"targetNodesSize"`
}

// NewKubernetesCluster registers a new resource with the given unique name, arguments, and options.
func NewKubernetesCluster(ctx *pulumi.Context,
	name string, args *KubernetesClusterArgs, opts ...pulumi.ResourceOption) (*KubernetesCluster, error) {
	if args == nil {
		args = &KubernetesClusterArgs{}
	}
	var resource KubernetesCluster
	err := ctx.RegisterResource("civo:index/kubernetesCluster:KubernetesCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKubernetesCluster gets an existing KubernetesCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKubernetesCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KubernetesClusterState, opts ...pulumi.ResourceOption) (*KubernetesCluster, error) {
	var resource KubernetesCluster
	err := ctx.ReadResource("civo:index/kubernetesCluster:KubernetesCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KubernetesCluster resources.
type kubernetesClusterState struct {
	ApiEndpoint *string `pulumi:"apiEndpoint"`
	// a comma separated list of applications to install.Spaces within application names are fine, but shouldn't be either side
	// of the comma.If you want to remove a default installed application, prefix it with a '-', e.g. -traefik.
	Applications          *string                                 `pulumi:"applications"`
	BuiltAt               *string                                 `pulumi:"builtAt"`
	CreatedAt             *string                                 `pulumi:"createdAt"`
	DnsEntry              *string                                 `pulumi:"dnsEntry"`
	InstalledApplications []KubernetesClusterInstalledApplication `pulumi:"installedApplications"`
	Instances             []KubernetesClusterInstance             `pulumi:"instances"`
	Kubeconfig            *string                                 `pulumi:"kubeconfig"`
	// the version of k3s to install (optional, the default is currently the latest available)
	KubernetesVersion *string `pulumi:"kubernetesVersion"`
	MasterIp          *string `pulumi:"masterIp"`
	// a name for your cluster, must be unique within your account (required)
	Name *string `pulumi:"name"`
	// the number of instances to create (optional, the default at the time of writing is 3)
	NumTargetNodes *int    `pulumi:"numTargetNodes"`
	Ready          *bool   `pulumi:"ready"`
	Status         *string `pulumi:"status"`
	// a space separated list of tags, to be used freely as required (optional)
	Tags *string `pulumi:"tags"`
	// the size of each node (optional, the default is currently g2.small)
	TargetNodesSize *string `pulumi:"targetNodesSize"`
}

type KubernetesClusterState struct {
	ApiEndpoint pulumi.StringPtrInput
	// a comma separated list of applications to install.Spaces within application names are fine, but shouldn't be either side
	// of the comma.If you want to remove a default installed application, prefix it with a '-', e.g. -traefik.
	Applications          pulumi.StringPtrInput
	BuiltAt               pulumi.StringPtrInput
	CreatedAt             pulumi.StringPtrInput
	DnsEntry              pulumi.StringPtrInput
	InstalledApplications KubernetesClusterInstalledApplicationArrayInput
	Instances             KubernetesClusterInstanceArrayInput
	Kubeconfig            pulumi.StringPtrInput
	// the version of k3s to install (optional, the default is currently the latest available)
	KubernetesVersion pulumi.StringPtrInput
	MasterIp          pulumi.StringPtrInput
	// a name for your cluster, must be unique within your account (required)
	Name pulumi.StringPtrInput
	// the number of instances to create (optional, the default at the time of writing is 3)
	NumTargetNodes pulumi.IntPtrInput
	Ready          pulumi.BoolPtrInput
	Status         pulumi.StringPtrInput
	// a space separated list of tags, to be used freely as required (optional)
	Tags pulumi.StringPtrInput
	// the size of each node (optional, the default is currently g2.small)
	TargetNodesSize pulumi.StringPtrInput
}

func (KubernetesClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*kubernetesClusterState)(nil)).Elem()
}

type kubernetesClusterArgs struct {
	// a comma separated list of applications to install.Spaces within application names are fine, but shouldn't be either side
	// of the comma.If you want to remove a default installed application, prefix it with a '-', e.g. -traefik.
	Applications *string `pulumi:"applications"`
	// the version of k3s to install (optional, the default is currently the latest available)
	KubernetesVersion *string `pulumi:"kubernetesVersion"`
	// a name for your cluster, must be unique within your account (required)
	Name *string `pulumi:"name"`
	// the number of instances to create (optional, the default at the time of writing is 3)
	NumTargetNodes *int `pulumi:"numTargetNodes"`
	// a space separated list of tags, to be used freely as required (optional)
	Tags *string `pulumi:"tags"`
	// the size of each node (optional, the default is currently g2.small)
	TargetNodesSize *string `pulumi:"targetNodesSize"`
}

// The set of arguments for constructing a KubernetesCluster resource.
type KubernetesClusterArgs struct {
	// a comma separated list of applications to install.Spaces within application names are fine, but shouldn't be either side
	// of the comma.If you want to remove a default installed application, prefix it with a '-', e.g. -traefik.
	Applications pulumi.StringPtrInput
	// the version of k3s to install (optional, the default is currently the latest available)
	KubernetesVersion pulumi.StringPtrInput
	// a name for your cluster, must be unique within your account (required)
	Name pulumi.StringPtrInput
	// the number of instances to create (optional, the default at the time of writing is 3)
	NumTargetNodes pulumi.IntPtrInput
	// a space separated list of tags, to be used freely as required (optional)
	Tags pulumi.StringPtrInput
	// the size of each node (optional, the default is currently g2.small)
	TargetNodesSize pulumi.StringPtrInput
}

func (KubernetesClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kubernetesClusterArgs)(nil)).Elem()
}
