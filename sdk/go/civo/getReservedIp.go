// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package civo

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-civo/sdk/v2/go/civo/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupReservedIp(ctx *pulumi.Context, args *LookupReservedIpArgs, opts ...pulumi.InvokeOption) (*LookupReservedIpResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupReservedIpResult
	err := ctx.Invoke("civo:index/getReservedIp:getReservedIp", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getReservedIp.
type LookupReservedIpArgs struct {
	// ID for the ip address
	Id *string `pulumi:"id"`
	// Name for the ip address
	Name *string `pulumi:"name"`
}

// A collection of values returned by getReservedIp.
type LookupReservedIpResult struct {
	// ID for the ip address
	Id *string `pulumi:"id"`
	// The ID of the instance the IP is attached to
	InstanceId string `pulumi:"instanceId"`
	// The name of the instance the IP is attached to
	InstanceName string `pulumi:"instanceName"`
	// The IP Address requested
	Ip string `pulumi:"ip"`
	// Name for the ip address
	Name *string `pulumi:"name"`
	// The region the ip address is in
	Region string `pulumi:"region"`
}

func LookupReservedIpOutput(ctx *pulumi.Context, args LookupReservedIpOutputArgs, opts ...pulumi.InvokeOption) LookupReservedIpResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupReservedIpResult, error) {
			args := v.(LookupReservedIpArgs)
			r, err := LookupReservedIp(ctx, &args, opts...)
			var s LookupReservedIpResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupReservedIpResultOutput)
}

// A collection of arguments for invoking getReservedIp.
type LookupReservedIpOutputArgs struct {
	// ID for the ip address
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name for the ip address
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupReservedIpOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupReservedIpArgs)(nil)).Elem()
}

// A collection of values returned by getReservedIp.
type LookupReservedIpResultOutput struct{ *pulumi.OutputState }

func (LookupReservedIpResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupReservedIpResult)(nil)).Elem()
}

func (o LookupReservedIpResultOutput) ToLookupReservedIpResultOutput() LookupReservedIpResultOutput {
	return o
}

func (o LookupReservedIpResultOutput) ToLookupReservedIpResultOutputWithContext(ctx context.Context) LookupReservedIpResultOutput {
	return o
}

func (o LookupReservedIpResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupReservedIpResult] {
	return pulumix.Output[LookupReservedIpResult]{
		OutputState: o.OutputState,
	}
}

// ID for the ip address
func (o LookupReservedIpResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupReservedIpResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The ID of the instance the IP is attached to
func (o LookupReservedIpResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReservedIpResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The name of the instance the IP is attached to
func (o LookupReservedIpResultOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReservedIpResult) string { return v.InstanceName }).(pulumi.StringOutput)
}

// The IP Address requested
func (o LookupReservedIpResultOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReservedIpResult) string { return v.Ip }).(pulumi.StringOutput)
}

// Name for the ip address
func (o LookupReservedIpResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupReservedIpResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The region the ip address is in
func (o LookupReservedIpResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReservedIpResult) string { return v.Region }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupReservedIpResultOutput{})
}
