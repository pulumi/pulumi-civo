// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package civo

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Instance struct {
	pulumi.CustomResourceState

	CpuCores  pulumi.IntOutput    `pulumi:"cpuCores"`
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	DiskGb    pulumi.IntOutput    `pulumi:"diskGb"`
	// The ID of the firewall to use, from the current list. If left blank or not sent, the default firewall will be used (open
	// to all)
	FirewallId pulumi.StringPtrOutput `pulumi:"firewallId"`
	// A fully qualified domain name that should be set as the instance's hostname (required)
	Hostname        pulumi.StringOutput `pulumi:"hostname"`
	InitialPassword pulumi.StringOutput `pulumi:"initialPassword"`
	// The name of the initial user created on the server (optional; this will default to the template's default_username and
	// fallback to civo)
	InitialUser pulumi.StringPtrOutput `pulumi:"initialUser"`
	// This must be the ID of the network from the network listing (optional; default network used when not specified)
	NetworkId pulumi.StringPtrOutput `pulumi:"networkId"`
	// Add some notes to the instance
	Notes     pulumi.StringPtrOutput `pulumi:"notes"`
	PrivateIp pulumi.StringOutput    `pulumi:"privateIp"`
	PseudoIp  pulumi.StringOutput    `pulumi:"pseudoIp"`
	PublicIp  pulumi.StringOutput    `pulumi:"publicIp"`
	// This should be either none, create or `move_ip_from:intances_id` by default is create
	PublicIpRequiered pulumi.StringPtrOutput `pulumi:"publicIpRequiered"`
	RamMb             pulumi.IntOutput       `pulumi:"ramMb"`
	// A fully qualified domain name that should be used as the instance's IP's reverse DNS (optional, uses the hostname if
	// unspecified)
	ReverseDns pulumi.StringPtrOutput `pulumi:"reverseDns"`
	// the contents of a script that will be uploaded to /usr/local/bin/civo-user-init-script on your instance,
	// read/write/executable only by root and then will be executed at the end of the cloud initialization
	Script pulumi.StringPtrOutput `pulumi:"script"`
	// The name of the size, from the current list, e.g. g2.small (required)
	Size pulumi.StringPtrOutput `pulumi:"size"`
	// The ID of an already uploaded SSH public key to use for login to the default user (optional; if one isn't provided a
	// random password will be set and returned in the initial_password field)
	SshkeyId pulumi.StringPtrOutput `pulumi:"sshkeyId"`
	Status   pulumi.StringOutput    `pulumi:"status"`
	// An optional list of tags, represented as a key, value pair
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// The ID for the template to use to build the instance
	Template pulumi.StringPtrOutput `pulumi:"template"`
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOption) (*Instance, error) {
	if args == nil || args.Hostname == nil {
		return nil, errors.New("missing required argument 'Hostname'")
	}
	if args == nil {
		args = &InstanceArgs{}
	}
	var resource Instance
	err := ctx.RegisterResource("civo:index/instance:Instance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceState, opts ...pulumi.ResourceOption) (*Instance, error) {
	var resource Instance
	err := ctx.ReadResource("civo:index/instance:Instance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Instance resources.
type instanceState struct {
	CpuCores  *int    `pulumi:"cpuCores"`
	CreatedAt *string `pulumi:"createdAt"`
	DiskGb    *int    `pulumi:"diskGb"`
	// The ID of the firewall to use, from the current list. If left blank or not sent, the default firewall will be used (open
	// to all)
	FirewallId *string `pulumi:"firewallId"`
	// A fully qualified domain name that should be set as the instance's hostname (required)
	Hostname        *string `pulumi:"hostname"`
	InitialPassword *string `pulumi:"initialPassword"`
	// The name of the initial user created on the server (optional; this will default to the template's default_username and
	// fallback to civo)
	InitialUser *string `pulumi:"initialUser"`
	// This must be the ID of the network from the network listing (optional; default network used when not specified)
	NetworkId *string `pulumi:"networkId"`
	// Add some notes to the instance
	Notes     *string `pulumi:"notes"`
	PrivateIp *string `pulumi:"privateIp"`
	PseudoIp  *string `pulumi:"pseudoIp"`
	PublicIp  *string `pulumi:"publicIp"`
	// This should be either none, create or `move_ip_from:intances_id` by default is create
	PublicIpRequiered *string `pulumi:"publicIpRequiered"`
	RamMb             *int    `pulumi:"ramMb"`
	// A fully qualified domain name that should be used as the instance's IP's reverse DNS (optional, uses the hostname if
	// unspecified)
	ReverseDns *string `pulumi:"reverseDns"`
	// the contents of a script that will be uploaded to /usr/local/bin/civo-user-init-script on your instance,
	// read/write/executable only by root and then will be executed at the end of the cloud initialization
	Script *string `pulumi:"script"`
	// The name of the size, from the current list, e.g. g2.small (required)
	Size *string `pulumi:"size"`
	// The ID of an already uploaded SSH public key to use for login to the default user (optional; if one isn't provided a
	// random password will be set and returned in the initial_password field)
	SshkeyId *string `pulumi:"sshkeyId"`
	Status   *string `pulumi:"status"`
	// An optional list of tags, represented as a key, value pair
	Tags []string `pulumi:"tags"`
	// The ID for the template to use to build the instance
	Template *string `pulumi:"template"`
}

type InstanceState struct {
	CpuCores  pulumi.IntPtrInput
	CreatedAt pulumi.StringPtrInput
	DiskGb    pulumi.IntPtrInput
	// The ID of the firewall to use, from the current list. If left blank or not sent, the default firewall will be used (open
	// to all)
	FirewallId pulumi.StringPtrInput
	// A fully qualified domain name that should be set as the instance's hostname (required)
	Hostname        pulumi.StringPtrInput
	InitialPassword pulumi.StringPtrInput
	// The name of the initial user created on the server (optional; this will default to the template's default_username and
	// fallback to civo)
	InitialUser pulumi.StringPtrInput
	// This must be the ID of the network from the network listing (optional; default network used when not specified)
	NetworkId pulumi.StringPtrInput
	// Add some notes to the instance
	Notes     pulumi.StringPtrInput
	PrivateIp pulumi.StringPtrInput
	PseudoIp  pulumi.StringPtrInput
	PublicIp  pulumi.StringPtrInput
	// This should be either none, create or `move_ip_from:intances_id` by default is create
	PublicIpRequiered pulumi.StringPtrInput
	RamMb             pulumi.IntPtrInput
	// A fully qualified domain name that should be used as the instance's IP's reverse DNS (optional, uses the hostname if
	// unspecified)
	ReverseDns pulumi.StringPtrInput
	// the contents of a script that will be uploaded to /usr/local/bin/civo-user-init-script on your instance,
	// read/write/executable only by root and then will be executed at the end of the cloud initialization
	Script pulumi.StringPtrInput
	// The name of the size, from the current list, e.g. g2.small (required)
	Size pulumi.StringPtrInput
	// The ID of an already uploaded SSH public key to use for login to the default user (optional; if one isn't provided a
	// random password will be set and returned in the initial_password field)
	SshkeyId pulumi.StringPtrInput
	Status   pulumi.StringPtrInput
	// An optional list of tags, represented as a key, value pair
	Tags pulumi.StringArrayInput
	// The ID for the template to use to build the instance
	Template pulumi.StringPtrInput
}

func (InstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceState)(nil)).Elem()
}

type instanceArgs struct {
	// The ID of the firewall to use, from the current list. If left blank or not sent, the default firewall will be used (open
	// to all)
	FirewallId *string `pulumi:"firewallId"`
	// A fully qualified domain name that should be set as the instance's hostname (required)
	Hostname string `pulumi:"hostname"`
	// The name of the initial user created on the server (optional; this will default to the template's default_username and
	// fallback to civo)
	InitialUser *string `pulumi:"initialUser"`
	// This must be the ID of the network from the network listing (optional; default network used when not specified)
	NetworkId *string `pulumi:"networkId"`
	// Add some notes to the instance
	Notes *string `pulumi:"notes"`
	// This should be either none, create or `move_ip_from:intances_id` by default is create
	PublicIpRequiered *string `pulumi:"publicIpRequiered"`
	// A fully qualified domain name that should be used as the instance's IP's reverse DNS (optional, uses the hostname if
	// unspecified)
	ReverseDns *string `pulumi:"reverseDns"`
	// the contents of a script that will be uploaded to /usr/local/bin/civo-user-init-script on your instance,
	// read/write/executable only by root and then will be executed at the end of the cloud initialization
	Script *string `pulumi:"script"`
	// The name of the size, from the current list, e.g. g2.small (required)
	Size *string `pulumi:"size"`
	// The ID of an already uploaded SSH public key to use for login to the default user (optional; if one isn't provided a
	// random password will be set and returned in the initial_password field)
	SshkeyId *string `pulumi:"sshkeyId"`
	// An optional list of tags, represented as a key, value pair
	Tags []string `pulumi:"tags"`
	// The ID for the template to use to build the instance
	Template *string `pulumi:"template"`
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	// The ID of the firewall to use, from the current list. If left blank or not sent, the default firewall will be used (open
	// to all)
	FirewallId pulumi.StringPtrInput
	// A fully qualified domain name that should be set as the instance's hostname (required)
	Hostname pulumi.StringInput
	// The name of the initial user created on the server (optional; this will default to the template's default_username and
	// fallback to civo)
	InitialUser pulumi.StringPtrInput
	// This must be the ID of the network from the network listing (optional; default network used when not specified)
	NetworkId pulumi.StringPtrInput
	// Add some notes to the instance
	Notes pulumi.StringPtrInput
	// This should be either none, create or `move_ip_from:intances_id` by default is create
	PublicIpRequiered pulumi.StringPtrInput
	// A fully qualified domain name that should be used as the instance's IP's reverse DNS (optional, uses the hostname if
	// unspecified)
	ReverseDns pulumi.StringPtrInput
	// the contents of a script that will be uploaded to /usr/local/bin/civo-user-init-script on your instance,
	// read/write/executable only by root and then will be executed at the end of the cloud initialization
	Script pulumi.StringPtrInput
	// The name of the size, from the current list, e.g. g2.small (required)
	Size pulumi.StringPtrInput
	// The ID of an already uploaded SSH public key to use for login to the default user (optional; if one isn't provided a
	// random password will be set and returned in the initial_password field)
	SshkeyId pulumi.StringPtrInput
	// An optional list of tags, represented as a key, value pair
	Tags pulumi.StringArrayInput
	// The ID for the template to use to build the instance
	Template pulumi.StringPtrInput
}

func (InstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceArgs)(nil)).Elem()
}
