// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package civo

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type DnsDomainName struct {
	pulumi.CustomResourceState

	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// A fully qualified domain name
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewDnsDomainName registers a new resource with the given unique name, arguments, and options.
func NewDnsDomainName(ctx *pulumi.Context,
	name string, args *DnsDomainNameArgs, opts ...pulumi.ResourceOption) (*DnsDomainName, error) {
	if args == nil {
		args = &DnsDomainNameArgs{}
	}
	var resource DnsDomainName
	err := ctx.RegisterResource("civo:index/dnsDomainName:DnsDomainName", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDnsDomainName gets an existing DnsDomainName resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDnsDomainName(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DnsDomainNameState, opts ...pulumi.ResourceOption) (*DnsDomainName, error) {
	var resource DnsDomainName
	err := ctx.ReadResource("civo:index/dnsDomainName:DnsDomainName", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DnsDomainName resources.
type dnsDomainNameState struct {
	AccountId *string `pulumi:"accountId"`
	// A fully qualified domain name
	Name *string `pulumi:"name"`
}

type DnsDomainNameState struct {
	AccountId pulumi.StringPtrInput
	// A fully qualified domain name
	Name pulumi.StringPtrInput
}

func (DnsDomainNameState) ElementType() reflect.Type {
	return reflect.TypeOf((*dnsDomainNameState)(nil)).Elem()
}

type dnsDomainNameArgs struct {
	// A fully qualified domain name
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a DnsDomainName resource.
type DnsDomainNameArgs struct {
	// A fully qualified domain name
	Name pulumi.StringPtrInput
}

func (DnsDomainNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dnsDomainNameArgs)(nil)).Elem()
}
