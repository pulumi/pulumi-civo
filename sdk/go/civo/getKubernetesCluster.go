// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package civo

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Civo Kubernetes cluster data source.
//
// Note: This data source returns a single Kubernetes cluster. When specifying a name, an error will be raised if more than one Kubernetes cluster found.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-civo/sdk/v2/go/civo"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := "my-super-cluster"
// 		my_cluster, err := civo.LookupKubernetesCluster(ctx, &GetKubernetesClusterArgs{
// 			Name: &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("kubernetesClusterOutput", my_cluster.MasterIp)
// 		return nil
// 	})
// }
// ```
func LookupKubernetesCluster(ctx *pulumi.Context, args *LookupKubernetesClusterArgs, opts ...pulumi.InvokeOption) (*LookupKubernetesClusterResult, error) {
	var rv LookupKubernetesClusterResult
	err := ctx.Invoke("civo:index/getKubernetesCluster:getKubernetesCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKubernetesCluster.
type LookupKubernetesClusterArgs struct {
	// The ID of this resource.
	Id *string `pulumi:"id"`
	// The name of the Kubernetes Cluster
	Name *string `pulumi:"name"`
	// The region where cluster is running
	Region *string `pulumi:"region"`
}

// A collection of values returned by getKubernetesCluster.
type LookupKubernetesClusterResult struct {
	// The base URL of the API server on the Kubernetes master node
	ApiEndpoint string `pulumi:"apiEndpoint"`
	// A list of application installed
	Applications string `pulumi:"applications"`
	// The date where the Kubernetes cluster was create
	CreatedAt string `pulumi:"createdAt"`
	// The unique dns entry for the cluster in this case point to the master
	DnsEntry string `pulumi:"dnsEntry"`
	// The ID of this resource.
	Id                    *string                                    `pulumi:"id"`
	InstalledApplications []GetKubernetesClusterInstalledApplication `pulumi:"installedApplications"`
	Instances             []GetKubernetesClusterInstance             `pulumi:"instances"`
	// A representation of the Kubernetes cluster's kubeconfig in yaml format
	Kubeconfig string `pulumi:"kubeconfig"`
	// The version of Kubernetes
	KubernetesVersion string `pulumi:"kubernetesVersion"`
	// The IP of the Kubernetes master node
	MasterIp string `pulumi:"masterIp"`
	// The name of the Kubernetes Cluster
	Name *string `pulumi:"name"`
	// The size of the Kubernetes cluster
	NumTargetNodes int                        `pulumi:"numTargetNodes"`
	Pools          []GetKubernetesClusterPool `pulumi:"pools"`
	// If the Kubernetes cluster is ready
	Ready bool `pulumi:"ready"`
	// The region where cluster is running
	Region *string `pulumi:"region"`
	// The status of Kubernetes cluster
	Status string `pulumi:"status"`
	// A list of tags
	Tags string `pulumi:"tags"`
	// The size of each node
	TargetNodesSize string `pulumi:"targetNodesSize"`
}

func LookupKubernetesClusterOutput(ctx *pulumi.Context, args LookupKubernetesClusterOutputArgs, opts ...pulumi.InvokeOption) LookupKubernetesClusterResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupKubernetesClusterResult, error) {
			args := v.(LookupKubernetesClusterArgs)
			r, err := LookupKubernetesCluster(ctx, &args, opts...)
			return *r, err
		}).(LookupKubernetesClusterResultOutput)
}

// A collection of arguments for invoking getKubernetesCluster.
type LookupKubernetesClusterOutputArgs struct {
	// The ID of this resource.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the Kubernetes Cluster
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The region where cluster is running
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (LookupKubernetesClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKubernetesClusterArgs)(nil)).Elem()
}

// A collection of values returned by getKubernetesCluster.
type LookupKubernetesClusterResultOutput struct{ *pulumi.OutputState }

func (LookupKubernetesClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKubernetesClusterResult)(nil)).Elem()
}

func (o LookupKubernetesClusterResultOutput) ToLookupKubernetesClusterResultOutput() LookupKubernetesClusterResultOutput {
	return o
}

func (o LookupKubernetesClusterResultOutput) ToLookupKubernetesClusterResultOutputWithContext(ctx context.Context) LookupKubernetesClusterResultOutput {
	return o
}

// The base URL of the API server on the Kubernetes master node
func (o LookupKubernetesClusterResultOutput) ApiEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) string { return v.ApiEndpoint }).(pulumi.StringOutput)
}

// A list of application installed
func (o LookupKubernetesClusterResultOutput) Applications() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) string { return v.Applications }).(pulumi.StringOutput)
}

// The date where the Kubernetes cluster was create
func (o LookupKubernetesClusterResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The unique dns entry for the cluster in this case point to the master
func (o LookupKubernetesClusterResultOutput) DnsEntry() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) string { return v.DnsEntry }).(pulumi.StringOutput)
}

// The ID of this resource.
func (o LookupKubernetesClusterResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupKubernetesClusterResultOutput) InstalledApplications() GetKubernetesClusterInstalledApplicationArrayOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) []GetKubernetesClusterInstalledApplication {
		return v.InstalledApplications
	}).(GetKubernetesClusterInstalledApplicationArrayOutput)
}

func (o LookupKubernetesClusterResultOutput) Instances() GetKubernetesClusterInstanceArrayOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) []GetKubernetesClusterInstance { return v.Instances }).(GetKubernetesClusterInstanceArrayOutput)
}

// A representation of the Kubernetes cluster's kubeconfig in yaml format
func (o LookupKubernetesClusterResultOutput) Kubeconfig() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) string { return v.Kubeconfig }).(pulumi.StringOutput)
}

// The version of Kubernetes
func (o LookupKubernetesClusterResultOutput) KubernetesVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) string { return v.KubernetesVersion }).(pulumi.StringOutput)
}

// The IP of the Kubernetes master node
func (o LookupKubernetesClusterResultOutput) MasterIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) string { return v.MasterIp }).(pulumi.StringOutput)
}

// The name of the Kubernetes Cluster
func (o LookupKubernetesClusterResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The size of the Kubernetes cluster
func (o LookupKubernetesClusterResultOutput) NumTargetNodes() pulumi.IntOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) int { return v.NumTargetNodes }).(pulumi.IntOutput)
}

func (o LookupKubernetesClusterResultOutput) Pools() GetKubernetesClusterPoolArrayOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) []GetKubernetesClusterPool { return v.Pools }).(GetKubernetesClusterPoolArrayOutput)
}

// If the Kubernetes cluster is ready
func (o LookupKubernetesClusterResultOutput) Ready() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) bool { return v.Ready }).(pulumi.BoolOutput)
}

// The region where cluster is running
func (o LookupKubernetesClusterResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// The status of Kubernetes cluster
func (o LookupKubernetesClusterResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) string { return v.Status }).(pulumi.StringOutput)
}

// A list of tags
func (o LookupKubernetesClusterResultOutput) Tags() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) string { return v.Tags }).(pulumi.StringOutput)
}

// The size of each node
func (o LookupKubernetesClusterResultOutput) TargetNodesSize() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesClusterResult) string { return v.TargetNodesSize }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupKubernetesClusterResultOutput{})
}
