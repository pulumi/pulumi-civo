// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package civo

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieve information about a firewall for use in other resources.
//
// This data source provides all of the firewall's properties as configured on your Civo account.
//
// Firewalls may be looked up by id or label, and you can optionally pass region if you want to make a lookup for an expecific firewall inside that region.
func LookupFirewall(ctx *pulumi.Context, args *LookupFirewallArgs, opts ...pulumi.InvokeOption) (*LookupFirewallResult, error) {
	var rv LookupFirewallResult
	err := ctx.Invoke("civo:index/getFirewall:getFirewall", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFirewall.
type LookupFirewallArgs struct {
	// The ID of this resource.
	Id *string `pulumi:"id"`
	// The name of the Kubernetes Cluster
	Name *string `pulumi:"name"`
	// The region where cluster is running
	Region *string `pulumi:"region"`
}

// A collection of values returned by getFirewall.
type LookupFirewallResult struct {
	// The ID of this resource.
	Id *string `pulumi:"id"`
	// The name of the Kubernetes Cluster
	Name *string `pulumi:"name"`
	// The id of the associated network
	NetworkId string `pulumi:"networkId"`
	// The region where cluster is running
	Region *string `pulumi:"region"`
}

func LookupFirewallOutput(ctx *pulumi.Context, args LookupFirewallOutputArgs, opts ...pulumi.InvokeOption) LookupFirewallResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFirewallResult, error) {
			args := v.(LookupFirewallArgs)
			r, err := LookupFirewall(ctx, &args, opts...)
			return *r, err
		}).(LookupFirewallResultOutput)
}

// A collection of arguments for invoking getFirewall.
type LookupFirewallOutputArgs struct {
	// The ID of this resource.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the Kubernetes Cluster
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The region where cluster is running
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (LookupFirewallOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFirewallArgs)(nil)).Elem()
}

// A collection of values returned by getFirewall.
type LookupFirewallResultOutput struct{ *pulumi.OutputState }

func (LookupFirewallResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFirewallResult)(nil)).Elem()
}

func (o LookupFirewallResultOutput) ToLookupFirewallResultOutput() LookupFirewallResultOutput {
	return o
}

func (o LookupFirewallResultOutput) ToLookupFirewallResultOutputWithContext(ctx context.Context) LookupFirewallResultOutput {
	return o
}

// The ID of this resource.
func (o LookupFirewallResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFirewallResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the Kubernetes Cluster
func (o LookupFirewallResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFirewallResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The id of the associated network
func (o LookupFirewallResultOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirewallResult) string { return v.NetworkId }).(pulumi.StringOutput)
}

// The region where cluster is running
func (o LookupFirewallResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFirewallResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFirewallResultOutput{})
}
