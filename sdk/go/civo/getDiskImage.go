// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package civo

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-civo/sdk/v2/go/civo/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information on an disk image for use in other resources (e.g. creating a instance) with the ability to filter the results.
func GetDiskImage(ctx *pulumi.Context, args *GetDiskImageArgs, opts ...pulumi.InvokeOption) (*GetDiskImageResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDiskImageResult
	err := ctx.Invoke("civo:index/getDiskImage:getDiskImage", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDiskImage.
type GetDiskImageArgs struct {
	// One or more key/value pairs on which to filter results
	Filters []GetDiskImageFilter `pulumi:"filters"`
	// If is used, all disk image will be from this region. Required if no region is set in provider.
	Region *string `pulumi:"region"`
	// One or more key/direction pairs on which to sort results
	Sorts []GetDiskImageSort `pulumi:"sorts"`
}

// A collection of values returned by getDiskImage.
type GetDiskImageResult struct {
	Diskimages []GetDiskImageDiskimage `pulumi:"diskimages"`
	// One or more key/value pairs on which to filter results
	Filters []GetDiskImageFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// If is used, all disk image will be from this region. Required if no region is set in provider.
	Region *string `pulumi:"region"`
	// One or more key/direction pairs on which to sort results
	Sorts []GetDiskImageSort `pulumi:"sorts"`
}

func GetDiskImageOutput(ctx *pulumi.Context, args GetDiskImageOutputArgs, opts ...pulumi.InvokeOption) GetDiskImageResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDiskImageResultOutput, error) {
			args := v.(GetDiskImageArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetDiskImageResult
			secret, err := ctx.InvokePackageRaw("civo:index/getDiskImage:getDiskImage", args, &rv, "", opts...)
			if err != nil {
				return GetDiskImageResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetDiskImageResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetDiskImageResultOutput), nil
			}
			return output, nil
		}).(GetDiskImageResultOutput)
}

// A collection of arguments for invoking getDiskImage.
type GetDiskImageOutputArgs struct {
	// One or more key/value pairs on which to filter results
	Filters GetDiskImageFilterArrayInput `pulumi:"filters"`
	// If is used, all disk image will be from this region. Required if no region is set in provider.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// One or more key/direction pairs on which to sort results
	Sorts GetDiskImageSortArrayInput `pulumi:"sorts"`
}

func (GetDiskImageOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDiskImageArgs)(nil)).Elem()
}

// A collection of values returned by getDiskImage.
type GetDiskImageResultOutput struct{ *pulumi.OutputState }

func (GetDiskImageResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDiskImageResult)(nil)).Elem()
}

func (o GetDiskImageResultOutput) ToGetDiskImageResultOutput() GetDiskImageResultOutput {
	return o
}

func (o GetDiskImageResultOutput) ToGetDiskImageResultOutputWithContext(ctx context.Context) GetDiskImageResultOutput {
	return o
}

func (o GetDiskImageResultOutput) Diskimages() GetDiskImageDiskimageArrayOutput {
	return o.ApplyT(func(v GetDiskImageResult) []GetDiskImageDiskimage { return v.Diskimages }).(GetDiskImageDiskimageArrayOutput)
}

// One or more key/value pairs on which to filter results
func (o GetDiskImageResultOutput) Filters() GetDiskImageFilterArrayOutput {
	return o.ApplyT(func(v GetDiskImageResult) []GetDiskImageFilter { return v.Filters }).(GetDiskImageFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDiskImageResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskImageResult) string { return v.Id }).(pulumi.StringOutput)
}

// If is used, all disk image will be from this region. Required if no region is set in provider.
func (o GetDiskImageResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDiskImageResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// One or more key/direction pairs on which to sort results
func (o GetDiskImageResultOutput) Sorts() GetDiskImageSortArrayOutput {
	return o.ApplyT(func(v GetDiskImageResult) []GetDiskImageSort { return v.Sorts }).(GetDiskImageSortArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDiskImageResultOutput{})
}
