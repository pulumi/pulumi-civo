// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package civo

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type KubernetesClusterInstalledApplication struct {
	// The name of the application
	Application *string `pulumi:"application"`
	// The category of the application
	Category *string `pulumi:"category"`
	// if installed or not
	Installed *bool `pulumi:"installed"`
	// The version of the application
	Version *string `pulumi:"version"`
}

// KubernetesClusterInstalledApplicationInput is an input type that accepts KubernetesClusterInstalledApplicationArgs and KubernetesClusterInstalledApplicationOutput values.
// You can construct a concrete instance of `KubernetesClusterInstalledApplicationInput` via:
//
//          KubernetesClusterInstalledApplicationArgs{...}
type KubernetesClusterInstalledApplicationInput interface {
	pulumi.Input

	ToKubernetesClusterInstalledApplicationOutput() KubernetesClusterInstalledApplicationOutput
	ToKubernetesClusterInstalledApplicationOutputWithContext(context.Context) KubernetesClusterInstalledApplicationOutput
}

type KubernetesClusterInstalledApplicationArgs struct {
	// The name of the application
	Application pulumi.StringPtrInput `pulumi:"application"`
	// The category of the application
	Category pulumi.StringPtrInput `pulumi:"category"`
	// if installed or not
	Installed pulumi.BoolPtrInput `pulumi:"installed"`
	// The version of the application
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (KubernetesClusterInstalledApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterInstalledApplication)(nil)).Elem()
}

func (i KubernetesClusterInstalledApplicationArgs) ToKubernetesClusterInstalledApplicationOutput() KubernetesClusterInstalledApplicationOutput {
	return i.ToKubernetesClusterInstalledApplicationOutputWithContext(context.Background())
}

func (i KubernetesClusterInstalledApplicationArgs) ToKubernetesClusterInstalledApplicationOutputWithContext(ctx context.Context) KubernetesClusterInstalledApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterInstalledApplicationOutput)
}

// KubernetesClusterInstalledApplicationArrayInput is an input type that accepts KubernetesClusterInstalledApplicationArray and KubernetesClusterInstalledApplicationArrayOutput values.
// You can construct a concrete instance of `KubernetesClusterInstalledApplicationArrayInput` via:
//
//          KubernetesClusterInstalledApplicationArray{ KubernetesClusterInstalledApplicationArgs{...} }
type KubernetesClusterInstalledApplicationArrayInput interface {
	pulumi.Input

	ToKubernetesClusterInstalledApplicationArrayOutput() KubernetesClusterInstalledApplicationArrayOutput
	ToKubernetesClusterInstalledApplicationArrayOutputWithContext(context.Context) KubernetesClusterInstalledApplicationArrayOutput
}

type KubernetesClusterInstalledApplicationArray []KubernetesClusterInstalledApplicationInput

func (KubernetesClusterInstalledApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterInstalledApplication)(nil)).Elem()
}

func (i KubernetesClusterInstalledApplicationArray) ToKubernetesClusterInstalledApplicationArrayOutput() KubernetesClusterInstalledApplicationArrayOutput {
	return i.ToKubernetesClusterInstalledApplicationArrayOutputWithContext(context.Background())
}

func (i KubernetesClusterInstalledApplicationArray) ToKubernetesClusterInstalledApplicationArrayOutputWithContext(ctx context.Context) KubernetesClusterInstalledApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterInstalledApplicationArrayOutput)
}

type KubernetesClusterInstalledApplicationOutput struct{ *pulumi.OutputState }

func (KubernetesClusterInstalledApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterInstalledApplication)(nil)).Elem()
}

func (o KubernetesClusterInstalledApplicationOutput) ToKubernetesClusterInstalledApplicationOutput() KubernetesClusterInstalledApplicationOutput {
	return o
}

func (o KubernetesClusterInstalledApplicationOutput) ToKubernetesClusterInstalledApplicationOutputWithContext(ctx context.Context) KubernetesClusterInstalledApplicationOutput {
	return o
}

// The name of the application
func (o KubernetesClusterInstalledApplicationOutput) Application() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterInstalledApplication) *string { return v.Application }).(pulumi.StringPtrOutput)
}

// The category of the application
func (o KubernetesClusterInstalledApplicationOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterInstalledApplication) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// if installed or not
func (o KubernetesClusterInstalledApplicationOutput) Installed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterInstalledApplication) *bool { return v.Installed }).(pulumi.BoolPtrOutput)
}

// The version of the application
func (o KubernetesClusterInstalledApplicationOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterInstalledApplication) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type KubernetesClusterInstalledApplicationArrayOutput struct{ *pulumi.OutputState }

func (KubernetesClusterInstalledApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterInstalledApplication)(nil)).Elem()
}

func (o KubernetesClusterInstalledApplicationArrayOutput) ToKubernetesClusterInstalledApplicationArrayOutput() KubernetesClusterInstalledApplicationArrayOutput {
	return o
}

func (o KubernetesClusterInstalledApplicationArrayOutput) ToKubernetesClusterInstalledApplicationArrayOutputWithContext(ctx context.Context) KubernetesClusterInstalledApplicationArrayOutput {
	return o
}

func (o KubernetesClusterInstalledApplicationArrayOutput) Index(i pulumi.IntInput) KubernetesClusterInstalledApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesClusterInstalledApplication {
		return vs[0].([]KubernetesClusterInstalledApplication)[vs[1].(int)]
	}).(KubernetesClusterInstalledApplicationOutput)
}

type KubernetesClusterInstance struct {
	// Total cpu of the inatance.
	CpuCores *int `pulumi:"cpuCores"`
	// The date where the Kubernetes cluster was create.
	CreatedAt *string `pulumi:"createdAt"`
	// The size of the disk.
	DiskGb *int `pulumi:"diskGb"`
	// The firewall id assigned to the instance
	FirewallId *string `pulumi:"firewallId"`
	// The hostname of the instance.
	Hostname *string `pulumi:"hostname"`
	// The public ip of the instances, only available if the instances is the master
	PublicIp *string `pulumi:"publicIp"`
	// Total ram of the instance.
	RamMb *int `pulumi:"ramMb"`
	// The region where instance are.
	Region *string `pulumi:"region"`
	// The size of the instance.
	Size *string `pulumi:"size"`
	// The status of Kubernetes cluster.
	// * `ready` -If the Kubernetes cluster is ready.
	Status *string `pulumi:"status"`
	// A space separated list of tags, to be used freely as required.
	Tags []string `pulumi:"tags"`
}

// KubernetesClusterInstanceInput is an input type that accepts KubernetesClusterInstanceArgs and KubernetesClusterInstanceOutput values.
// You can construct a concrete instance of `KubernetesClusterInstanceInput` via:
//
//          KubernetesClusterInstanceArgs{...}
type KubernetesClusterInstanceInput interface {
	pulumi.Input

	ToKubernetesClusterInstanceOutput() KubernetesClusterInstanceOutput
	ToKubernetesClusterInstanceOutputWithContext(context.Context) KubernetesClusterInstanceOutput
}

type KubernetesClusterInstanceArgs struct {
	// Total cpu of the inatance.
	CpuCores pulumi.IntPtrInput `pulumi:"cpuCores"`
	// The date where the Kubernetes cluster was create.
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	// The size of the disk.
	DiskGb pulumi.IntPtrInput `pulumi:"diskGb"`
	// The firewall id assigned to the instance
	FirewallId pulumi.StringPtrInput `pulumi:"firewallId"`
	// The hostname of the instance.
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	// The public ip of the instances, only available if the instances is the master
	PublicIp pulumi.StringPtrInput `pulumi:"publicIp"`
	// Total ram of the instance.
	RamMb pulumi.IntPtrInput `pulumi:"ramMb"`
	// The region where instance are.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// The size of the instance.
	Size pulumi.StringPtrInput `pulumi:"size"`
	// The status of Kubernetes cluster.
	// * `ready` -If the Kubernetes cluster is ready.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// A space separated list of tags, to be used freely as required.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (KubernetesClusterInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterInstance)(nil)).Elem()
}

func (i KubernetesClusterInstanceArgs) ToKubernetesClusterInstanceOutput() KubernetesClusterInstanceOutput {
	return i.ToKubernetesClusterInstanceOutputWithContext(context.Background())
}

func (i KubernetesClusterInstanceArgs) ToKubernetesClusterInstanceOutputWithContext(ctx context.Context) KubernetesClusterInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterInstanceOutput)
}

// KubernetesClusterInstanceArrayInput is an input type that accepts KubernetesClusterInstanceArray and KubernetesClusterInstanceArrayOutput values.
// You can construct a concrete instance of `KubernetesClusterInstanceArrayInput` via:
//
//          KubernetesClusterInstanceArray{ KubernetesClusterInstanceArgs{...} }
type KubernetesClusterInstanceArrayInput interface {
	pulumi.Input

	ToKubernetesClusterInstanceArrayOutput() KubernetesClusterInstanceArrayOutput
	ToKubernetesClusterInstanceArrayOutputWithContext(context.Context) KubernetesClusterInstanceArrayOutput
}

type KubernetesClusterInstanceArray []KubernetesClusterInstanceInput

func (KubernetesClusterInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterInstance)(nil)).Elem()
}

func (i KubernetesClusterInstanceArray) ToKubernetesClusterInstanceArrayOutput() KubernetesClusterInstanceArrayOutput {
	return i.ToKubernetesClusterInstanceArrayOutputWithContext(context.Background())
}

func (i KubernetesClusterInstanceArray) ToKubernetesClusterInstanceArrayOutputWithContext(ctx context.Context) KubernetesClusterInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterInstanceArrayOutput)
}

type KubernetesClusterInstanceOutput struct{ *pulumi.OutputState }

func (KubernetesClusterInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterInstance)(nil)).Elem()
}

func (o KubernetesClusterInstanceOutput) ToKubernetesClusterInstanceOutput() KubernetesClusterInstanceOutput {
	return o
}

func (o KubernetesClusterInstanceOutput) ToKubernetesClusterInstanceOutputWithContext(ctx context.Context) KubernetesClusterInstanceOutput {
	return o
}

// Total cpu of the inatance.
func (o KubernetesClusterInstanceOutput) CpuCores() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterInstance) *int { return v.CpuCores }).(pulumi.IntPtrOutput)
}

// The date where the Kubernetes cluster was create.
func (o KubernetesClusterInstanceOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterInstance) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The size of the disk.
func (o KubernetesClusterInstanceOutput) DiskGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterInstance) *int { return v.DiskGb }).(pulumi.IntPtrOutput)
}

// The firewall id assigned to the instance
func (o KubernetesClusterInstanceOutput) FirewallId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterInstance) *string { return v.FirewallId }).(pulumi.StringPtrOutput)
}

// The hostname of the instance.
func (o KubernetesClusterInstanceOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterInstance) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

// The public ip of the instances, only available if the instances is the master
func (o KubernetesClusterInstanceOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterInstance) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

// Total ram of the instance.
func (o KubernetesClusterInstanceOutput) RamMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterInstance) *int { return v.RamMb }).(pulumi.IntPtrOutput)
}

// The region where instance are.
func (o KubernetesClusterInstanceOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterInstance) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// The size of the instance.
func (o KubernetesClusterInstanceOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterInstance) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// The status of Kubernetes cluster.
// * `ready` -If the Kubernetes cluster is ready.
func (o KubernetesClusterInstanceOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterInstance) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// A space separated list of tags, to be used freely as required.
func (o KubernetesClusterInstanceOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesClusterInstance) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type KubernetesClusterInstanceArrayOutput struct{ *pulumi.OutputState }

func (KubernetesClusterInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterInstance)(nil)).Elem()
}

func (o KubernetesClusterInstanceArrayOutput) ToKubernetesClusterInstanceArrayOutput() KubernetesClusterInstanceArrayOutput {
	return o
}

func (o KubernetesClusterInstanceArrayOutput) ToKubernetesClusterInstanceArrayOutputWithContext(ctx context.Context) KubernetesClusterInstanceArrayOutput {
	return o
}

func (o KubernetesClusterInstanceArrayOutput) Index(i pulumi.IntInput) KubernetesClusterInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesClusterInstance {
		return vs[0].([]KubernetesClusterInstance)[vs[1].(int)]
	}).(KubernetesClusterInstanceOutput)
}

type LoadBalancerBackend struct {
	InstanceId string `pulumi:"instanceId"`
	Port       int    `pulumi:"port"`
	Protocol   string `pulumi:"protocol"`
}

// LoadBalancerBackendInput is an input type that accepts LoadBalancerBackendArgs and LoadBalancerBackendOutput values.
// You can construct a concrete instance of `LoadBalancerBackendInput` via:
//
//          LoadBalancerBackendArgs{...}
type LoadBalancerBackendInput interface {
	pulumi.Input

	ToLoadBalancerBackendOutput() LoadBalancerBackendOutput
	ToLoadBalancerBackendOutputWithContext(context.Context) LoadBalancerBackendOutput
}

type LoadBalancerBackendArgs struct {
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	Port       pulumi.IntInput    `pulumi:"port"`
	Protocol   pulumi.StringInput `pulumi:"protocol"`
}

func (LoadBalancerBackendArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerBackend)(nil)).Elem()
}

func (i LoadBalancerBackendArgs) ToLoadBalancerBackendOutput() LoadBalancerBackendOutput {
	return i.ToLoadBalancerBackendOutputWithContext(context.Background())
}

func (i LoadBalancerBackendArgs) ToLoadBalancerBackendOutputWithContext(ctx context.Context) LoadBalancerBackendOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerBackendOutput)
}

// LoadBalancerBackendArrayInput is an input type that accepts LoadBalancerBackendArray and LoadBalancerBackendArrayOutput values.
// You can construct a concrete instance of `LoadBalancerBackendArrayInput` via:
//
//          LoadBalancerBackendArray{ LoadBalancerBackendArgs{...} }
type LoadBalancerBackendArrayInput interface {
	pulumi.Input

	ToLoadBalancerBackendArrayOutput() LoadBalancerBackendArrayOutput
	ToLoadBalancerBackendArrayOutputWithContext(context.Context) LoadBalancerBackendArrayOutput
}

type LoadBalancerBackendArray []LoadBalancerBackendInput

func (LoadBalancerBackendArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerBackend)(nil)).Elem()
}

func (i LoadBalancerBackendArray) ToLoadBalancerBackendArrayOutput() LoadBalancerBackendArrayOutput {
	return i.ToLoadBalancerBackendArrayOutputWithContext(context.Background())
}

func (i LoadBalancerBackendArray) ToLoadBalancerBackendArrayOutputWithContext(ctx context.Context) LoadBalancerBackendArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerBackendArrayOutput)
}

type LoadBalancerBackendOutput struct{ *pulumi.OutputState }

func (LoadBalancerBackendOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerBackend)(nil)).Elem()
}

func (o LoadBalancerBackendOutput) ToLoadBalancerBackendOutput() LoadBalancerBackendOutput {
	return o
}

func (o LoadBalancerBackendOutput) ToLoadBalancerBackendOutputWithContext(ctx context.Context) LoadBalancerBackendOutput {
	return o
}

func (o LoadBalancerBackendOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerBackend) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o LoadBalancerBackendOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v LoadBalancerBackend) int { return v.Port }).(pulumi.IntOutput)
}

func (o LoadBalancerBackendOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerBackend) string { return v.Protocol }).(pulumi.StringOutput)
}

type LoadBalancerBackendArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerBackendArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerBackend)(nil)).Elem()
}

func (o LoadBalancerBackendArrayOutput) ToLoadBalancerBackendArrayOutput() LoadBalancerBackendArrayOutput {
	return o
}

func (o LoadBalancerBackendArrayOutput) ToLoadBalancerBackendArrayOutputWithContext(ctx context.Context) LoadBalancerBackendArrayOutput {
	return o
}

func (o LoadBalancerBackendArrayOutput) Index(i pulumi.IntInput) LoadBalancerBackendOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerBackend {
		return vs[0].([]LoadBalancerBackend)[vs[1].(int)]
	}).(LoadBalancerBackendOutput)
}

type GetInstancesFilter struct {
	// Filter the Instances by this key. This may be one of '`id`, `hostname`, `publicIp`, `privateIp`,
	// `pseudoIp`, `size`, `cpuCores`, `ramMb`, `diskGb`, `template` or `createdAt`.
	Key string `pulumi:"key"`
	// A list of values to match against the `key` field. Only retrieves Instances
	// where the `key` field takes on one or more of the values provided here.
	Values []string `pulumi:"values"`
}

// GetInstancesFilterInput is an input type that accepts GetInstancesFilterArgs and GetInstancesFilterOutput values.
// You can construct a concrete instance of `GetInstancesFilterInput` via:
//
//          GetInstancesFilterArgs{...}
type GetInstancesFilterInput interface {
	pulumi.Input

	ToGetInstancesFilterOutput() GetInstancesFilterOutput
	ToGetInstancesFilterOutputWithContext(context.Context) GetInstancesFilterOutput
}

type GetInstancesFilterArgs struct {
	// Filter the Instances by this key. This may be one of '`id`, `hostname`, `publicIp`, `privateIp`,
	// `pseudoIp`, `size`, `cpuCores`, `ramMb`, `diskGb`, `template` or `createdAt`.
	Key pulumi.StringInput `pulumi:"key"`
	// A list of values to match against the `key` field. Only retrieves Instances
	// where the `key` field takes on one or more of the values provided here.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetInstancesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesFilter)(nil)).Elem()
}

func (i GetInstancesFilterArgs) ToGetInstancesFilterOutput() GetInstancesFilterOutput {
	return i.ToGetInstancesFilterOutputWithContext(context.Background())
}

func (i GetInstancesFilterArgs) ToGetInstancesFilterOutputWithContext(ctx context.Context) GetInstancesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesFilterOutput)
}

// GetInstancesFilterArrayInput is an input type that accepts GetInstancesFilterArray and GetInstancesFilterArrayOutput values.
// You can construct a concrete instance of `GetInstancesFilterArrayInput` via:
//
//          GetInstancesFilterArray{ GetInstancesFilterArgs{...} }
type GetInstancesFilterArrayInput interface {
	pulumi.Input

	ToGetInstancesFilterArrayOutput() GetInstancesFilterArrayOutput
	ToGetInstancesFilterArrayOutputWithContext(context.Context) GetInstancesFilterArrayOutput
}

type GetInstancesFilterArray []GetInstancesFilterInput

func (GetInstancesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesFilter)(nil)).Elem()
}

func (i GetInstancesFilterArray) ToGetInstancesFilterArrayOutput() GetInstancesFilterArrayOutput {
	return i.ToGetInstancesFilterArrayOutputWithContext(context.Background())
}

func (i GetInstancesFilterArray) ToGetInstancesFilterArrayOutputWithContext(ctx context.Context) GetInstancesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesFilterArrayOutput)
}

type GetInstancesFilterOutput struct{ *pulumi.OutputState }

func (GetInstancesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesFilter)(nil)).Elem()
}

func (o GetInstancesFilterOutput) ToGetInstancesFilterOutput() GetInstancesFilterOutput {
	return o
}

func (o GetInstancesFilterOutput) ToGetInstancesFilterOutputWithContext(ctx context.Context) GetInstancesFilterOutput {
	return o
}

// Filter the Instances by this key. This may be one of '`id`, `hostname`, `publicIp`, `privateIp`,
// `pseudoIp`, `size`, `cpuCores`, `ramMb`, `diskGb`, `template` or `createdAt`.
func (o GetInstancesFilterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesFilter) string { return v.Key }).(pulumi.StringOutput)
}

// A list of values to match against the `key` field. Only retrieves Instances
// where the `key` field takes on one or more of the values provided here.
func (o GetInstancesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetInstancesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesFilter)(nil)).Elem()
}

func (o GetInstancesFilterArrayOutput) ToGetInstancesFilterArrayOutput() GetInstancesFilterArrayOutput {
	return o
}

func (o GetInstancesFilterArrayOutput) ToGetInstancesFilterArrayOutputWithContext(ctx context.Context) GetInstancesFilterArrayOutput {
	return o
}

func (o GetInstancesFilterArrayOutput) Index(i pulumi.IntInput) GetInstancesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesFilter {
		return vs[0].([]GetInstancesFilter)[vs[1].(int)]
	}).(GetInstancesFilterOutput)
}

type GetInstancesInstance struct {
	// Total cpu of the inatance.
	CpuCores int `pulumi:"cpuCores"`
	// The date of creation of the instance
	CreatedAt string `pulumi:"createdAt"`
	// The size of the disk.
	DiskGb int `pulumi:"diskGb"`
	// The ID of the firewall used.
	FirewallId string `pulumi:"firewallId"`
	// The Instance hostname.
	Hostname string `pulumi:"hostname"`
	// The ID of the Instance.
	Id string `pulumi:"id"`
	// Instance initial password
	InitialPassword string `pulumi:"initialPassword"`
	// The name of the initial user created on the server.
	InitialUser string `pulumi:"initialUser"`
	// This will be the ID of the network.
	NetworkId string `pulumi:"networkId"`
	// The notes of the instance.
	Notes string `pulumi:"notes"`
	// The private ip.
	PrivateIp string `pulumi:"privateIp"`
	// Is the ip that is used to route the public ip from the internet to the instance using NAT
	PseudoIp string `pulumi:"pseudoIp"`
	// The public ip.
	PublicIp string `pulumi:"publicIp"`
	// Total ram of the instance.
	RamMb int `pulumi:"ramMb"`
	// A fully qualified domain name.
	ReverseDns string `pulumi:"reverseDns"`
	// the contents of a script uploaded
	Script string `pulumi:"script"`
	// The name of the size.
	Size string `pulumi:"size"`
	// The ID SSH.
	SshkeyId string `pulumi:"sshkeyId"`
	// The status of the instance
	Status string `pulumi:"status"`
	// An optional list of tags
	Tags []string `pulumi:"tags"`
	// The ID for the template to used to build the instance.
	Template string `pulumi:"template"`
}

// GetInstancesInstanceInput is an input type that accepts GetInstancesInstanceArgs and GetInstancesInstanceOutput values.
// You can construct a concrete instance of `GetInstancesInstanceInput` via:
//
//          GetInstancesInstanceArgs{...}
type GetInstancesInstanceInput interface {
	pulumi.Input

	ToGetInstancesInstanceOutput() GetInstancesInstanceOutput
	ToGetInstancesInstanceOutputWithContext(context.Context) GetInstancesInstanceOutput
}

type GetInstancesInstanceArgs struct {
	// Total cpu of the inatance.
	CpuCores pulumi.IntInput `pulumi:"cpuCores"`
	// The date of creation of the instance
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The size of the disk.
	DiskGb pulumi.IntInput `pulumi:"diskGb"`
	// The ID of the firewall used.
	FirewallId pulumi.StringInput `pulumi:"firewallId"`
	// The Instance hostname.
	Hostname pulumi.StringInput `pulumi:"hostname"`
	// The ID of the Instance.
	Id pulumi.StringInput `pulumi:"id"`
	// Instance initial password
	InitialPassword pulumi.StringInput `pulumi:"initialPassword"`
	// The name of the initial user created on the server.
	InitialUser pulumi.StringInput `pulumi:"initialUser"`
	// This will be the ID of the network.
	NetworkId pulumi.StringInput `pulumi:"networkId"`
	// The notes of the instance.
	Notes pulumi.StringInput `pulumi:"notes"`
	// The private ip.
	PrivateIp pulumi.StringInput `pulumi:"privateIp"`
	// Is the ip that is used to route the public ip from the internet to the instance using NAT
	PseudoIp pulumi.StringInput `pulumi:"pseudoIp"`
	// The public ip.
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
	// Total ram of the instance.
	RamMb pulumi.IntInput `pulumi:"ramMb"`
	// A fully qualified domain name.
	ReverseDns pulumi.StringInput `pulumi:"reverseDns"`
	// the contents of a script uploaded
	Script pulumi.StringInput `pulumi:"script"`
	// The name of the size.
	Size pulumi.StringInput `pulumi:"size"`
	// The ID SSH.
	SshkeyId pulumi.StringInput `pulumi:"sshkeyId"`
	// The status of the instance
	Status pulumi.StringInput `pulumi:"status"`
	// An optional list of tags
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// The ID for the template to used to build the instance.
	Template pulumi.StringInput `pulumi:"template"`
}

func (GetInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return i.ToGetInstancesInstanceOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceOutput)
}

// GetInstancesInstanceArrayInput is an input type that accepts GetInstancesInstanceArray and GetInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceArrayInput` via:
//
//          GetInstancesInstanceArray{ GetInstancesInstanceArgs{...} }
type GetInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput
	ToGetInstancesInstanceArrayOutputWithContext(context.Context) GetInstancesInstanceArrayOutput
}

type GetInstancesInstanceArray []GetInstancesInstanceInput

func (GetInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return i.ToGetInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceArrayOutput)
}

type GetInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return o
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return o
}

// Total cpu of the inatance.
func (o GetInstancesInstanceOutput) CpuCores() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.CpuCores }).(pulumi.IntOutput)
}

// The date of creation of the instance
func (o GetInstancesInstanceOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The size of the disk.
func (o GetInstancesInstanceOutput) DiskGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.DiskGb }).(pulumi.IntOutput)
}

// The ID of the firewall used.
func (o GetInstancesInstanceOutput) FirewallId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.FirewallId }).(pulumi.StringOutput)
}

// The Instance hostname.
func (o GetInstancesInstanceOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Hostname }).(pulumi.StringOutput)
}

// The ID of the Instance.
func (o GetInstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

// Instance initial password
func (o GetInstancesInstanceOutput) InitialPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.InitialPassword }).(pulumi.StringOutput)
}

// The name of the initial user created on the server.
func (o GetInstancesInstanceOutput) InitialUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.InitialUser }).(pulumi.StringOutput)
}

// This will be the ID of the network.
func (o GetInstancesInstanceOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.NetworkId }).(pulumi.StringOutput)
}

// The notes of the instance.
func (o GetInstancesInstanceOutput) Notes() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Notes }).(pulumi.StringOutput)
}

// The private ip.
func (o GetInstancesInstanceOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.PrivateIp }).(pulumi.StringOutput)
}

// Is the ip that is used to route the public ip from the internet to the instance using NAT
func (o GetInstancesInstanceOutput) PseudoIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.PseudoIp }).(pulumi.StringOutput)
}

// The public ip.
func (o GetInstancesInstanceOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.PublicIp }).(pulumi.StringOutput)
}

// Total ram of the instance.
func (o GetInstancesInstanceOutput) RamMb() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.RamMb }).(pulumi.IntOutput)
}

// A fully qualified domain name.
func (o GetInstancesInstanceOutput) ReverseDns() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ReverseDns }).(pulumi.StringOutput)
}

// the contents of a script uploaded
func (o GetInstancesInstanceOutput) Script() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Script }).(pulumi.StringOutput)
}

// The name of the size.
func (o GetInstancesInstanceOutput) Size() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Size }).(pulumi.StringOutput)
}

// The ID SSH.
func (o GetInstancesInstanceOutput) SshkeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.SshkeyId }).(pulumi.StringOutput)
}

// The status of the instance
func (o GetInstancesInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Status }).(pulumi.StringOutput)
}

// An optional list of tags
func (o GetInstancesInstanceOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// The ID for the template to used to build the instance.
func (o GetInstancesInstanceOutput) Template() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Template }).(pulumi.StringOutput)
}

type GetInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstance {
		return vs[0].([]GetInstancesInstance)[vs[1].(int)]
	}).(GetInstancesInstanceOutput)
}

type GetInstancesSizeFilter struct {
	Key    string   `pulumi:"key"`
	Values []string `pulumi:"values"`
}

// GetInstancesSizeFilterInput is an input type that accepts GetInstancesSizeFilterArgs and GetInstancesSizeFilterOutput values.
// You can construct a concrete instance of `GetInstancesSizeFilterInput` via:
//
//          GetInstancesSizeFilterArgs{...}
type GetInstancesSizeFilterInput interface {
	pulumi.Input

	ToGetInstancesSizeFilterOutput() GetInstancesSizeFilterOutput
	ToGetInstancesSizeFilterOutputWithContext(context.Context) GetInstancesSizeFilterOutput
}

type GetInstancesSizeFilterArgs struct {
	Key    pulumi.StringInput      `pulumi:"key"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetInstancesSizeFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesSizeFilter)(nil)).Elem()
}

func (i GetInstancesSizeFilterArgs) ToGetInstancesSizeFilterOutput() GetInstancesSizeFilterOutput {
	return i.ToGetInstancesSizeFilterOutputWithContext(context.Background())
}

func (i GetInstancesSizeFilterArgs) ToGetInstancesSizeFilterOutputWithContext(ctx context.Context) GetInstancesSizeFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesSizeFilterOutput)
}

// GetInstancesSizeFilterArrayInput is an input type that accepts GetInstancesSizeFilterArray and GetInstancesSizeFilterArrayOutput values.
// You can construct a concrete instance of `GetInstancesSizeFilterArrayInput` via:
//
//          GetInstancesSizeFilterArray{ GetInstancesSizeFilterArgs{...} }
type GetInstancesSizeFilterArrayInput interface {
	pulumi.Input

	ToGetInstancesSizeFilterArrayOutput() GetInstancesSizeFilterArrayOutput
	ToGetInstancesSizeFilterArrayOutputWithContext(context.Context) GetInstancesSizeFilterArrayOutput
}

type GetInstancesSizeFilterArray []GetInstancesSizeFilterInput

func (GetInstancesSizeFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesSizeFilter)(nil)).Elem()
}

func (i GetInstancesSizeFilterArray) ToGetInstancesSizeFilterArrayOutput() GetInstancesSizeFilterArrayOutput {
	return i.ToGetInstancesSizeFilterArrayOutputWithContext(context.Background())
}

func (i GetInstancesSizeFilterArray) ToGetInstancesSizeFilterArrayOutputWithContext(ctx context.Context) GetInstancesSizeFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesSizeFilterArrayOutput)
}

type GetInstancesSizeFilterOutput struct{ *pulumi.OutputState }

func (GetInstancesSizeFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesSizeFilter)(nil)).Elem()
}

func (o GetInstancesSizeFilterOutput) ToGetInstancesSizeFilterOutput() GetInstancesSizeFilterOutput {
	return o
}

func (o GetInstancesSizeFilterOutput) ToGetInstancesSizeFilterOutputWithContext(ctx context.Context) GetInstancesSizeFilterOutput {
	return o
}

func (o GetInstancesSizeFilterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesSizeFilter) string { return v.Key }).(pulumi.StringOutput)
}

func (o GetInstancesSizeFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesSizeFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetInstancesSizeFilterArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesSizeFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesSizeFilter)(nil)).Elem()
}

func (o GetInstancesSizeFilterArrayOutput) ToGetInstancesSizeFilterArrayOutput() GetInstancesSizeFilterArrayOutput {
	return o
}

func (o GetInstancesSizeFilterArrayOutput) ToGetInstancesSizeFilterArrayOutputWithContext(ctx context.Context) GetInstancesSizeFilterArrayOutput {
	return o
}

func (o GetInstancesSizeFilterArrayOutput) Index(i pulumi.IntInput) GetInstancesSizeFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesSizeFilter {
		return vs[0].([]GetInstancesSizeFilter)[vs[1].(int)]
	}).(GetInstancesSizeFilterOutput)
}

type GetInstancesSizeSize struct {
	CpuCores    int    `pulumi:"cpuCores"`
	Description string `pulumi:"description"`
	DiskGb      int    `pulumi:"diskGb"`
	Name        string `pulumi:"name"`
	NiceName    string `pulumi:"niceName"`
	RamMb       int    `pulumi:"ramMb"`
	Selectable  bool   `pulumi:"selectable"`
}

// GetInstancesSizeSizeInput is an input type that accepts GetInstancesSizeSizeArgs and GetInstancesSizeSizeOutput values.
// You can construct a concrete instance of `GetInstancesSizeSizeInput` via:
//
//          GetInstancesSizeSizeArgs{...}
type GetInstancesSizeSizeInput interface {
	pulumi.Input

	ToGetInstancesSizeSizeOutput() GetInstancesSizeSizeOutput
	ToGetInstancesSizeSizeOutputWithContext(context.Context) GetInstancesSizeSizeOutput
}

type GetInstancesSizeSizeArgs struct {
	CpuCores    pulumi.IntInput    `pulumi:"cpuCores"`
	Description pulumi.StringInput `pulumi:"description"`
	DiskGb      pulumi.IntInput    `pulumi:"diskGb"`
	Name        pulumi.StringInput `pulumi:"name"`
	NiceName    pulumi.StringInput `pulumi:"niceName"`
	RamMb       pulumi.IntInput    `pulumi:"ramMb"`
	Selectable  pulumi.BoolInput   `pulumi:"selectable"`
}

func (GetInstancesSizeSizeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesSizeSize)(nil)).Elem()
}

func (i GetInstancesSizeSizeArgs) ToGetInstancesSizeSizeOutput() GetInstancesSizeSizeOutput {
	return i.ToGetInstancesSizeSizeOutputWithContext(context.Background())
}

func (i GetInstancesSizeSizeArgs) ToGetInstancesSizeSizeOutputWithContext(ctx context.Context) GetInstancesSizeSizeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesSizeSizeOutput)
}

// GetInstancesSizeSizeArrayInput is an input type that accepts GetInstancesSizeSizeArray and GetInstancesSizeSizeArrayOutput values.
// You can construct a concrete instance of `GetInstancesSizeSizeArrayInput` via:
//
//          GetInstancesSizeSizeArray{ GetInstancesSizeSizeArgs{...} }
type GetInstancesSizeSizeArrayInput interface {
	pulumi.Input

	ToGetInstancesSizeSizeArrayOutput() GetInstancesSizeSizeArrayOutput
	ToGetInstancesSizeSizeArrayOutputWithContext(context.Context) GetInstancesSizeSizeArrayOutput
}

type GetInstancesSizeSizeArray []GetInstancesSizeSizeInput

func (GetInstancesSizeSizeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesSizeSize)(nil)).Elem()
}

func (i GetInstancesSizeSizeArray) ToGetInstancesSizeSizeArrayOutput() GetInstancesSizeSizeArrayOutput {
	return i.ToGetInstancesSizeSizeArrayOutputWithContext(context.Background())
}

func (i GetInstancesSizeSizeArray) ToGetInstancesSizeSizeArrayOutputWithContext(ctx context.Context) GetInstancesSizeSizeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesSizeSizeArrayOutput)
}

type GetInstancesSizeSizeOutput struct{ *pulumi.OutputState }

func (GetInstancesSizeSizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesSizeSize)(nil)).Elem()
}

func (o GetInstancesSizeSizeOutput) ToGetInstancesSizeSizeOutput() GetInstancesSizeSizeOutput {
	return o
}

func (o GetInstancesSizeSizeOutput) ToGetInstancesSizeSizeOutputWithContext(ctx context.Context) GetInstancesSizeSizeOutput {
	return o
}

func (o GetInstancesSizeSizeOutput) CpuCores() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesSizeSize) int { return v.CpuCores }).(pulumi.IntOutput)
}

func (o GetInstancesSizeSizeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesSizeSize) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetInstancesSizeSizeOutput) DiskGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesSizeSize) int { return v.DiskGb }).(pulumi.IntOutput)
}

func (o GetInstancesSizeSizeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesSizeSize) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetInstancesSizeSizeOutput) NiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesSizeSize) string { return v.NiceName }).(pulumi.StringOutput)
}

func (o GetInstancesSizeSizeOutput) RamMb() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesSizeSize) int { return v.RamMb }).(pulumi.IntOutput)
}

func (o GetInstancesSizeSizeOutput) Selectable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesSizeSize) bool { return v.Selectable }).(pulumi.BoolOutput)
}

type GetInstancesSizeSizeArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesSizeSizeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesSizeSize)(nil)).Elem()
}

func (o GetInstancesSizeSizeArrayOutput) ToGetInstancesSizeSizeArrayOutput() GetInstancesSizeSizeArrayOutput {
	return o
}

func (o GetInstancesSizeSizeArrayOutput) ToGetInstancesSizeSizeArrayOutputWithContext(ctx context.Context) GetInstancesSizeSizeArrayOutput {
	return o
}

func (o GetInstancesSizeSizeArrayOutput) Index(i pulumi.IntInput) GetInstancesSizeSizeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesSizeSize {
		return vs[0].([]GetInstancesSizeSize)[vs[1].(int)]
	}).(GetInstancesSizeSizeOutput)
}

type GetInstancesSizeSort struct {
	Direction *string `pulumi:"direction"`
	Key       string  `pulumi:"key"`
}

// GetInstancesSizeSortInput is an input type that accepts GetInstancesSizeSortArgs and GetInstancesSizeSortOutput values.
// You can construct a concrete instance of `GetInstancesSizeSortInput` via:
//
//          GetInstancesSizeSortArgs{...}
type GetInstancesSizeSortInput interface {
	pulumi.Input

	ToGetInstancesSizeSortOutput() GetInstancesSizeSortOutput
	ToGetInstancesSizeSortOutputWithContext(context.Context) GetInstancesSizeSortOutput
}

type GetInstancesSizeSortArgs struct {
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	Key       pulumi.StringInput    `pulumi:"key"`
}

func (GetInstancesSizeSortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesSizeSort)(nil)).Elem()
}

func (i GetInstancesSizeSortArgs) ToGetInstancesSizeSortOutput() GetInstancesSizeSortOutput {
	return i.ToGetInstancesSizeSortOutputWithContext(context.Background())
}

func (i GetInstancesSizeSortArgs) ToGetInstancesSizeSortOutputWithContext(ctx context.Context) GetInstancesSizeSortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesSizeSortOutput)
}

// GetInstancesSizeSortArrayInput is an input type that accepts GetInstancesSizeSortArray and GetInstancesSizeSortArrayOutput values.
// You can construct a concrete instance of `GetInstancesSizeSortArrayInput` via:
//
//          GetInstancesSizeSortArray{ GetInstancesSizeSortArgs{...} }
type GetInstancesSizeSortArrayInput interface {
	pulumi.Input

	ToGetInstancesSizeSortArrayOutput() GetInstancesSizeSortArrayOutput
	ToGetInstancesSizeSortArrayOutputWithContext(context.Context) GetInstancesSizeSortArrayOutput
}

type GetInstancesSizeSortArray []GetInstancesSizeSortInput

func (GetInstancesSizeSortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesSizeSort)(nil)).Elem()
}

func (i GetInstancesSizeSortArray) ToGetInstancesSizeSortArrayOutput() GetInstancesSizeSortArrayOutput {
	return i.ToGetInstancesSizeSortArrayOutputWithContext(context.Background())
}

func (i GetInstancesSizeSortArray) ToGetInstancesSizeSortArrayOutputWithContext(ctx context.Context) GetInstancesSizeSortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesSizeSortArrayOutput)
}

type GetInstancesSizeSortOutput struct{ *pulumi.OutputState }

func (GetInstancesSizeSortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesSizeSort)(nil)).Elem()
}

func (o GetInstancesSizeSortOutput) ToGetInstancesSizeSortOutput() GetInstancesSizeSortOutput {
	return o
}

func (o GetInstancesSizeSortOutput) ToGetInstancesSizeSortOutputWithContext(ctx context.Context) GetInstancesSizeSortOutput {
	return o
}

func (o GetInstancesSizeSortOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesSizeSort) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

func (o GetInstancesSizeSortOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesSizeSort) string { return v.Key }).(pulumi.StringOutput)
}

type GetInstancesSizeSortArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesSizeSortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesSizeSort)(nil)).Elem()
}

func (o GetInstancesSizeSortArrayOutput) ToGetInstancesSizeSortArrayOutput() GetInstancesSizeSortArrayOutput {
	return o
}

func (o GetInstancesSizeSortArrayOutput) ToGetInstancesSizeSortArrayOutputWithContext(ctx context.Context) GetInstancesSizeSortArrayOutput {
	return o
}

func (o GetInstancesSizeSortArrayOutput) Index(i pulumi.IntInput) GetInstancesSizeSortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesSizeSort {
		return vs[0].([]GetInstancesSizeSort)[vs[1].(int)]
	}).(GetInstancesSizeSortOutput)
}

type GetInstancesSort struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction *string `pulumi:"direction"`
	// Sort the Instance by this key. This may be one of `id`, `hostname`, `publicIp`, `privateIp`,
	// `pseudoIp`, `size`, `cpuCores`, `ramMb`, `diskGb`, `template` or `createdAt`.
	Key string `pulumi:"key"`
}

// GetInstancesSortInput is an input type that accepts GetInstancesSortArgs and GetInstancesSortOutput values.
// You can construct a concrete instance of `GetInstancesSortInput` via:
//
//          GetInstancesSortArgs{...}
type GetInstancesSortInput interface {
	pulumi.Input

	ToGetInstancesSortOutput() GetInstancesSortOutput
	ToGetInstancesSortOutputWithContext(context.Context) GetInstancesSortOutput
}

type GetInstancesSortArgs struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Sort the Instance by this key. This may be one of `id`, `hostname`, `publicIp`, `privateIp`,
	// `pseudoIp`, `size`, `cpuCores`, `ramMb`, `diskGb`, `template` or `createdAt`.
	Key pulumi.StringInput `pulumi:"key"`
}

func (GetInstancesSortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesSort)(nil)).Elem()
}

func (i GetInstancesSortArgs) ToGetInstancesSortOutput() GetInstancesSortOutput {
	return i.ToGetInstancesSortOutputWithContext(context.Background())
}

func (i GetInstancesSortArgs) ToGetInstancesSortOutputWithContext(ctx context.Context) GetInstancesSortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesSortOutput)
}

// GetInstancesSortArrayInput is an input type that accepts GetInstancesSortArray and GetInstancesSortArrayOutput values.
// You can construct a concrete instance of `GetInstancesSortArrayInput` via:
//
//          GetInstancesSortArray{ GetInstancesSortArgs{...} }
type GetInstancesSortArrayInput interface {
	pulumi.Input

	ToGetInstancesSortArrayOutput() GetInstancesSortArrayOutput
	ToGetInstancesSortArrayOutputWithContext(context.Context) GetInstancesSortArrayOutput
}

type GetInstancesSortArray []GetInstancesSortInput

func (GetInstancesSortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesSort)(nil)).Elem()
}

func (i GetInstancesSortArray) ToGetInstancesSortArrayOutput() GetInstancesSortArrayOutput {
	return i.ToGetInstancesSortArrayOutputWithContext(context.Background())
}

func (i GetInstancesSortArray) ToGetInstancesSortArrayOutputWithContext(ctx context.Context) GetInstancesSortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesSortArrayOutput)
}

type GetInstancesSortOutput struct{ *pulumi.OutputState }

func (GetInstancesSortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesSort)(nil)).Elem()
}

func (o GetInstancesSortOutput) ToGetInstancesSortOutput() GetInstancesSortOutput {
	return o
}

func (o GetInstancesSortOutput) ToGetInstancesSortOutputWithContext(ctx context.Context) GetInstancesSortOutput {
	return o
}

// The sort direction. This may be either `asc` or `desc`.
func (o GetInstancesSortOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesSort) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Sort the Instance by this key. This may be one of `id`, `hostname`, `publicIp`, `privateIp`,
// `pseudoIp`, `size`, `cpuCores`, `ramMb`, `diskGb`, `template` or `createdAt`.
func (o GetInstancesSortOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesSort) string { return v.Key }).(pulumi.StringOutput)
}

type GetInstancesSortArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesSortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesSort)(nil)).Elem()
}

func (o GetInstancesSortArrayOutput) ToGetInstancesSortArrayOutput() GetInstancesSortArrayOutput {
	return o
}

func (o GetInstancesSortArrayOutput) ToGetInstancesSortArrayOutputWithContext(ctx context.Context) GetInstancesSortArrayOutput {
	return o
}

func (o GetInstancesSortArrayOutput) Index(i pulumi.IntInput) GetInstancesSortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesSort {
		return vs[0].([]GetInstancesSort)[vs[1].(int)]
	}).(GetInstancesSortOutput)
}

type GetKubernetesClusterInstalledApplication struct {
	// The name of the application
	Application string `pulumi:"application"`
	// The category of the application
	Category string `pulumi:"category"`
	// if installed or not
	Installed bool `pulumi:"installed"`
	// The version of the application
	Version string `pulumi:"version"`
}

// GetKubernetesClusterInstalledApplicationInput is an input type that accepts GetKubernetesClusterInstalledApplicationArgs and GetKubernetesClusterInstalledApplicationOutput values.
// You can construct a concrete instance of `GetKubernetesClusterInstalledApplicationInput` via:
//
//          GetKubernetesClusterInstalledApplicationArgs{...}
type GetKubernetesClusterInstalledApplicationInput interface {
	pulumi.Input

	ToGetKubernetesClusterInstalledApplicationOutput() GetKubernetesClusterInstalledApplicationOutput
	ToGetKubernetesClusterInstalledApplicationOutputWithContext(context.Context) GetKubernetesClusterInstalledApplicationOutput
}

type GetKubernetesClusterInstalledApplicationArgs struct {
	// The name of the application
	Application pulumi.StringInput `pulumi:"application"`
	// The category of the application
	Category pulumi.StringInput `pulumi:"category"`
	// if installed or not
	Installed pulumi.BoolInput `pulumi:"installed"`
	// The version of the application
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetKubernetesClusterInstalledApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterInstalledApplication)(nil)).Elem()
}

func (i GetKubernetesClusterInstalledApplicationArgs) ToGetKubernetesClusterInstalledApplicationOutput() GetKubernetesClusterInstalledApplicationOutput {
	return i.ToGetKubernetesClusterInstalledApplicationOutputWithContext(context.Background())
}

func (i GetKubernetesClusterInstalledApplicationArgs) ToGetKubernetesClusterInstalledApplicationOutputWithContext(ctx context.Context) GetKubernetesClusterInstalledApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterInstalledApplicationOutput)
}

// GetKubernetesClusterInstalledApplicationArrayInput is an input type that accepts GetKubernetesClusterInstalledApplicationArray and GetKubernetesClusterInstalledApplicationArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterInstalledApplicationArrayInput` via:
//
//          GetKubernetesClusterInstalledApplicationArray{ GetKubernetesClusterInstalledApplicationArgs{...} }
type GetKubernetesClusterInstalledApplicationArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterInstalledApplicationArrayOutput() GetKubernetesClusterInstalledApplicationArrayOutput
	ToGetKubernetesClusterInstalledApplicationArrayOutputWithContext(context.Context) GetKubernetesClusterInstalledApplicationArrayOutput
}

type GetKubernetesClusterInstalledApplicationArray []GetKubernetesClusterInstalledApplicationInput

func (GetKubernetesClusterInstalledApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterInstalledApplication)(nil)).Elem()
}

func (i GetKubernetesClusterInstalledApplicationArray) ToGetKubernetesClusterInstalledApplicationArrayOutput() GetKubernetesClusterInstalledApplicationArrayOutput {
	return i.ToGetKubernetesClusterInstalledApplicationArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterInstalledApplicationArray) ToGetKubernetesClusterInstalledApplicationArrayOutputWithContext(ctx context.Context) GetKubernetesClusterInstalledApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterInstalledApplicationArrayOutput)
}

type GetKubernetesClusterInstalledApplicationOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterInstalledApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterInstalledApplication)(nil)).Elem()
}

func (o GetKubernetesClusterInstalledApplicationOutput) ToGetKubernetesClusterInstalledApplicationOutput() GetKubernetesClusterInstalledApplicationOutput {
	return o
}

func (o GetKubernetesClusterInstalledApplicationOutput) ToGetKubernetesClusterInstalledApplicationOutputWithContext(ctx context.Context) GetKubernetesClusterInstalledApplicationOutput {
	return o
}

// The name of the application
func (o GetKubernetesClusterInstalledApplicationOutput) Application() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterInstalledApplication) string { return v.Application }).(pulumi.StringOutput)
}

// The category of the application
func (o GetKubernetesClusterInstalledApplicationOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterInstalledApplication) string { return v.Category }).(pulumi.StringOutput)
}

// if installed or not
func (o GetKubernetesClusterInstalledApplicationOutput) Installed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesClusterInstalledApplication) bool { return v.Installed }).(pulumi.BoolOutput)
}

// The version of the application
func (o GetKubernetesClusterInstalledApplicationOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterInstalledApplication) string { return v.Version }).(pulumi.StringOutput)
}

type GetKubernetesClusterInstalledApplicationArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterInstalledApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterInstalledApplication)(nil)).Elem()
}

func (o GetKubernetesClusterInstalledApplicationArrayOutput) ToGetKubernetesClusterInstalledApplicationArrayOutput() GetKubernetesClusterInstalledApplicationArrayOutput {
	return o
}

func (o GetKubernetesClusterInstalledApplicationArrayOutput) ToGetKubernetesClusterInstalledApplicationArrayOutputWithContext(ctx context.Context) GetKubernetesClusterInstalledApplicationArrayOutput {
	return o
}

func (o GetKubernetesClusterInstalledApplicationArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterInstalledApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterInstalledApplication {
		return vs[0].([]GetKubernetesClusterInstalledApplication)[vs[1].(int)]
	}).(GetKubernetesClusterInstalledApplicationOutput)
}

type GetKubernetesClusterInstance struct {
	// Total cpu of the inatance.
	CpuCores int `pulumi:"cpuCores"`
	// The date where the Kubernetes cluster was create.
	CreatedAt string `pulumi:"createdAt"`
	// The size of the disk.
	DiskGb int `pulumi:"diskGb"`
	// The firewall id assigned to the instance
	FirewallId string `pulumi:"firewallId"`
	// The hostname of the instance.
	Hostname string `pulumi:"hostname"`
	// The public ip of the instances, only available if the instances is the master
	PublicIp string `pulumi:"publicIp"`
	// Total ram of the instance
	RamMb int `pulumi:"ramMb"`
	// The region where instance are.
	Region string `pulumi:"region"`
	// The size of the instance.
	Size string `pulumi:"size"`
	// The status of Kubernetes cluster.
	// * `ready` -If the Kubernetes cluster is ready.
	Status string `pulumi:"status"`
	// The tag of the instances
	Tags []string `pulumi:"tags"`
}

// GetKubernetesClusterInstanceInput is an input type that accepts GetKubernetesClusterInstanceArgs and GetKubernetesClusterInstanceOutput values.
// You can construct a concrete instance of `GetKubernetesClusterInstanceInput` via:
//
//          GetKubernetesClusterInstanceArgs{...}
type GetKubernetesClusterInstanceInput interface {
	pulumi.Input

	ToGetKubernetesClusterInstanceOutput() GetKubernetesClusterInstanceOutput
	ToGetKubernetesClusterInstanceOutputWithContext(context.Context) GetKubernetesClusterInstanceOutput
}

type GetKubernetesClusterInstanceArgs struct {
	// Total cpu of the inatance.
	CpuCores pulumi.IntInput `pulumi:"cpuCores"`
	// The date where the Kubernetes cluster was create.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The size of the disk.
	DiskGb pulumi.IntInput `pulumi:"diskGb"`
	// The firewall id assigned to the instance
	FirewallId pulumi.StringInput `pulumi:"firewallId"`
	// The hostname of the instance.
	Hostname pulumi.StringInput `pulumi:"hostname"`
	// The public ip of the instances, only available if the instances is the master
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
	// Total ram of the instance
	RamMb pulumi.IntInput `pulumi:"ramMb"`
	// The region where instance are.
	Region pulumi.StringInput `pulumi:"region"`
	// The size of the instance.
	Size pulumi.StringInput `pulumi:"size"`
	// The status of Kubernetes cluster.
	// * `ready` -If the Kubernetes cluster is ready.
	Status pulumi.StringInput `pulumi:"status"`
	// The tag of the instances
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetKubernetesClusterInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterInstance)(nil)).Elem()
}

func (i GetKubernetesClusterInstanceArgs) ToGetKubernetesClusterInstanceOutput() GetKubernetesClusterInstanceOutput {
	return i.ToGetKubernetesClusterInstanceOutputWithContext(context.Background())
}

func (i GetKubernetesClusterInstanceArgs) ToGetKubernetesClusterInstanceOutputWithContext(ctx context.Context) GetKubernetesClusterInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterInstanceOutput)
}

// GetKubernetesClusterInstanceArrayInput is an input type that accepts GetKubernetesClusterInstanceArray and GetKubernetesClusterInstanceArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterInstanceArrayInput` via:
//
//          GetKubernetesClusterInstanceArray{ GetKubernetesClusterInstanceArgs{...} }
type GetKubernetesClusterInstanceArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterInstanceArrayOutput() GetKubernetesClusterInstanceArrayOutput
	ToGetKubernetesClusterInstanceArrayOutputWithContext(context.Context) GetKubernetesClusterInstanceArrayOutput
}

type GetKubernetesClusterInstanceArray []GetKubernetesClusterInstanceInput

func (GetKubernetesClusterInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterInstance)(nil)).Elem()
}

func (i GetKubernetesClusterInstanceArray) ToGetKubernetesClusterInstanceArrayOutput() GetKubernetesClusterInstanceArrayOutput {
	return i.ToGetKubernetesClusterInstanceArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterInstanceArray) ToGetKubernetesClusterInstanceArrayOutputWithContext(ctx context.Context) GetKubernetesClusterInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterInstanceArrayOutput)
}

type GetKubernetesClusterInstanceOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterInstance)(nil)).Elem()
}

func (o GetKubernetesClusterInstanceOutput) ToGetKubernetesClusterInstanceOutput() GetKubernetesClusterInstanceOutput {
	return o
}

func (o GetKubernetesClusterInstanceOutput) ToGetKubernetesClusterInstanceOutputWithContext(ctx context.Context) GetKubernetesClusterInstanceOutput {
	return o
}

// Total cpu of the inatance.
func (o GetKubernetesClusterInstanceOutput) CpuCores() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesClusterInstance) int { return v.CpuCores }).(pulumi.IntOutput)
}

// The date where the Kubernetes cluster was create.
func (o GetKubernetesClusterInstanceOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterInstance) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The size of the disk.
func (o GetKubernetesClusterInstanceOutput) DiskGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesClusterInstance) int { return v.DiskGb }).(pulumi.IntOutput)
}

// The firewall id assigned to the instance
func (o GetKubernetesClusterInstanceOutput) FirewallId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterInstance) string { return v.FirewallId }).(pulumi.StringOutput)
}

// The hostname of the instance.
func (o GetKubernetesClusterInstanceOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterInstance) string { return v.Hostname }).(pulumi.StringOutput)
}

// The public ip of the instances, only available if the instances is the master
func (o GetKubernetesClusterInstanceOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterInstance) string { return v.PublicIp }).(pulumi.StringOutput)
}

// Total ram of the instance
func (o GetKubernetesClusterInstanceOutput) RamMb() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesClusterInstance) int { return v.RamMb }).(pulumi.IntOutput)
}

// The region where instance are.
func (o GetKubernetesClusterInstanceOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterInstance) string { return v.Region }).(pulumi.StringOutput)
}

// The size of the instance.
func (o GetKubernetesClusterInstanceOutput) Size() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterInstance) string { return v.Size }).(pulumi.StringOutput)
}

// The status of Kubernetes cluster.
// * `ready` -If the Kubernetes cluster is ready.
func (o GetKubernetesClusterInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterInstance) string { return v.Status }).(pulumi.StringOutput)
}

// The tag of the instances
func (o GetKubernetesClusterInstanceOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKubernetesClusterInstance) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetKubernetesClusterInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterInstance)(nil)).Elem()
}

func (o GetKubernetesClusterInstanceArrayOutput) ToGetKubernetesClusterInstanceArrayOutput() GetKubernetesClusterInstanceArrayOutput {
	return o
}

func (o GetKubernetesClusterInstanceArrayOutput) ToGetKubernetesClusterInstanceArrayOutputWithContext(ctx context.Context) GetKubernetesClusterInstanceArrayOutput {
	return o
}

func (o GetKubernetesClusterInstanceArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterInstance {
		return vs[0].([]GetKubernetesClusterInstance)[vs[1].(int)]
	}).(GetKubernetesClusterInstanceOutput)
}

type GetKubernetesVersionFilter struct {
	// Filter the sizes by this key. This may be one of `version`,
	// `label`, `type`, `default`.
	Key string `pulumi:"key"`
	// Only retrieves the version which keys has value that matches
	// one of the values provided here.
	Values []string `pulumi:"values"`
}

// GetKubernetesVersionFilterInput is an input type that accepts GetKubernetesVersionFilterArgs and GetKubernetesVersionFilterOutput values.
// You can construct a concrete instance of `GetKubernetesVersionFilterInput` via:
//
//          GetKubernetesVersionFilterArgs{...}
type GetKubernetesVersionFilterInput interface {
	pulumi.Input

	ToGetKubernetesVersionFilterOutput() GetKubernetesVersionFilterOutput
	ToGetKubernetesVersionFilterOutputWithContext(context.Context) GetKubernetesVersionFilterOutput
}

type GetKubernetesVersionFilterArgs struct {
	// Filter the sizes by this key. This may be one of `version`,
	// `label`, `type`, `default`.
	Key pulumi.StringInput `pulumi:"key"`
	// Only retrieves the version which keys has value that matches
	// one of the values provided here.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetKubernetesVersionFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesVersionFilter)(nil)).Elem()
}

func (i GetKubernetesVersionFilterArgs) ToGetKubernetesVersionFilterOutput() GetKubernetesVersionFilterOutput {
	return i.ToGetKubernetesVersionFilterOutputWithContext(context.Background())
}

func (i GetKubernetesVersionFilterArgs) ToGetKubernetesVersionFilterOutputWithContext(ctx context.Context) GetKubernetesVersionFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesVersionFilterOutput)
}

// GetKubernetesVersionFilterArrayInput is an input type that accepts GetKubernetesVersionFilterArray and GetKubernetesVersionFilterArrayOutput values.
// You can construct a concrete instance of `GetKubernetesVersionFilterArrayInput` via:
//
//          GetKubernetesVersionFilterArray{ GetKubernetesVersionFilterArgs{...} }
type GetKubernetesVersionFilterArrayInput interface {
	pulumi.Input

	ToGetKubernetesVersionFilterArrayOutput() GetKubernetesVersionFilterArrayOutput
	ToGetKubernetesVersionFilterArrayOutputWithContext(context.Context) GetKubernetesVersionFilterArrayOutput
}

type GetKubernetesVersionFilterArray []GetKubernetesVersionFilterInput

func (GetKubernetesVersionFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesVersionFilter)(nil)).Elem()
}

func (i GetKubernetesVersionFilterArray) ToGetKubernetesVersionFilterArrayOutput() GetKubernetesVersionFilterArrayOutput {
	return i.ToGetKubernetesVersionFilterArrayOutputWithContext(context.Background())
}

func (i GetKubernetesVersionFilterArray) ToGetKubernetesVersionFilterArrayOutputWithContext(ctx context.Context) GetKubernetesVersionFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesVersionFilterArrayOutput)
}

type GetKubernetesVersionFilterOutput struct{ *pulumi.OutputState }

func (GetKubernetesVersionFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesVersionFilter)(nil)).Elem()
}

func (o GetKubernetesVersionFilterOutput) ToGetKubernetesVersionFilterOutput() GetKubernetesVersionFilterOutput {
	return o
}

func (o GetKubernetesVersionFilterOutput) ToGetKubernetesVersionFilterOutputWithContext(ctx context.Context) GetKubernetesVersionFilterOutput {
	return o
}

// Filter the sizes by this key. This may be one of `version`,
// `label`, `type`, `default`.
func (o GetKubernetesVersionFilterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesVersionFilter) string { return v.Key }).(pulumi.StringOutput)
}

// Only retrieves the version which keys has value that matches
// one of the values provided here.
func (o GetKubernetesVersionFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKubernetesVersionFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetKubernetesVersionFilterArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesVersionFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesVersionFilter)(nil)).Elem()
}

func (o GetKubernetesVersionFilterArrayOutput) ToGetKubernetesVersionFilterArrayOutput() GetKubernetesVersionFilterArrayOutput {
	return o
}

func (o GetKubernetesVersionFilterArrayOutput) ToGetKubernetesVersionFilterArrayOutputWithContext(ctx context.Context) GetKubernetesVersionFilterArrayOutput {
	return o
}

func (o GetKubernetesVersionFilterArrayOutput) Index(i pulumi.IntInput) GetKubernetesVersionFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesVersionFilter {
		return vs[0].([]GetKubernetesVersionFilter)[vs[1].(int)]
	}).(GetKubernetesVersionFilterOutput)
}

type GetKubernetesVersionSort struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction *string `pulumi:"direction"`
	// Sort the sizes by this key. This may be one of `version`.
	Key string `pulumi:"key"`
}

// GetKubernetesVersionSortInput is an input type that accepts GetKubernetesVersionSortArgs and GetKubernetesVersionSortOutput values.
// You can construct a concrete instance of `GetKubernetesVersionSortInput` via:
//
//          GetKubernetesVersionSortArgs{...}
type GetKubernetesVersionSortInput interface {
	pulumi.Input

	ToGetKubernetesVersionSortOutput() GetKubernetesVersionSortOutput
	ToGetKubernetesVersionSortOutputWithContext(context.Context) GetKubernetesVersionSortOutput
}

type GetKubernetesVersionSortArgs struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Sort the sizes by this key. This may be one of `version`.
	Key pulumi.StringInput `pulumi:"key"`
}

func (GetKubernetesVersionSortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesVersionSort)(nil)).Elem()
}

func (i GetKubernetesVersionSortArgs) ToGetKubernetesVersionSortOutput() GetKubernetesVersionSortOutput {
	return i.ToGetKubernetesVersionSortOutputWithContext(context.Background())
}

func (i GetKubernetesVersionSortArgs) ToGetKubernetesVersionSortOutputWithContext(ctx context.Context) GetKubernetesVersionSortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesVersionSortOutput)
}

// GetKubernetesVersionSortArrayInput is an input type that accepts GetKubernetesVersionSortArray and GetKubernetesVersionSortArrayOutput values.
// You can construct a concrete instance of `GetKubernetesVersionSortArrayInput` via:
//
//          GetKubernetesVersionSortArray{ GetKubernetesVersionSortArgs{...} }
type GetKubernetesVersionSortArrayInput interface {
	pulumi.Input

	ToGetKubernetesVersionSortArrayOutput() GetKubernetesVersionSortArrayOutput
	ToGetKubernetesVersionSortArrayOutputWithContext(context.Context) GetKubernetesVersionSortArrayOutput
}

type GetKubernetesVersionSortArray []GetKubernetesVersionSortInput

func (GetKubernetesVersionSortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesVersionSort)(nil)).Elem()
}

func (i GetKubernetesVersionSortArray) ToGetKubernetesVersionSortArrayOutput() GetKubernetesVersionSortArrayOutput {
	return i.ToGetKubernetesVersionSortArrayOutputWithContext(context.Background())
}

func (i GetKubernetesVersionSortArray) ToGetKubernetesVersionSortArrayOutputWithContext(ctx context.Context) GetKubernetesVersionSortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesVersionSortArrayOutput)
}

type GetKubernetesVersionSortOutput struct{ *pulumi.OutputState }

func (GetKubernetesVersionSortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesVersionSort)(nil)).Elem()
}

func (o GetKubernetesVersionSortOutput) ToGetKubernetesVersionSortOutput() GetKubernetesVersionSortOutput {
	return o
}

func (o GetKubernetesVersionSortOutput) ToGetKubernetesVersionSortOutputWithContext(ctx context.Context) GetKubernetesVersionSortOutput {
	return o
}

// The sort direction. This may be either `asc` or `desc`.
func (o GetKubernetesVersionSortOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKubernetesVersionSort) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Sort the sizes by this key. This may be one of `version`.
func (o GetKubernetesVersionSortOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesVersionSort) string { return v.Key }).(pulumi.StringOutput)
}

type GetKubernetesVersionSortArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesVersionSortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesVersionSort)(nil)).Elem()
}

func (o GetKubernetesVersionSortArrayOutput) ToGetKubernetesVersionSortArrayOutput() GetKubernetesVersionSortArrayOutput {
	return o
}

func (o GetKubernetesVersionSortArrayOutput) ToGetKubernetesVersionSortArrayOutputWithContext(ctx context.Context) GetKubernetesVersionSortArrayOutput {
	return o
}

func (o GetKubernetesVersionSortArrayOutput) Index(i pulumi.IntInput) GetKubernetesVersionSortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesVersionSort {
		return vs[0].([]GetKubernetesVersionSort)[vs[1].(int)]
	}).(GetKubernetesVersionSortOutput)
}

type GetKubernetesVersionVersion struct {
	// If is the default version used in all cluster.
	Default bool `pulumi:"default"`
	// The label of this version.
	Label string `pulumi:"label"`
	// The type of the version can be `stable`, `legacy` etc...
	Type string `pulumi:"type"`
	// A version of the kubernetes.
	Version string `pulumi:"version"`
}

// GetKubernetesVersionVersionInput is an input type that accepts GetKubernetesVersionVersionArgs and GetKubernetesVersionVersionOutput values.
// You can construct a concrete instance of `GetKubernetesVersionVersionInput` via:
//
//          GetKubernetesVersionVersionArgs{...}
type GetKubernetesVersionVersionInput interface {
	pulumi.Input

	ToGetKubernetesVersionVersionOutput() GetKubernetesVersionVersionOutput
	ToGetKubernetesVersionVersionOutputWithContext(context.Context) GetKubernetesVersionVersionOutput
}

type GetKubernetesVersionVersionArgs struct {
	// If is the default version used in all cluster.
	Default pulumi.BoolInput `pulumi:"default"`
	// The label of this version.
	Label pulumi.StringInput `pulumi:"label"`
	// The type of the version can be `stable`, `legacy` etc...
	Type pulumi.StringInput `pulumi:"type"`
	// A version of the kubernetes.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetKubernetesVersionVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesVersionVersion)(nil)).Elem()
}

func (i GetKubernetesVersionVersionArgs) ToGetKubernetesVersionVersionOutput() GetKubernetesVersionVersionOutput {
	return i.ToGetKubernetesVersionVersionOutputWithContext(context.Background())
}

func (i GetKubernetesVersionVersionArgs) ToGetKubernetesVersionVersionOutputWithContext(ctx context.Context) GetKubernetesVersionVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesVersionVersionOutput)
}

// GetKubernetesVersionVersionArrayInput is an input type that accepts GetKubernetesVersionVersionArray and GetKubernetesVersionVersionArrayOutput values.
// You can construct a concrete instance of `GetKubernetesVersionVersionArrayInput` via:
//
//          GetKubernetesVersionVersionArray{ GetKubernetesVersionVersionArgs{...} }
type GetKubernetesVersionVersionArrayInput interface {
	pulumi.Input

	ToGetKubernetesVersionVersionArrayOutput() GetKubernetesVersionVersionArrayOutput
	ToGetKubernetesVersionVersionArrayOutputWithContext(context.Context) GetKubernetesVersionVersionArrayOutput
}

type GetKubernetesVersionVersionArray []GetKubernetesVersionVersionInput

func (GetKubernetesVersionVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesVersionVersion)(nil)).Elem()
}

func (i GetKubernetesVersionVersionArray) ToGetKubernetesVersionVersionArrayOutput() GetKubernetesVersionVersionArrayOutput {
	return i.ToGetKubernetesVersionVersionArrayOutputWithContext(context.Background())
}

func (i GetKubernetesVersionVersionArray) ToGetKubernetesVersionVersionArrayOutputWithContext(ctx context.Context) GetKubernetesVersionVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesVersionVersionArrayOutput)
}

type GetKubernetesVersionVersionOutput struct{ *pulumi.OutputState }

func (GetKubernetesVersionVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesVersionVersion)(nil)).Elem()
}

func (o GetKubernetesVersionVersionOutput) ToGetKubernetesVersionVersionOutput() GetKubernetesVersionVersionOutput {
	return o
}

func (o GetKubernetesVersionVersionOutput) ToGetKubernetesVersionVersionOutputWithContext(ctx context.Context) GetKubernetesVersionVersionOutput {
	return o
}

// If is the default version used in all cluster.
func (o GetKubernetesVersionVersionOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesVersionVersion) bool { return v.Default }).(pulumi.BoolOutput)
}

// The label of this version.
func (o GetKubernetesVersionVersionOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesVersionVersion) string { return v.Label }).(pulumi.StringOutput)
}

// The type of the version can be `stable`, `legacy` etc...
func (o GetKubernetesVersionVersionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesVersionVersion) string { return v.Type }).(pulumi.StringOutput)
}

// A version of the kubernetes.
func (o GetKubernetesVersionVersionOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesVersionVersion) string { return v.Version }).(pulumi.StringOutput)
}

type GetKubernetesVersionVersionArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesVersionVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesVersionVersion)(nil)).Elem()
}

func (o GetKubernetesVersionVersionArrayOutput) ToGetKubernetesVersionVersionArrayOutput() GetKubernetesVersionVersionArrayOutput {
	return o
}

func (o GetKubernetesVersionVersionArrayOutput) ToGetKubernetesVersionVersionArrayOutputWithContext(ctx context.Context) GetKubernetesVersionVersionArrayOutput {
	return o
}

func (o GetKubernetesVersionVersionArrayOutput) Index(i pulumi.IntInput) GetKubernetesVersionVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesVersionVersion {
		return vs[0].([]GetKubernetesVersionVersion)[vs[1].(int)]
	}).(GetKubernetesVersionVersionOutput)
}

type GetLoadBalancerBackend struct {
	// The instance id
	InstanceId string `pulumi:"instanceId"`
	// The port set in the configuration.
	Port int `pulumi:"port"`
	// The protocol used in the configuration.
	Protocol string `pulumi:"protocol"`
}

// GetLoadBalancerBackendInput is an input type that accepts GetLoadBalancerBackendArgs and GetLoadBalancerBackendOutput values.
// You can construct a concrete instance of `GetLoadBalancerBackendInput` via:
//
//          GetLoadBalancerBackendArgs{...}
type GetLoadBalancerBackendInput interface {
	pulumi.Input

	ToGetLoadBalancerBackendOutput() GetLoadBalancerBackendOutput
	ToGetLoadBalancerBackendOutputWithContext(context.Context) GetLoadBalancerBackendOutput
}

type GetLoadBalancerBackendArgs struct {
	// The instance id
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The port set in the configuration.
	Port pulumi.IntInput `pulumi:"port"`
	// The protocol used in the configuration.
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (GetLoadBalancerBackendArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerBackend)(nil)).Elem()
}

func (i GetLoadBalancerBackendArgs) ToGetLoadBalancerBackendOutput() GetLoadBalancerBackendOutput {
	return i.ToGetLoadBalancerBackendOutputWithContext(context.Background())
}

func (i GetLoadBalancerBackendArgs) ToGetLoadBalancerBackendOutputWithContext(ctx context.Context) GetLoadBalancerBackendOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerBackendOutput)
}

// GetLoadBalancerBackendArrayInput is an input type that accepts GetLoadBalancerBackendArray and GetLoadBalancerBackendArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancerBackendArrayInput` via:
//
//          GetLoadBalancerBackendArray{ GetLoadBalancerBackendArgs{...} }
type GetLoadBalancerBackendArrayInput interface {
	pulumi.Input

	ToGetLoadBalancerBackendArrayOutput() GetLoadBalancerBackendArrayOutput
	ToGetLoadBalancerBackendArrayOutputWithContext(context.Context) GetLoadBalancerBackendArrayOutput
}

type GetLoadBalancerBackendArray []GetLoadBalancerBackendInput

func (GetLoadBalancerBackendArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerBackend)(nil)).Elem()
}

func (i GetLoadBalancerBackendArray) ToGetLoadBalancerBackendArrayOutput() GetLoadBalancerBackendArrayOutput {
	return i.ToGetLoadBalancerBackendArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancerBackendArray) ToGetLoadBalancerBackendArrayOutputWithContext(ctx context.Context) GetLoadBalancerBackendArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerBackendArrayOutput)
}

type GetLoadBalancerBackendOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerBackendOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerBackend)(nil)).Elem()
}

func (o GetLoadBalancerBackendOutput) ToGetLoadBalancerBackendOutput() GetLoadBalancerBackendOutput {
	return o
}

func (o GetLoadBalancerBackendOutput) ToGetLoadBalancerBackendOutputWithContext(ctx context.Context) GetLoadBalancerBackendOutput {
	return o
}

// The instance id
func (o GetLoadBalancerBackendOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerBackend) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The port set in the configuration.
func (o GetLoadBalancerBackendOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancerBackend) int { return v.Port }).(pulumi.IntOutput)
}

// The protocol used in the configuration.
func (o GetLoadBalancerBackendOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerBackend) string { return v.Protocol }).(pulumi.StringOutput)
}

type GetLoadBalancerBackendArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerBackendArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerBackend)(nil)).Elem()
}

func (o GetLoadBalancerBackendArrayOutput) ToGetLoadBalancerBackendArrayOutput() GetLoadBalancerBackendArrayOutput {
	return o
}

func (o GetLoadBalancerBackendArrayOutput) ToGetLoadBalancerBackendArrayOutputWithContext(ctx context.Context) GetLoadBalancerBackendArrayOutput {
	return o
}

func (o GetLoadBalancerBackendArrayOutput) Index(i pulumi.IntInput) GetLoadBalancerBackendOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancerBackend {
		return vs[0].([]GetLoadBalancerBackend)[vs[1].(int)]
	}).(GetLoadBalancerBackendOutput)
}

type GetTemplateFilter struct {
	// Filter the sizes by this key. This may be one of `code`,
	// `name`.
	Key string `pulumi:"key"`
	// Only retrieves the template which keys has value that matches
	// one of the values provided here.
	Values []string `pulumi:"values"`
}

// GetTemplateFilterInput is an input type that accepts GetTemplateFilterArgs and GetTemplateFilterOutput values.
// You can construct a concrete instance of `GetTemplateFilterInput` via:
//
//          GetTemplateFilterArgs{...}
type GetTemplateFilterInput interface {
	pulumi.Input

	ToGetTemplateFilterOutput() GetTemplateFilterOutput
	ToGetTemplateFilterOutputWithContext(context.Context) GetTemplateFilterOutput
}

type GetTemplateFilterArgs struct {
	// Filter the sizes by this key. This may be one of `code`,
	// `name`.
	Key pulumi.StringInput `pulumi:"key"`
	// Only retrieves the template which keys has value that matches
	// one of the values provided here.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetTemplateFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplateFilter)(nil)).Elem()
}

func (i GetTemplateFilterArgs) ToGetTemplateFilterOutput() GetTemplateFilterOutput {
	return i.ToGetTemplateFilterOutputWithContext(context.Background())
}

func (i GetTemplateFilterArgs) ToGetTemplateFilterOutputWithContext(ctx context.Context) GetTemplateFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplateFilterOutput)
}

// GetTemplateFilterArrayInput is an input type that accepts GetTemplateFilterArray and GetTemplateFilterArrayOutput values.
// You can construct a concrete instance of `GetTemplateFilterArrayInput` via:
//
//          GetTemplateFilterArray{ GetTemplateFilterArgs{...} }
type GetTemplateFilterArrayInput interface {
	pulumi.Input

	ToGetTemplateFilterArrayOutput() GetTemplateFilterArrayOutput
	ToGetTemplateFilterArrayOutputWithContext(context.Context) GetTemplateFilterArrayOutput
}

type GetTemplateFilterArray []GetTemplateFilterInput

func (GetTemplateFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemplateFilter)(nil)).Elem()
}

func (i GetTemplateFilterArray) ToGetTemplateFilterArrayOutput() GetTemplateFilterArrayOutput {
	return i.ToGetTemplateFilterArrayOutputWithContext(context.Background())
}

func (i GetTemplateFilterArray) ToGetTemplateFilterArrayOutputWithContext(ctx context.Context) GetTemplateFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplateFilterArrayOutput)
}

type GetTemplateFilterOutput struct{ *pulumi.OutputState }

func (GetTemplateFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplateFilter)(nil)).Elem()
}

func (o GetTemplateFilterOutput) ToGetTemplateFilterOutput() GetTemplateFilterOutput {
	return o
}

func (o GetTemplateFilterOutput) ToGetTemplateFilterOutputWithContext(ctx context.Context) GetTemplateFilterOutput {
	return o
}

// Filter the sizes by this key. This may be one of `code`,
// `name`.
func (o GetTemplateFilterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplateFilter) string { return v.Key }).(pulumi.StringOutput)
}

// Only retrieves the template which keys has value that matches
// one of the values provided here.
func (o GetTemplateFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTemplateFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetTemplateFilterArrayOutput struct{ *pulumi.OutputState }

func (GetTemplateFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemplateFilter)(nil)).Elem()
}

func (o GetTemplateFilterArrayOutput) ToGetTemplateFilterArrayOutput() GetTemplateFilterArrayOutput {
	return o
}

func (o GetTemplateFilterArrayOutput) ToGetTemplateFilterArrayOutputWithContext(ctx context.Context) GetTemplateFilterArrayOutput {
	return o
}

func (o GetTemplateFilterArrayOutput) Index(i pulumi.IntInput) GetTemplateFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTemplateFilter {
		return vs[0].([]GetTemplateFilter)[vs[1].(int)]
	}).(GetTemplateFilterOutput)
}

type GetTemplateSort struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction *string `pulumi:"direction"`
	// Sort the sizes by this key. This may be one of `code`,
	// `name`.
	Key string `pulumi:"key"`
}

// GetTemplateSortInput is an input type that accepts GetTemplateSortArgs and GetTemplateSortOutput values.
// You can construct a concrete instance of `GetTemplateSortInput` via:
//
//          GetTemplateSortArgs{...}
type GetTemplateSortInput interface {
	pulumi.Input

	ToGetTemplateSortOutput() GetTemplateSortOutput
	ToGetTemplateSortOutputWithContext(context.Context) GetTemplateSortOutput
}

type GetTemplateSortArgs struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Sort the sizes by this key. This may be one of `code`,
	// `name`.
	Key pulumi.StringInput `pulumi:"key"`
}

func (GetTemplateSortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplateSort)(nil)).Elem()
}

func (i GetTemplateSortArgs) ToGetTemplateSortOutput() GetTemplateSortOutput {
	return i.ToGetTemplateSortOutputWithContext(context.Background())
}

func (i GetTemplateSortArgs) ToGetTemplateSortOutputWithContext(ctx context.Context) GetTemplateSortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplateSortOutput)
}

// GetTemplateSortArrayInput is an input type that accepts GetTemplateSortArray and GetTemplateSortArrayOutput values.
// You can construct a concrete instance of `GetTemplateSortArrayInput` via:
//
//          GetTemplateSortArray{ GetTemplateSortArgs{...} }
type GetTemplateSortArrayInput interface {
	pulumi.Input

	ToGetTemplateSortArrayOutput() GetTemplateSortArrayOutput
	ToGetTemplateSortArrayOutputWithContext(context.Context) GetTemplateSortArrayOutput
}

type GetTemplateSortArray []GetTemplateSortInput

func (GetTemplateSortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemplateSort)(nil)).Elem()
}

func (i GetTemplateSortArray) ToGetTemplateSortArrayOutput() GetTemplateSortArrayOutput {
	return i.ToGetTemplateSortArrayOutputWithContext(context.Background())
}

func (i GetTemplateSortArray) ToGetTemplateSortArrayOutputWithContext(ctx context.Context) GetTemplateSortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplateSortArrayOutput)
}

type GetTemplateSortOutput struct{ *pulumi.OutputState }

func (GetTemplateSortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplateSort)(nil)).Elem()
}

func (o GetTemplateSortOutput) ToGetTemplateSortOutput() GetTemplateSortOutput {
	return o
}

func (o GetTemplateSortOutput) ToGetTemplateSortOutputWithContext(ctx context.Context) GetTemplateSortOutput {
	return o
}

// The sort direction. This may be either `asc` or `desc`.
func (o GetTemplateSortOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTemplateSort) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Sort the sizes by this key. This may be one of `code`,
// `name`.
func (o GetTemplateSortOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplateSort) string { return v.Key }).(pulumi.StringOutput)
}

type GetTemplateSortArrayOutput struct{ *pulumi.OutputState }

func (GetTemplateSortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemplateSort)(nil)).Elem()
}

func (o GetTemplateSortArrayOutput) ToGetTemplateSortArrayOutput() GetTemplateSortArrayOutput {
	return o
}

func (o GetTemplateSortArrayOutput) ToGetTemplateSortArrayOutputWithContext(ctx context.Context) GetTemplateSortArrayOutput {
	return o
}

func (o GetTemplateSortArrayOutput) Index(i pulumi.IntInput) GetTemplateSortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTemplateSort {
		return vs[0].([]GetTemplateSort)[vs[1].(int)]
	}).(GetTemplateSortOutput)
}

type GetTemplateTemplate struct {
	// Commonly referred to as 'user-data', this is a customisation script that is run after
	// the instance is first booted.
	CloudConfig string `pulumi:"cloudConfig"`
	// A unqiue, alphanumerical, short, human readable code for the template.
	Code string `pulumi:"code"`
	// The default username to suggest that the user creates
	DefaultUsername string `pulumi:"defaultUsername"`
	// A multi-line description of the template, in Markdown format
	Description string `pulumi:"description"`
	// The id of the template
	Id string `pulumi:"id"`
	// The Image ID of any default template or the ID of another template.
	ImageId string `pulumi:"imageId"`
	// A short human readable name for the template
	Name string `pulumi:"name"`
	// A one line description of the template
	ShortDescription string `pulumi:"shortDescription"`
	// The ID of a bootable volume, either owned by you or global.
	VolumeId string `pulumi:"volumeId"`
}

// GetTemplateTemplateInput is an input type that accepts GetTemplateTemplateArgs and GetTemplateTemplateOutput values.
// You can construct a concrete instance of `GetTemplateTemplateInput` via:
//
//          GetTemplateTemplateArgs{...}
type GetTemplateTemplateInput interface {
	pulumi.Input

	ToGetTemplateTemplateOutput() GetTemplateTemplateOutput
	ToGetTemplateTemplateOutputWithContext(context.Context) GetTemplateTemplateOutput
}

type GetTemplateTemplateArgs struct {
	// Commonly referred to as 'user-data', this is a customisation script that is run after
	// the instance is first booted.
	CloudConfig pulumi.StringInput `pulumi:"cloudConfig"`
	// A unqiue, alphanumerical, short, human readable code for the template.
	Code pulumi.StringInput `pulumi:"code"`
	// The default username to suggest that the user creates
	DefaultUsername pulumi.StringInput `pulumi:"defaultUsername"`
	// A multi-line description of the template, in Markdown format
	Description pulumi.StringInput `pulumi:"description"`
	// The id of the template
	Id pulumi.StringInput `pulumi:"id"`
	// The Image ID of any default template or the ID of another template.
	ImageId pulumi.StringInput `pulumi:"imageId"`
	// A short human readable name for the template
	Name pulumi.StringInput `pulumi:"name"`
	// A one line description of the template
	ShortDescription pulumi.StringInput `pulumi:"shortDescription"`
	// The ID of a bootable volume, either owned by you or global.
	VolumeId pulumi.StringInput `pulumi:"volumeId"`
}

func (GetTemplateTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplateTemplate)(nil)).Elem()
}

func (i GetTemplateTemplateArgs) ToGetTemplateTemplateOutput() GetTemplateTemplateOutput {
	return i.ToGetTemplateTemplateOutputWithContext(context.Background())
}

func (i GetTemplateTemplateArgs) ToGetTemplateTemplateOutputWithContext(ctx context.Context) GetTemplateTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplateTemplateOutput)
}

// GetTemplateTemplateArrayInput is an input type that accepts GetTemplateTemplateArray and GetTemplateTemplateArrayOutput values.
// You can construct a concrete instance of `GetTemplateTemplateArrayInput` via:
//
//          GetTemplateTemplateArray{ GetTemplateTemplateArgs{...} }
type GetTemplateTemplateArrayInput interface {
	pulumi.Input

	ToGetTemplateTemplateArrayOutput() GetTemplateTemplateArrayOutput
	ToGetTemplateTemplateArrayOutputWithContext(context.Context) GetTemplateTemplateArrayOutput
}

type GetTemplateTemplateArray []GetTemplateTemplateInput

func (GetTemplateTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemplateTemplate)(nil)).Elem()
}

func (i GetTemplateTemplateArray) ToGetTemplateTemplateArrayOutput() GetTemplateTemplateArrayOutput {
	return i.ToGetTemplateTemplateArrayOutputWithContext(context.Background())
}

func (i GetTemplateTemplateArray) ToGetTemplateTemplateArrayOutputWithContext(ctx context.Context) GetTemplateTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplateTemplateArrayOutput)
}

type GetTemplateTemplateOutput struct{ *pulumi.OutputState }

func (GetTemplateTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplateTemplate)(nil)).Elem()
}

func (o GetTemplateTemplateOutput) ToGetTemplateTemplateOutput() GetTemplateTemplateOutput {
	return o
}

func (o GetTemplateTemplateOutput) ToGetTemplateTemplateOutputWithContext(ctx context.Context) GetTemplateTemplateOutput {
	return o
}

// Commonly referred to as 'user-data', this is a customisation script that is run after
// the instance is first booted.
func (o GetTemplateTemplateOutput) CloudConfig() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplateTemplate) string { return v.CloudConfig }).(pulumi.StringOutput)
}

// A unqiue, alphanumerical, short, human readable code for the template.
func (o GetTemplateTemplateOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplateTemplate) string { return v.Code }).(pulumi.StringOutput)
}

// The default username to suggest that the user creates
func (o GetTemplateTemplateOutput) DefaultUsername() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplateTemplate) string { return v.DefaultUsername }).(pulumi.StringOutput)
}

// A multi-line description of the template, in Markdown format
func (o GetTemplateTemplateOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplateTemplate) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the template
func (o GetTemplateTemplateOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplateTemplate) string { return v.Id }).(pulumi.StringOutput)
}

// The Image ID of any default template or the ID of another template.
func (o GetTemplateTemplateOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplateTemplate) string { return v.ImageId }).(pulumi.StringOutput)
}

// A short human readable name for the template
func (o GetTemplateTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplateTemplate) string { return v.Name }).(pulumi.StringOutput)
}

// A one line description of the template
func (o GetTemplateTemplateOutput) ShortDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplateTemplate) string { return v.ShortDescription }).(pulumi.StringOutput)
}

// The ID of a bootable volume, either owned by you or global.
func (o GetTemplateTemplateOutput) VolumeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplateTemplate) string { return v.VolumeId }).(pulumi.StringOutput)
}

type GetTemplateTemplateArrayOutput struct{ *pulumi.OutputState }

func (GetTemplateTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemplateTemplate)(nil)).Elem()
}

func (o GetTemplateTemplateArrayOutput) ToGetTemplateTemplateArrayOutput() GetTemplateTemplateArrayOutput {
	return o
}

func (o GetTemplateTemplateArrayOutput) ToGetTemplateTemplateArrayOutputWithContext(ctx context.Context) GetTemplateTemplateArrayOutput {
	return o
}

func (o GetTemplateTemplateArrayOutput) Index(i pulumi.IntInput) GetTemplateTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTemplateTemplate {
		return vs[0].([]GetTemplateTemplate)[vs[1].(int)]
	}).(GetTemplateTemplateOutput)
}

func init() {
	pulumi.RegisterOutputType(KubernetesClusterInstalledApplicationOutput{})
	pulumi.RegisterOutputType(KubernetesClusterInstalledApplicationArrayOutput{})
	pulumi.RegisterOutputType(KubernetesClusterInstanceOutput{})
	pulumi.RegisterOutputType(KubernetesClusterInstanceArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerBackendOutput{})
	pulumi.RegisterOutputType(LoadBalancerBackendArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesFilterOutput{})
	pulumi.RegisterOutputType(GetInstancesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesSizeFilterOutput{})
	pulumi.RegisterOutputType(GetInstancesSizeFilterArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesSizeSizeOutput{})
	pulumi.RegisterOutputType(GetInstancesSizeSizeArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesSizeSortOutput{})
	pulumi.RegisterOutputType(GetInstancesSizeSortArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesSortOutput{})
	pulumi.RegisterOutputType(GetInstancesSortArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterInstalledApplicationOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterInstalledApplicationArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterInstanceOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesVersionFilterOutput{})
	pulumi.RegisterOutputType(GetKubernetesVersionFilterArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesVersionSortOutput{})
	pulumi.RegisterOutputType(GetKubernetesVersionSortArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesVersionVersionOutput{})
	pulumi.RegisterOutputType(GetKubernetesVersionVersionArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerBackendOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerBackendArrayOutput{})
	pulumi.RegisterOutputType(GetTemplateFilterOutput{})
	pulumi.RegisterOutputType(GetTemplateFilterArrayOutput{})
	pulumi.RegisterOutputType(GetTemplateSortOutput{})
	pulumi.RegisterOutputType(GetTemplateSortArrayOutput{})
	pulumi.RegisterOutputType(GetTemplateTemplateOutput{})
	pulumi.RegisterOutputType(GetTemplateTemplateArrayOutput{})
}
