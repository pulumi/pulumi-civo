// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package civo

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type KubernetesClusterInstalledApplication struct {
	Application *string `pulumi:"application"`
	Category    *string `pulumi:"category"`
	Installed   *bool   `pulumi:"installed"`
	Version     *string `pulumi:"version"`
}

// KubernetesClusterInstalledApplicationInput is an input type that accepts KubernetesClusterInstalledApplicationArgs and KubernetesClusterInstalledApplicationOutput values.
// You can construct a concrete instance of `KubernetesClusterInstalledApplicationInput` via:
//
//          KubernetesClusterInstalledApplicationArgs{...}
type KubernetesClusterInstalledApplicationInput interface {
	pulumi.Input

	ToKubernetesClusterInstalledApplicationOutput() KubernetesClusterInstalledApplicationOutput
	ToKubernetesClusterInstalledApplicationOutputWithContext(context.Context) KubernetesClusterInstalledApplicationOutput
}

type KubernetesClusterInstalledApplicationArgs struct {
	Application pulumi.StringPtrInput `pulumi:"application"`
	Category    pulumi.StringPtrInput `pulumi:"category"`
	Installed   pulumi.BoolPtrInput   `pulumi:"installed"`
	Version     pulumi.StringPtrInput `pulumi:"version"`
}

func (KubernetesClusterInstalledApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterInstalledApplication)(nil)).Elem()
}

func (i KubernetesClusterInstalledApplicationArgs) ToKubernetesClusterInstalledApplicationOutput() KubernetesClusterInstalledApplicationOutput {
	return i.ToKubernetesClusterInstalledApplicationOutputWithContext(context.Background())
}

func (i KubernetesClusterInstalledApplicationArgs) ToKubernetesClusterInstalledApplicationOutputWithContext(ctx context.Context) KubernetesClusterInstalledApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterInstalledApplicationOutput)
}

// KubernetesClusterInstalledApplicationArrayInput is an input type that accepts KubernetesClusterInstalledApplicationArray and KubernetesClusterInstalledApplicationArrayOutput values.
// You can construct a concrete instance of `KubernetesClusterInstalledApplicationArrayInput` via:
//
//          KubernetesClusterInstalledApplicationArray{ KubernetesClusterInstalledApplicationArgs{...} }
type KubernetesClusterInstalledApplicationArrayInput interface {
	pulumi.Input

	ToKubernetesClusterInstalledApplicationArrayOutput() KubernetesClusterInstalledApplicationArrayOutput
	ToKubernetesClusterInstalledApplicationArrayOutputWithContext(context.Context) KubernetesClusterInstalledApplicationArrayOutput
}

type KubernetesClusterInstalledApplicationArray []KubernetesClusterInstalledApplicationInput

func (KubernetesClusterInstalledApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterInstalledApplication)(nil)).Elem()
}

func (i KubernetesClusterInstalledApplicationArray) ToKubernetesClusterInstalledApplicationArrayOutput() KubernetesClusterInstalledApplicationArrayOutput {
	return i.ToKubernetesClusterInstalledApplicationArrayOutputWithContext(context.Background())
}

func (i KubernetesClusterInstalledApplicationArray) ToKubernetesClusterInstalledApplicationArrayOutputWithContext(ctx context.Context) KubernetesClusterInstalledApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterInstalledApplicationArrayOutput)
}

type KubernetesClusterInstalledApplicationOutput struct{ *pulumi.OutputState }

func (KubernetesClusterInstalledApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterInstalledApplication)(nil)).Elem()
}

func (o KubernetesClusterInstalledApplicationOutput) ToKubernetesClusterInstalledApplicationOutput() KubernetesClusterInstalledApplicationOutput {
	return o
}

func (o KubernetesClusterInstalledApplicationOutput) ToKubernetesClusterInstalledApplicationOutputWithContext(ctx context.Context) KubernetesClusterInstalledApplicationOutput {
	return o
}

func (o KubernetesClusterInstalledApplicationOutput) Application() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterInstalledApplication) *string { return v.Application }).(pulumi.StringPtrOutput)
}

func (o KubernetesClusterInstalledApplicationOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterInstalledApplication) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o KubernetesClusterInstalledApplicationOutput) Installed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterInstalledApplication) *bool { return v.Installed }).(pulumi.BoolPtrOutput)
}

func (o KubernetesClusterInstalledApplicationOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterInstalledApplication) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type KubernetesClusterInstalledApplicationArrayOutput struct{ *pulumi.OutputState }

func (KubernetesClusterInstalledApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterInstalledApplication)(nil)).Elem()
}

func (o KubernetesClusterInstalledApplicationArrayOutput) ToKubernetesClusterInstalledApplicationArrayOutput() KubernetesClusterInstalledApplicationArrayOutput {
	return o
}

func (o KubernetesClusterInstalledApplicationArrayOutput) ToKubernetesClusterInstalledApplicationArrayOutputWithContext(ctx context.Context) KubernetesClusterInstalledApplicationArrayOutput {
	return o
}

func (o KubernetesClusterInstalledApplicationArrayOutput) Index(i pulumi.IntInput) KubernetesClusterInstalledApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesClusterInstalledApplication {
		return vs[0].([]KubernetesClusterInstalledApplication)[vs[1].(int)]
	}).(KubernetesClusterInstalledApplicationOutput)
}

type KubernetesClusterInstance struct {
	CpuCores *int    `pulumi:"cpuCores"`
	DiskGb   *int    `pulumi:"diskGb"`
	Hostname *string `pulumi:"hostname"`
	RamMb    *int    `pulumi:"ramMb"`
	Size     *string `pulumi:"size"`
	// Status of the cluster
	Status *string `pulumi:"status"`
	// Space separated list of tags, to be used freely as required
	Tags []string `pulumi:"tags"`
}

// KubernetesClusterInstanceInput is an input type that accepts KubernetesClusterInstanceArgs and KubernetesClusterInstanceOutput values.
// You can construct a concrete instance of `KubernetesClusterInstanceInput` via:
//
//          KubernetesClusterInstanceArgs{...}
type KubernetesClusterInstanceInput interface {
	pulumi.Input

	ToKubernetesClusterInstanceOutput() KubernetesClusterInstanceOutput
	ToKubernetesClusterInstanceOutputWithContext(context.Context) KubernetesClusterInstanceOutput
}

type KubernetesClusterInstanceArgs struct {
	CpuCores pulumi.IntPtrInput    `pulumi:"cpuCores"`
	DiskGb   pulumi.IntPtrInput    `pulumi:"diskGb"`
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	RamMb    pulumi.IntPtrInput    `pulumi:"ramMb"`
	Size     pulumi.StringPtrInput `pulumi:"size"`
	// Status of the cluster
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Space separated list of tags, to be used freely as required
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (KubernetesClusterInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterInstance)(nil)).Elem()
}

func (i KubernetesClusterInstanceArgs) ToKubernetesClusterInstanceOutput() KubernetesClusterInstanceOutput {
	return i.ToKubernetesClusterInstanceOutputWithContext(context.Background())
}

func (i KubernetesClusterInstanceArgs) ToKubernetesClusterInstanceOutputWithContext(ctx context.Context) KubernetesClusterInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterInstanceOutput)
}

// KubernetesClusterInstanceArrayInput is an input type that accepts KubernetesClusterInstanceArray and KubernetesClusterInstanceArrayOutput values.
// You can construct a concrete instance of `KubernetesClusterInstanceArrayInput` via:
//
//          KubernetesClusterInstanceArray{ KubernetesClusterInstanceArgs{...} }
type KubernetesClusterInstanceArrayInput interface {
	pulumi.Input

	ToKubernetesClusterInstanceArrayOutput() KubernetesClusterInstanceArrayOutput
	ToKubernetesClusterInstanceArrayOutputWithContext(context.Context) KubernetesClusterInstanceArrayOutput
}

type KubernetesClusterInstanceArray []KubernetesClusterInstanceInput

func (KubernetesClusterInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterInstance)(nil)).Elem()
}

func (i KubernetesClusterInstanceArray) ToKubernetesClusterInstanceArrayOutput() KubernetesClusterInstanceArrayOutput {
	return i.ToKubernetesClusterInstanceArrayOutputWithContext(context.Background())
}

func (i KubernetesClusterInstanceArray) ToKubernetesClusterInstanceArrayOutputWithContext(ctx context.Context) KubernetesClusterInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterInstanceArrayOutput)
}

type KubernetesClusterInstanceOutput struct{ *pulumi.OutputState }

func (KubernetesClusterInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterInstance)(nil)).Elem()
}

func (o KubernetesClusterInstanceOutput) ToKubernetesClusterInstanceOutput() KubernetesClusterInstanceOutput {
	return o
}

func (o KubernetesClusterInstanceOutput) ToKubernetesClusterInstanceOutputWithContext(ctx context.Context) KubernetesClusterInstanceOutput {
	return o
}

func (o KubernetesClusterInstanceOutput) CpuCores() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterInstance) *int { return v.CpuCores }).(pulumi.IntPtrOutput)
}

func (o KubernetesClusterInstanceOutput) DiskGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterInstance) *int { return v.DiskGb }).(pulumi.IntPtrOutput)
}

func (o KubernetesClusterInstanceOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterInstance) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

func (o KubernetesClusterInstanceOutput) RamMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterInstance) *int { return v.RamMb }).(pulumi.IntPtrOutput)
}

func (o KubernetesClusterInstanceOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterInstance) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// Status of the cluster
func (o KubernetesClusterInstanceOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterInstance) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Space separated list of tags, to be used freely as required
func (o KubernetesClusterInstanceOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesClusterInstance) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type KubernetesClusterInstanceArrayOutput struct{ *pulumi.OutputState }

func (KubernetesClusterInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterInstance)(nil)).Elem()
}

func (o KubernetesClusterInstanceArrayOutput) ToKubernetesClusterInstanceArrayOutput() KubernetesClusterInstanceArrayOutput {
	return o
}

func (o KubernetesClusterInstanceArrayOutput) ToKubernetesClusterInstanceArrayOutputWithContext(ctx context.Context) KubernetesClusterInstanceArrayOutput {
	return o
}

func (o KubernetesClusterInstanceArrayOutput) Index(i pulumi.IntInput) KubernetesClusterInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesClusterInstance {
		return vs[0].([]KubernetesClusterInstance)[vs[1].(int)]
	}).(KubernetesClusterInstanceOutput)
}

type KubernetesClusterPool struct {
	Count *int `pulumi:"count"`
	// The ID of this resource.
	Id            *string                         `pulumi:"id"`
	InstanceNames []string                        `pulumi:"instanceNames"`
	Instances     []KubernetesClusterPoolInstance `pulumi:"instances"`
	Size          *string                         `pulumi:"size"`
}

// KubernetesClusterPoolInput is an input type that accepts KubernetesClusterPoolArgs and KubernetesClusterPoolOutput values.
// You can construct a concrete instance of `KubernetesClusterPoolInput` via:
//
//          KubernetesClusterPoolArgs{...}
type KubernetesClusterPoolInput interface {
	pulumi.Input

	ToKubernetesClusterPoolOutput() KubernetesClusterPoolOutput
	ToKubernetesClusterPoolOutputWithContext(context.Context) KubernetesClusterPoolOutput
}

type KubernetesClusterPoolArgs struct {
	Count pulumi.IntPtrInput `pulumi:"count"`
	// The ID of this resource.
	Id            pulumi.StringPtrInput                   `pulumi:"id"`
	InstanceNames pulumi.StringArrayInput                 `pulumi:"instanceNames"`
	Instances     KubernetesClusterPoolInstanceArrayInput `pulumi:"instances"`
	Size          pulumi.StringPtrInput                   `pulumi:"size"`
}

func (KubernetesClusterPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterPool)(nil)).Elem()
}

func (i KubernetesClusterPoolArgs) ToKubernetesClusterPoolOutput() KubernetesClusterPoolOutput {
	return i.ToKubernetesClusterPoolOutputWithContext(context.Background())
}

func (i KubernetesClusterPoolArgs) ToKubernetesClusterPoolOutputWithContext(ctx context.Context) KubernetesClusterPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterPoolOutput)
}

// KubernetesClusterPoolArrayInput is an input type that accepts KubernetesClusterPoolArray and KubernetesClusterPoolArrayOutput values.
// You can construct a concrete instance of `KubernetesClusterPoolArrayInput` via:
//
//          KubernetesClusterPoolArray{ KubernetesClusterPoolArgs{...} }
type KubernetesClusterPoolArrayInput interface {
	pulumi.Input

	ToKubernetesClusterPoolArrayOutput() KubernetesClusterPoolArrayOutput
	ToKubernetesClusterPoolArrayOutputWithContext(context.Context) KubernetesClusterPoolArrayOutput
}

type KubernetesClusterPoolArray []KubernetesClusterPoolInput

func (KubernetesClusterPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterPool)(nil)).Elem()
}

func (i KubernetesClusterPoolArray) ToKubernetesClusterPoolArrayOutput() KubernetesClusterPoolArrayOutput {
	return i.ToKubernetesClusterPoolArrayOutputWithContext(context.Background())
}

func (i KubernetesClusterPoolArray) ToKubernetesClusterPoolArrayOutputWithContext(ctx context.Context) KubernetesClusterPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterPoolArrayOutput)
}

type KubernetesClusterPoolOutput struct{ *pulumi.OutputState }

func (KubernetesClusterPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterPool)(nil)).Elem()
}

func (o KubernetesClusterPoolOutput) ToKubernetesClusterPoolOutput() KubernetesClusterPoolOutput {
	return o
}

func (o KubernetesClusterPoolOutput) ToKubernetesClusterPoolOutputWithContext(ctx context.Context) KubernetesClusterPoolOutput {
	return o
}

func (o KubernetesClusterPoolOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterPool) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// The ID of this resource.
func (o KubernetesClusterPoolOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterPool) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o KubernetesClusterPoolOutput) InstanceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesClusterPool) []string { return v.InstanceNames }).(pulumi.StringArrayOutput)
}

func (o KubernetesClusterPoolOutput) Instances() KubernetesClusterPoolInstanceArrayOutput {
	return o.ApplyT(func(v KubernetesClusterPool) []KubernetesClusterPoolInstance { return v.Instances }).(KubernetesClusterPoolInstanceArrayOutput)
}

func (o KubernetesClusterPoolOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterPool) *string { return v.Size }).(pulumi.StringPtrOutput)
}

type KubernetesClusterPoolArrayOutput struct{ *pulumi.OutputState }

func (KubernetesClusterPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterPool)(nil)).Elem()
}

func (o KubernetesClusterPoolArrayOutput) ToKubernetesClusterPoolArrayOutput() KubernetesClusterPoolArrayOutput {
	return o
}

func (o KubernetesClusterPoolArrayOutput) ToKubernetesClusterPoolArrayOutputWithContext(ctx context.Context) KubernetesClusterPoolArrayOutput {
	return o
}

func (o KubernetesClusterPoolArrayOutput) Index(i pulumi.IntInput) KubernetesClusterPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesClusterPool {
		return vs[0].([]KubernetesClusterPool)[vs[1].(int)]
	}).(KubernetesClusterPoolOutput)
}

type KubernetesClusterPoolInstance struct {
	CpuCores *int    `pulumi:"cpuCores"`
	DiskGb   *int    `pulumi:"diskGb"`
	Hostname *string `pulumi:"hostname"`
	RamMb    *int    `pulumi:"ramMb"`
	Size     *string `pulumi:"size"`
	// Status of the cluster
	Status *string `pulumi:"status"`
	// Space separated list of tags, to be used freely as required
	Tags []string `pulumi:"tags"`
}

// KubernetesClusterPoolInstanceInput is an input type that accepts KubernetesClusterPoolInstanceArgs and KubernetesClusterPoolInstanceOutput values.
// You can construct a concrete instance of `KubernetesClusterPoolInstanceInput` via:
//
//          KubernetesClusterPoolInstanceArgs{...}
type KubernetesClusterPoolInstanceInput interface {
	pulumi.Input

	ToKubernetesClusterPoolInstanceOutput() KubernetesClusterPoolInstanceOutput
	ToKubernetesClusterPoolInstanceOutputWithContext(context.Context) KubernetesClusterPoolInstanceOutput
}

type KubernetesClusterPoolInstanceArgs struct {
	CpuCores pulumi.IntPtrInput    `pulumi:"cpuCores"`
	DiskGb   pulumi.IntPtrInput    `pulumi:"diskGb"`
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	RamMb    pulumi.IntPtrInput    `pulumi:"ramMb"`
	Size     pulumi.StringPtrInput `pulumi:"size"`
	// Status of the cluster
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Space separated list of tags, to be used freely as required
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (KubernetesClusterPoolInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterPoolInstance)(nil)).Elem()
}

func (i KubernetesClusterPoolInstanceArgs) ToKubernetesClusterPoolInstanceOutput() KubernetesClusterPoolInstanceOutput {
	return i.ToKubernetesClusterPoolInstanceOutputWithContext(context.Background())
}

func (i KubernetesClusterPoolInstanceArgs) ToKubernetesClusterPoolInstanceOutputWithContext(ctx context.Context) KubernetesClusterPoolInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterPoolInstanceOutput)
}

// KubernetesClusterPoolInstanceArrayInput is an input type that accepts KubernetesClusterPoolInstanceArray and KubernetesClusterPoolInstanceArrayOutput values.
// You can construct a concrete instance of `KubernetesClusterPoolInstanceArrayInput` via:
//
//          KubernetesClusterPoolInstanceArray{ KubernetesClusterPoolInstanceArgs{...} }
type KubernetesClusterPoolInstanceArrayInput interface {
	pulumi.Input

	ToKubernetesClusterPoolInstanceArrayOutput() KubernetesClusterPoolInstanceArrayOutput
	ToKubernetesClusterPoolInstanceArrayOutputWithContext(context.Context) KubernetesClusterPoolInstanceArrayOutput
}

type KubernetesClusterPoolInstanceArray []KubernetesClusterPoolInstanceInput

func (KubernetesClusterPoolInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterPoolInstance)(nil)).Elem()
}

func (i KubernetesClusterPoolInstanceArray) ToKubernetesClusterPoolInstanceArrayOutput() KubernetesClusterPoolInstanceArrayOutput {
	return i.ToKubernetesClusterPoolInstanceArrayOutputWithContext(context.Background())
}

func (i KubernetesClusterPoolInstanceArray) ToKubernetesClusterPoolInstanceArrayOutputWithContext(ctx context.Context) KubernetesClusterPoolInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterPoolInstanceArrayOutput)
}

type KubernetesClusterPoolInstanceOutput struct{ *pulumi.OutputState }

func (KubernetesClusterPoolInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterPoolInstance)(nil)).Elem()
}

func (o KubernetesClusterPoolInstanceOutput) ToKubernetesClusterPoolInstanceOutput() KubernetesClusterPoolInstanceOutput {
	return o
}

func (o KubernetesClusterPoolInstanceOutput) ToKubernetesClusterPoolInstanceOutputWithContext(ctx context.Context) KubernetesClusterPoolInstanceOutput {
	return o
}

func (o KubernetesClusterPoolInstanceOutput) CpuCores() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterPoolInstance) *int { return v.CpuCores }).(pulumi.IntPtrOutput)
}

func (o KubernetesClusterPoolInstanceOutput) DiskGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterPoolInstance) *int { return v.DiskGb }).(pulumi.IntPtrOutput)
}

func (o KubernetesClusterPoolInstanceOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterPoolInstance) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

func (o KubernetesClusterPoolInstanceOutput) RamMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterPoolInstance) *int { return v.RamMb }).(pulumi.IntPtrOutput)
}

func (o KubernetesClusterPoolInstanceOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterPoolInstance) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// Status of the cluster
func (o KubernetesClusterPoolInstanceOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterPoolInstance) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Space separated list of tags, to be used freely as required
func (o KubernetesClusterPoolInstanceOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesClusterPoolInstance) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type KubernetesClusterPoolInstanceArrayOutput struct{ *pulumi.OutputState }

func (KubernetesClusterPoolInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterPoolInstance)(nil)).Elem()
}

func (o KubernetesClusterPoolInstanceArrayOutput) ToKubernetesClusterPoolInstanceArrayOutput() KubernetesClusterPoolInstanceArrayOutput {
	return o
}

func (o KubernetesClusterPoolInstanceArrayOutput) ToKubernetesClusterPoolInstanceArrayOutputWithContext(ctx context.Context) KubernetesClusterPoolInstanceArrayOutput {
	return o
}

func (o KubernetesClusterPoolInstanceArrayOutput) Index(i pulumi.IntInput) KubernetesClusterPoolInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesClusterPoolInstance {
		return vs[0].([]KubernetesClusterPoolInstance)[vs[1].(int)]
	}).(KubernetesClusterPoolInstanceOutput)
}

type GetDiskImageDiskimage struct {
	// The ID of this resource.
	Id      string `pulumi:"id"`
	Label   string `pulumi:"label"`
	Name    string `pulumi:"name"`
	Version string `pulumi:"version"`
}

// GetDiskImageDiskimageInput is an input type that accepts GetDiskImageDiskimageArgs and GetDiskImageDiskimageOutput values.
// You can construct a concrete instance of `GetDiskImageDiskimageInput` via:
//
//          GetDiskImageDiskimageArgs{...}
type GetDiskImageDiskimageInput interface {
	pulumi.Input

	ToGetDiskImageDiskimageOutput() GetDiskImageDiskimageOutput
	ToGetDiskImageDiskimageOutputWithContext(context.Context) GetDiskImageDiskimageOutput
}

type GetDiskImageDiskimageArgs struct {
	// The ID of this resource.
	Id      pulumi.StringInput `pulumi:"id"`
	Label   pulumi.StringInput `pulumi:"label"`
	Name    pulumi.StringInput `pulumi:"name"`
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetDiskImageDiskimageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDiskImageDiskimage)(nil)).Elem()
}

func (i GetDiskImageDiskimageArgs) ToGetDiskImageDiskimageOutput() GetDiskImageDiskimageOutput {
	return i.ToGetDiskImageDiskimageOutputWithContext(context.Background())
}

func (i GetDiskImageDiskimageArgs) ToGetDiskImageDiskimageOutputWithContext(ctx context.Context) GetDiskImageDiskimageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDiskImageDiskimageOutput)
}

// GetDiskImageDiskimageArrayInput is an input type that accepts GetDiskImageDiskimageArray and GetDiskImageDiskimageArrayOutput values.
// You can construct a concrete instance of `GetDiskImageDiskimageArrayInput` via:
//
//          GetDiskImageDiskimageArray{ GetDiskImageDiskimageArgs{...} }
type GetDiskImageDiskimageArrayInput interface {
	pulumi.Input

	ToGetDiskImageDiskimageArrayOutput() GetDiskImageDiskimageArrayOutput
	ToGetDiskImageDiskimageArrayOutputWithContext(context.Context) GetDiskImageDiskimageArrayOutput
}

type GetDiskImageDiskimageArray []GetDiskImageDiskimageInput

func (GetDiskImageDiskimageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDiskImageDiskimage)(nil)).Elem()
}

func (i GetDiskImageDiskimageArray) ToGetDiskImageDiskimageArrayOutput() GetDiskImageDiskimageArrayOutput {
	return i.ToGetDiskImageDiskimageArrayOutputWithContext(context.Background())
}

func (i GetDiskImageDiskimageArray) ToGetDiskImageDiskimageArrayOutputWithContext(ctx context.Context) GetDiskImageDiskimageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDiskImageDiskimageArrayOutput)
}

type GetDiskImageDiskimageOutput struct{ *pulumi.OutputState }

func (GetDiskImageDiskimageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDiskImageDiskimage)(nil)).Elem()
}

func (o GetDiskImageDiskimageOutput) ToGetDiskImageDiskimageOutput() GetDiskImageDiskimageOutput {
	return o
}

func (o GetDiskImageDiskimageOutput) ToGetDiskImageDiskimageOutputWithContext(ctx context.Context) GetDiskImageDiskimageOutput {
	return o
}

// The ID of this resource.
func (o GetDiskImageDiskimageOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskImageDiskimage) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDiskImageDiskimageOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskImageDiskimage) string { return v.Label }).(pulumi.StringOutput)
}

func (o GetDiskImageDiskimageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskImageDiskimage) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDiskImageDiskimageOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskImageDiskimage) string { return v.Version }).(pulumi.StringOutput)
}

type GetDiskImageDiskimageArrayOutput struct{ *pulumi.OutputState }

func (GetDiskImageDiskimageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDiskImageDiskimage)(nil)).Elem()
}

func (o GetDiskImageDiskimageArrayOutput) ToGetDiskImageDiskimageArrayOutput() GetDiskImageDiskimageArrayOutput {
	return o
}

func (o GetDiskImageDiskimageArrayOutput) ToGetDiskImageDiskimageArrayOutputWithContext(ctx context.Context) GetDiskImageDiskimageArrayOutput {
	return o
}

func (o GetDiskImageDiskimageArrayOutput) Index(i pulumi.IntInput) GetDiskImageDiskimageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDiskImageDiskimage {
		return vs[0].([]GetDiskImageDiskimage)[vs[1].(int)]
	}).(GetDiskImageDiskimageOutput)
}

type GetDiskImageFilter struct {
	// Set to `true` to require that a field match all of the `values` instead of just one or more of them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure that all of the `values` are present in the list or set.
	All *bool `pulumi:"all"`
	// Filter diskimages by this key. This may be one of `id`, `label`, `name`, `version`.
	Key string `pulumi:"key"`
	// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as substrings to find within the string field.
	MatchBy *string `pulumi:"matchBy"`
	// Only retrieves `diskimages` which keys has value that matches one of the values provided here
	Values []string `pulumi:"values"`
}

// GetDiskImageFilterInput is an input type that accepts GetDiskImageFilterArgs and GetDiskImageFilterOutput values.
// You can construct a concrete instance of `GetDiskImageFilterInput` via:
//
//          GetDiskImageFilterArgs{...}
type GetDiskImageFilterInput interface {
	pulumi.Input

	ToGetDiskImageFilterOutput() GetDiskImageFilterOutput
	ToGetDiskImageFilterOutputWithContext(context.Context) GetDiskImageFilterOutput
}

type GetDiskImageFilterArgs struct {
	// Set to `true` to require that a field match all of the `values` instead of just one or more of them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure that all of the `values` are present in the list or set.
	All pulumi.BoolPtrInput `pulumi:"all"`
	// Filter diskimages by this key. This may be one of `id`, `label`, `name`, `version`.
	Key pulumi.StringInput `pulumi:"key"`
	// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as substrings to find within the string field.
	MatchBy pulumi.StringPtrInput `pulumi:"matchBy"`
	// Only retrieves `diskimages` which keys has value that matches one of the values provided here
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetDiskImageFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDiskImageFilter)(nil)).Elem()
}

func (i GetDiskImageFilterArgs) ToGetDiskImageFilterOutput() GetDiskImageFilterOutput {
	return i.ToGetDiskImageFilterOutputWithContext(context.Background())
}

func (i GetDiskImageFilterArgs) ToGetDiskImageFilterOutputWithContext(ctx context.Context) GetDiskImageFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDiskImageFilterOutput)
}

// GetDiskImageFilterArrayInput is an input type that accepts GetDiskImageFilterArray and GetDiskImageFilterArrayOutput values.
// You can construct a concrete instance of `GetDiskImageFilterArrayInput` via:
//
//          GetDiskImageFilterArray{ GetDiskImageFilterArgs{...} }
type GetDiskImageFilterArrayInput interface {
	pulumi.Input

	ToGetDiskImageFilterArrayOutput() GetDiskImageFilterArrayOutput
	ToGetDiskImageFilterArrayOutputWithContext(context.Context) GetDiskImageFilterArrayOutput
}

type GetDiskImageFilterArray []GetDiskImageFilterInput

func (GetDiskImageFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDiskImageFilter)(nil)).Elem()
}

func (i GetDiskImageFilterArray) ToGetDiskImageFilterArrayOutput() GetDiskImageFilterArrayOutput {
	return i.ToGetDiskImageFilterArrayOutputWithContext(context.Background())
}

func (i GetDiskImageFilterArray) ToGetDiskImageFilterArrayOutputWithContext(ctx context.Context) GetDiskImageFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDiskImageFilterArrayOutput)
}

type GetDiskImageFilterOutput struct{ *pulumi.OutputState }

func (GetDiskImageFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDiskImageFilter)(nil)).Elem()
}

func (o GetDiskImageFilterOutput) ToGetDiskImageFilterOutput() GetDiskImageFilterOutput {
	return o
}

func (o GetDiskImageFilterOutput) ToGetDiskImageFilterOutputWithContext(ctx context.Context) GetDiskImageFilterOutput {
	return o
}

// Set to `true` to require that a field match all of the `values` instead of just one or more of them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure that all of the `values` are present in the list or set.
func (o GetDiskImageFilterOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetDiskImageFilter) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// Filter diskimages by this key. This may be one of `id`, `label`, `name`, `version`.
func (o GetDiskImageFilterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskImageFilter) string { return v.Key }).(pulumi.StringOutput)
}

// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as substrings to find within the string field.
func (o GetDiskImageFilterOutput) MatchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDiskImageFilter) *string { return v.MatchBy }).(pulumi.StringPtrOutput)
}

// Only retrieves `diskimages` which keys has value that matches one of the values provided here
func (o GetDiskImageFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDiskImageFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetDiskImageFilterArrayOutput struct{ *pulumi.OutputState }

func (GetDiskImageFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDiskImageFilter)(nil)).Elem()
}

func (o GetDiskImageFilterArrayOutput) ToGetDiskImageFilterArrayOutput() GetDiskImageFilterArrayOutput {
	return o
}

func (o GetDiskImageFilterArrayOutput) ToGetDiskImageFilterArrayOutputWithContext(ctx context.Context) GetDiskImageFilterArrayOutput {
	return o
}

func (o GetDiskImageFilterArrayOutput) Index(i pulumi.IntInput) GetDiskImageFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDiskImageFilter {
		return vs[0].([]GetDiskImageFilter)[vs[1].(int)]
	}).(GetDiskImageFilterOutput)
}

type GetDiskImageSort struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction *string `pulumi:"direction"`
	// Sort diskimages by this key. This may be one of `id`, `label`, `name`, `version`.
	Key string `pulumi:"key"`
}

// GetDiskImageSortInput is an input type that accepts GetDiskImageSortArgs and GetDiskImageSortOutput values.
// You can construct a concrete instance of `GetDiskImageSortInput` via:
//
//          GetDiskImageSortArgs{...}
type GetDiskImageSortInput interface {
	pulumi.Input

	ToGetDiskImageSortOutput() GetDiskImageSortOutput
	ToGetDiskImageSortOutputWithContext(context.Context) GetDiskImageSortOutput
}

type GetDiskImageSortArgs struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Sort diskimages by this key. This may be one of `id`, `label`, `name`, `version`.
	Key pulumi.StringInput `pulumi:"key"`
}

func (GetDiskImageSortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDiskImageSort)(nil)).Elem()
}

func (i GetDiskImageSortArgs) ToGetDiskImageSortOutput() GetDiskImageSortOutput {
	return i.ToGetDiskImageSortOutputWithContext(context.Background())
}

func (i GetDiskImageSortArgs) ToGetDiskImageSortOutputWithContext(ctx context.Context) GetDiskImageSortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDiskImageSortOutput)
}

// GetDiskImageSortArrayInput is an input type that accepts GetDiskImageSortArray and GetDiskImageSortArrayOutput values.
// You can construct a concrete instance of `GetDiskImageSortArrayInput` via:
//
//          GetDiskImageSortArray{ GetDiskImageSortArgs{...} }
type GetDiskImageSortArrayInput interface {
	pulumi.Input

	ToGetDiskImageSortArrayOutput() GetDiskImageSortArrayOutput
	ToGetDiskImageSortArrayOutputWithContext(context.Context) GetDiskImageSortArrayOutput
}

type GetDiskImageSortArray []GetDiskImageSortInput

func (GetDiskImageSortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDiskImageSort)(nil)).Elem()
}

func (i GetDiskImageSortArray) ToGetDiskImageSortArrayOutput() GetDiskImageSortArrayOutput {
	return i.ToGetDiskImageSortArrayOutputWithContext(context.Background())
}

func (i GetDiskImageSortArray) ToGetDiskImageSortArrayOutputWithContext(ctx context.Context) GetDiskImageSortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDiskImageSortArrayOutput)
}

type GetDiskImageSortOutput struct{ *pulumi.OutputState }

func (GetDiskImageSortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDiskImageSort)(nil)).Elem()
}

func (o GetDiskImageSortOutput) ToGetDiskImageSortOutput() GetDiskImageSortOutput {
	return o
}

func (o GetDiskImageSortOutput) ToGetDiskImageSortOutputWithContext(ctx context.Context) GetDiskImageSortOutput {
	return o
}

// The sort direction. This may be either `asc` or `desc`.
func (o GetDiskImageSortOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDiskImageSort) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Sort diskimages by this key. This may be one of `id`, `label`, `name`, `version`.
func (o GetDiskImageSortOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskImageSort) string { return v.Key }).(pulumi.StringOutput)
}

type GetDiskImageSortArrayOutput struct{ *pulumi.OutputState }

func (GetDiskImageSortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDiskImageSort)(nil)).Elem()
}

func (o GetDiskImageSortArrayOutput) ToGetDiskImageSortArrayOutput() GetDiskImageSortArrayOutput {
	return o
}

func (o GetDiskImageSortArrayOutput) ToGetDiskImageSortArrayOutputWithContext(ctx context.Context) GetDiskImageSortArrayOutput {
	return o
}

func (o GetDiskImageSortArrayOutput) Index(i pulumi.IntInput) GetDiskImageSortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDiskImageSort {
		return vs[0].([]GetDiskImageSort)[vs[1].(int)]
	}).(GetDiskImageSortOutput)
}

type GetInstancesFilter struct {
	// Set to `true` to require that a field match all of the `values` instead of just one or more of them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure that all of the `values` are present in the list or set.
	All *bool `pulumi:"all"`
	// Filter instances by this key. This may be one of `cpuCores`, `createdAt`, `diskGb`, `firewallId`, `hostname`, `id`, `initialPassword`, `initialUser`, `networkId`, `notes`, `privateIp`, `pseudoIp`, `publicIp`, `ramMb`, `region`, `reverseDns`, `script`, `size`, `sshkeyId`, `status`, `tags`, `template`.
	Key string `pulumi:"key"`
	// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as substrings to find within the string field.
	MatchBy *string `pulumi:"matchBy"`
	// Only retrieves `instances` which keys has value that matches one of the values provided here
	Values []string `pulumi:"values"`
}

// GetInstancesFilterInput is an input type that accepts GetInstancesFilterArgs and GetInstancesFilterOutput values.
// You can construct a concrete instance of `GetInstancesFilterInput` via:
//
//          GetInstancesFilterArgs{...}
type GetInstancesFilterInput interface {
	pulumi.Input

	ToGetInstancesFilterOutput() GetInstancesFilterOutput
	ToGetInstancesFilterOutputWithContext(context.Context) GetInstancesFilterOutput
}

type GetInstancesFilterArgs struct {
	// Set to `true` to require that a field match all of the `values` instead of just one or more of them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure that all of the `values` are present in the list or set.
	All pulumi.BoolPtrInput `pulumi:"all"`
	// Filter instances by this key. This may be one of `cpuCores`, `createdAt`, `diskGb`, `firewallId`, `hostname`, `id`, `initialPassword`, `initialUser`, `networkId`, `notes`, `privateIp`, `pseudoIp`, `publicIp`, `ramMb`, `region`, `reverseDns`, `script`, `size`, `sshkeyId`, `status`, `tags`, `template`.
	Key pulumi.StringInput `pulumi:"key"`
	// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as substrings to find within the string field.
	MatchBy pulumi.StringPtrInput `pulumi:"matchBy"`
	// Only retrieves `instances` which keys has value that matches one of the values provided here
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetInstancesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesFilter)(nil)).Elem()
}

func (i GetInstancesFilterArgs) ToGetInstancesFilterOutput() GetInstancesFilterOutput {
	return i.ToGetInstancesFilterOutputWithContext(context.Background())
}

func (i GetInstancesFilterArgs) ToGetInstancesFilterOutputWithContext(ctx context.Context) GetInstancesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesFilterOutput)
}

// GetInstancesFilterArrayInput is an input type that accepts GetInstancesFilterArray and GetInstancesFilterArrayOutput values.
// You can construct a concrete instance of `GetInstancesFilterArrayInput` via:
//
//          GetInstancesFilterArray{ GetInstancesFilterArgs{...} }
type GetInstancesFilterArrayInput interface {
	pulumi.Input

	ToGetInstancesFilterArrayOutput() GetInstancesFilterArrayOutput
	ToGetInstancesFilterArrayOutputWithContext(context.Context) GetInstancesFilterArrayOutput
}

type GetInstancesFilterArray []GetInstancesFilterInput

func (GetInstancesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesFilter)(nil)).Elem()
}

func (i GetInstancesFilterArray) ToGetInstancesFilterArrayOutput() GetInstancesFilterArrayOutput {
	return i.ToGetInstancesFilterArrayOutputWithContext(context.Background())
}

func (i GetInstancesFilterArray) ToGetInstancesFilterArrayOutputWithContext(ctx context.Context) GetInstancesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesFilterArrayOutput)
}

type GetInstancesFilterOutput struct{ *pulumi.OutputState }

func (GetInstancesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesFilter)(nil)).Elem()
}

func (o GetInstancesFilterOutput) ToGetInstancesFilterOutput() GetInstancesFilterOutput {
	return o
}

func (o GetInstancesFilterOutput) ToGetInstancesFilterOutputWithContext(ctx context.Context) GetInstancesFilterOutput {
	return o
}

// Set to `true` to require that a field match all of the `values` instead of just one or more of them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure that all of the `values` are present in the list or set.
func (o GetInstancesFilterOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetInstancesFilter) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// Filter instances by this key. This may be one of `cpuCores`, `createdAt`, `diskGb`, `firewallId`, `hostname`, `id`, `initialPassword`, `initialUser`, `networkId`, `notes`, `privateIp`, `pseudoIp`, `publicIp`, `ramMb`, `region`, `reverseDns`, `script`, `size`, `sshkeyId`, `status`, `tags`, `template`.
func (o GetInstancesFilterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesFilter) string { return v.Key }).(pulumi.StringOutput)
}

// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as substrings to find within the string field.
func (o GetInstancesFilterOutput) MatchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesFilter) *string { return v.MatchBy }).(pulumi.StringPtrOutput)
}

// Only retrieves `instances` which keys has value that matches one of the values provided here
func (o GetInstancesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetInstancesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesFilter)(nil)).Elem()
}

func (o GetInstancesFilterArrayOutput) ToGetInstancesFilterArrayOutput() GetInstancesFilterArrayOutput {
	return o
}

func (o GetInstancesFilterArrayOutput) ToGetInstancesFilterArrayOutputWithContext(ctx context.Context) GetInstancesFilterArrayOutput {
	return o
}

func (o GetInstancesFilterArrayOutput) Index(i pulumi.IntInput) GetInstancesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesFilter {
		return vs[0].([]GetInstancesFilter)[vs[1].(int)]
	}).(GetInstancesFilterOutput)
}

type GetInstancesInstance struct {
	CpuCores   int    `pulumi:"cpuCores"`
	CreatedAt  string `pulumi:"createdAt"`
	DiskGb     int    `pulumi:"diskGb"`
	FirewallId string `pulumi:"firewallId"`
	Hostname   string `pulumi:"hostname"`
	// The ID of this resource.
	Id              string `pulumi:"id"`
	InitialPassword string `pulumi:"initialPassword"`
	InitialUser     string `pulumi:"initialUser"`
	NetworkId       string `pulumi:"networkId"`
	Notes           string `pulumi:"notes"`
	PrivateIp       string `pulumi:"privateIp"`
	PseudoIp        string `pulumi:"pseudoIp"`
	PublicIp        string `pulumi:"publicIp"`
	RamMb           int    `pulumi:"ramMb"`
	// If used, all instances will be from the provided region
	Region     string   `pulumi:"region"`
	ReverseDns string   `pulumi:"reverseDns"`
	Script     string   `pulumi:"script"`
	Size       string   `pulumi:"size"`
	SshkeyId   string   `pulumi:"sshkeyId"`
	Status     string   `pulumi:"status"`
	Tags       []string `pulumi:"tags"`
	Template   string   `pulumi:"template"`
}

// GetInstancesInstanceInput is an input type that accepts GetInstancesInstanceArgs and GetInstancesInstanceOutput values.
// You can construct a concrete instance of `GetInstancesInstanceInput` via:
//
//          GetInstancesInstanceArgs{...}
type GetInstancesInstanceInput interface {
	pulumi.Input

	ToGetInstancesInstanceOutput() GetInstancesInstanceOutput
	ToGetInstancesInstanceOutputWithContext(context.Context) GetInstancesInstanceOutput
}

type GetInstancesInstanceArgs struct {
	CpuCores   pulumi.IntInput    `pulumi:"cpuCores"`
	CreatedAt  pulumi.StringInput `pulumi:"createdAt"`
	DiskGb     pulumi.IntInput    `pulumi:"diskGb"`
	FirewallId pulumi.StringInput `pulumi:"firewallId"`
	Hostname   pulumi.StringInput `pulumi:"hostname"`
	// The ID of this resource.
	Id              pulumi.StringInput `pulumi:"id"`
	InitialPassword pulumi.StringInput `pulumi:"initialPassword"`
	InitialUser     pulumi.StringInput `pulumi:"initialUser"`
	NetworkId       pulumi.StringInput `pulumi:"networkId"`
	Notes           pulumi.StringInput `pulumi:"notes"`
	PrivateIp       pulumi.StringInput `pulumi:"privateIp"`
	PseudoIp        pulumi.StringInput `pulumi:"pseudoIp"`
	PublicIp        pulumi.StringInput `pulumi:"publicIp"`
	RamMb           pulumi.IntInput    `pulumi:"ramMb"`
	// If used, all instances will be from the provided region
	Region     pulumi.StringInput      `pulumi:"region"`
	ReverseDns pulumi.StringInput      `pulumi:"reverseDns"`
	Script     pulumi.StringInput      `pulumi:"script"`
	Size       pulumi.StringInput      `pulumi:"size"`
	SshkeyId   pulumi.StringInput      `pulumi:"sshkeyId"`
	Status     pulumi.StringInput      `pulumi:"status"`
	Tags       pulumi.StringArrayInput `pulumi:"tags"`
	Template   pulumi.StringInput      `pulumi:"template"`
}

func (GetInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return i.ToGetInstancesInstanceOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceOutput)
}

// GetInstancesInstanceArrayInput is an input type that accepts GetInstancesInstanceArray and GetInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceArrayInput` via:
//
//          GetInstancesInstanceArray{ GetInstancesInstanceArgs{...} }
type GetInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput
	ToGetInstancesInstanceArrayOutputWithContext(context.Context) GetInstancesInstanceArrayOutput
}

type GetInstancesInstanceArray []GetInstancesInstanceInput

func (GetInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return i.ToGetInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceArrayOutput)
}

type GetInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return o
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return o
}

func (o GetInstancesInstanceOutput) CpuCores() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.CpuCores }).(pulumi.IntOutput)
}

func (o GetInstancesInstanceOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceOutput) DiskGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.DiskGb }).(pulumi.IntOutput)
}

func (o GetInstancesInstanceOutput) FirewallId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.FirewallId }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Hostname }).(pulumi.StringOutput)
}

// The ID of this resource.
func (o GetInstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceOutput) InitialPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.InitialPassword }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceOutput) InitialUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.InitialUser }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.NetworkId }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceOutput) Notes() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Notes }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.PrivateIp }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceOutput) PseudoIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.PseudoIp }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.PublicIp }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceOutput) RamMb() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.RamMb }).(pulumi.IntOutput)
}

// If used, all instances will be from the provided region
func (o GetInstancesInstanceOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceOutput) ReverseDns() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ReverseDns }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceOutput) Script() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Script }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceOutput) Size() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Size }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceOutput) SshkeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.SshkeyId }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o GetInstancesInstanceOutput) Template() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Template }).(pulumi.StringOutput)
}

type GetInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstance {
		return vs[0].([]GetInstancesInstance)[vs[1].(int)]
	}).(GetInstancesInstanceOutput)
}

type GetInstancesSizeFilter struct {
	// Set to `true` to require that a field match all of the `values` instead of just one or more of them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure that all of the `values` are present in the list or set.
	All *bool `pulumi:"all"`
	// Filter sizes by this key. This may be one of `cpu`, `description`, `disk`, `name`, `ram`, `selectable`, `type`.
	Key string `pulumi:"key"`
	// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as substrings to find within the string field.
	MatchBy *string `pulumi:"matchBy"`
	// Only retrieves `sizes` which keys has value that matches one of the values provided here
	Values []string `pulumi:"values"`
}

// GetInstancesSizeFilterInput is an input type that accepts GetInstancesSizeFilterArgs and GetInstancesSizeFilterOutput values.
// You can construct a concrete instance of `GetInstancesSizeFilterInput` via:
//
//          GetInstancesSizeFilterArgs{...}
type GetInstancesSizeFilterInput interface {
	pulumi.Input

	ToGetInstancesSizeFilterOutput() GetInstancesSizeFilterOutput
	ToGetInstancesSizeFilterOutputWithContext(context.Context) GetInstancesSizeFilterOutput
}

type GetInstancesSizeFilterArgs struct {
	// Set to `true` to require that a field match all of the `values` instead of just one or more of them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure that all of the `values` are present in the list or set.
	All pulumi.BoolPtrInput `pulumi:"all"`
	// Filter sizes by this key. This may be one of `cpu`, `description`, `disk`, `name`, `ram`, `selectable`, `type`.
	Key pulumi.StringInput `pulumi:"key"`
	// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as substrings to find within the string field.
	MatchBy pulumi.StringPtrInput `pulumi:"matchBy"`
	// Only retrieves `sizes` which keys has value that matches one of the values provided here
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetInstancesSizeFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesSizeFilter)(nil)).Elem()
}

func (i GetInstancesSizeFilterArgs) ToGetInstancesSizeFilterOutput() GetInstancesSizeFilterOutput {
	return i.ToGetInstancesSizeFilterOutputWithContext(context.Background())
}

func (i GetInstancesSizeFilterArgs) ToGetInstancesSizeFilterOutputWithContext(ctx context.Context) GetInstancesSizeFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesSizeFilterOutput)
}

// GetInstancesSizeFilterArrayInput is an input type that accepts GetInstancesSizeFilterArray and GetInstancesSizeFilterArrayOutput values.
// You can construct a concrete instance of `GetInstancesSizeFilterArrayInput` via:
//
//          GetInstancesSizeFilterArray{ GetInstancesSizeFilterArgs{...} }
type GetInstancesSizeFilterArrayInput interface {
	pulumi.Input

	ToGetInstancesSizeFilterArrayOutput() GetInstancesSizeFilterArrayOutput
	ToGetInstancesSizeFilterArrayOutputWithContext(context.Context) GetInstancesSizeFilterArrayOutput
}

type GetInstancesSizeFilterArray []GetInstancesSizeFilterInput

func (GetInstancesSizeFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesSizeFilter)(nil)).Elem()
}

func (i GetInstancesSizeFilterArray) ToGetInstancesSizeFilterArrayOutput() GetInstancesSizeFilterArrayOutput {
	return i.ToGetInstancesSizeFilterArrayOutputWithContext(context.Background())
}

func (i GetInstancesSizeFilterArray) ToGetInstancesSizeFilterArrayOutputWithContext(ctx context.Context) GetInstancesSizeFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesSizeFilterArrayOutput)
}

type GetInstancesSizeFilterOutput struct{ *pulumi.OutputState }

func (GetInstancesSizeFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesSizeFilter)(nil)).Elem()
}

func (o GetInstancesSizeFilterOutput) ToGetInstancesSizeFilterOutput() GetInstancesSizeFilterOutput {
	return o
}

func (o GetInstancesSizeFilterOutput) ToGetInstancesSizeFilterOutputWithContext(ctx context.Context) GetInstancesSizeFilterOutput {
	return o
}

// Set to `true` to require that a field match all of the `values` instead of just one or more of them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure that all of the `values` are present in the list or set.
func (o GetInstancesSizeFilterOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetInstancesSizeFilter) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// Filter sizes by this key. This may be one of `cpu`, `description`, `disk`, `name`, `ram`, `selectable`, `type`.
func (o GetInstancesSizeFilterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesSizeFilter) string { return v.Key }).(pulumi.StringOutput)
}

// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as substrings to find within the string field.
func (o GetInstancesSizeFilterOutput) MatchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesSizeFilter) *string { return v.MatchBy }).(pulumi.StringPtrOutput)
}

// Only retrieves `sizes` which keys has value that matches one of the values provided here
func (o GetInstancesSizeFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesSizeFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetInstancesSizeFilterArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesSizeFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesSizeFilter)(nil)).Elem()
}

func (o GetInstancesSizeFilterArrayOutput) ToGetInstancesSizeFilterArrayOutput() GetInstancesSizeFilterArrayOutput {
	return o
}

func (o GetInstancesSizeFilterArrayOutput) ToGetInstancesSizeFilterArrayOutputWithContext(ctx context.Context) GetInstancesSizeFilterArrayOutput {
	return o
}

func (o GetInstancesSizeFilterArrayOutput) Index(i pulumi.IntInput) GetInstancesSizeFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesSizeFilter {
		return vs[0].([]GetInstancesSizeFilter)[vs[1].(int)]
	}).(GetInstancesSizeFilterOutput)
}

type GetInstancesSizeSize struct {
	Cpu         int    `pulumi:"cpu"`
	Description string `pulumi:"description"`
	Disk        int    `pulumi:"disk"`
	Name        string `pulumi:"name"`
	Ram         int    `pulumi:"ram"`
	Selectable  bool   `pulumi:"selectable"`
	Type        string `pulumi:"type"`
}

// GetInstancesSizeSizeInput is an input type that accepts GetInstancesSizeSizeArgs and GetInstancesSizeSizeOutput values.
// You can construct a concrete instance of `GetInstancesSizeSizeInput` via:
//
//          GetInstancesSizeSizeArgs{...}
type GetInstancesSizeSizeInput interface {
	pulumi.Input

	ToGetInstancesSizeSizeOutput() GetInstancesSizeSizeOutput
	ToGetInstancesSizeSizeOutputWithContext(context.Context) GetInstancesSizeSizeOutput
}

type GetInstancesSizeSizeArgs struct {
	Cpu         pulumi.IntInput    `pulumi:"cpu"`
	Description pulumi.StringInput `pulumi:"description"`
	Disk        pulumi.IntInput    `pulumi:"disk"`
	Name        pulumi.StringInput `pulumi:"name"`
	Ram         pulumi.IntInput    `pulumi:"ram"`
	Selectable  pulumi.BoolInput   `pulumi:"selectable"`
	Type        pulumi.StringInput `pulumi:"type"`
}

func (GetInstancesSizeSizeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesSizeSize)(nil)).Elem()
}

func (i GetInstancesSizeSizeArgs) ToGetInstancesSizeSizeOutput() GetInstancesSizeSizeOutput {
	return i.ToGetInstancesSizeSizeOutputWithContext(context.Background())
}

func (i GetInstancesSizeSizeArgs) ToGetInstancesSizeSizeOutputWithContext(ctx context.Context) GetInstancesSizeSizeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesSizeSizeOutput)
}

// GetInstancesSizeSizeArrayInput is an input type that accepts GetInstancesSizeSizeArray and GetInstancesSizeSizeArrayOutput values.
// You can construct a concrete instance of `GetInstancesSizeSizeArrayInput` via:
//
//          GetInstancesSizeSizeArray{ GetInstancesSizeSizeArgs{...} }
type GetInstancesSizeSizeArrayInput interface {
	pulumi.Input

	ToGetInstancesSizeSizeArrayOutput() GetInstancesSizeSizeArrayOutput
	ToGetInstancesSizeSizeArrayOutputWithContext(context.Context) GetInstancesSizeSizeArrayOutput
}

type GetInstancesSizeSizeArray []GetInstancesSizeSizeInput

func (GetInstancesSizeSizeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesSizeSize)(nil)).Elem()
}

func (i GetInstancesSizeSizeArray) ToGetInstancesSizeSizeArrayOutput() GetInstancesSizeSizeArrayOutput {
	return i.ToGetInstancesSizeSizeArrayOutputWithContext(context.Background())
}

func (i GetInstancesSizeSizeArray) ToGetInstancesSizeSizeArrayOutputWithContext(ctx context.Context) GetInstancesSizeSizeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesSizeSizeArrayOutput)
}

type GetInstancesSizeSizeOutput struct{ *pulumi.OutputState }

func (GetInstancesSizeSizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesSizeSize)(nil)).Elem()
}

func (o GetInstancesSizeSizeOutput) ToGetInstancesSizeSizeOutput() GetInstancesSizeSizeOutput {
	return o
}

func (o GetInstancesSizeSizeOutput) ToGetInstancesSizeSizeOutputWithContext(ctx context.Context) GetInstancesSizeSizeOutput {
	return o
}

func (o GetInstancesSizeSizeOutput) Cpu() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesSizeSize) int { return v.Cpu }).(pulumi.IntOutput)
}

func (o GetInstancesSizeSizeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesSizeSize) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetInstancesSizeSizeOutput) Disk() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesSizeSize) int { return v.Disk }).(pulumi.IntOutput)
}

func (o GetInstancesSizeSizeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesSizeSize) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetInstancesSizeSizeOutput) Ram() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesSizeSize) int { return v.Ram }).(pulumi.IntOutput)
}

func (o GetInstancesSizeSizeOutput) Selectable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesSizeSize) bool { return v.Selectable }).(pulumi.BoolOutput)
}

func (o GetInstancesSizeSizeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesSizeSize) string { return v.Type }).(pulumi.StringOutput)
}

type GetInstancesSizeSizeArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesSizeSizeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesSizeSize)(nil)).Elem()
}

func (o GetInstancesSizeSizeArrayOutput) ToGetInstancesSizeSizeArrayOutput() GetInstancesSizeSizeArrayOutput {
	return o
}

func (o GetInstancesSizeSizeArrayOutput) ToGetInstancesSizeSizeArrayOutputWithContext(ctx context.Context) GetInstancesSizeSizeArrayOutput {
	return o
}

func (o GetInstancesSizeSizeArrayOutput) Index(i pulumi.IntInput) GetInstancesSizeSizeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesSizeSize {
		return vs[0].([]GetInstancesSizeSize)[vs[1].(int)]
	}).(GetInstancesSizeSizeOutput)
}

type GetInstancesSizeSort struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction *string `pulumi:"direction"`
	// Sort sizes by this key. This may be one of `cpu`, `description`, `disk`, `name`, `ram`, `selectable`, `type`.
	Key string `pulumi:"key"`
}

// GetInstancesSizeSortInput is an input type that accepts GetInstancesSizeSortArgs and GetInstancesSizeSortOutput values.
// You can construct a concrete instance of `GetInstancesSizeSortInput` via:
//
//          GetInstancesSizeSortArgs{...}
type GetInstancesSizeSortInput interface {
	pulumi.Input

	ToGetInstancesSizeSortOutput() GetInstancesSizeSortOutput
	ToGetInstancesSizeSortOutputWithContext(context.Context) GetInstancesSizeSortOutput
}

type GetInstancesSizeSortArgs struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Sort sizes by this key. This may be one of `cpu`, `description`, `disk`, `name`, `ram`, `selectable`, `type`.
	Key pulumi.StringInput `pulumi:"key"`
}

func (GetInstancesSizeSortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesSizeSort)(nil)).Elem()
}

func (i GetInstancesSizeSortArgs) ToGetInstancesSizeSortOutput() GetInstancesSizeSortOutput {
	return i.ToGetInstancesSizeSortOutputWithContext(context.Background())
}

func (i GetInstancesSizeSortArgs) ToGetInstancesSizeSortOutputWithContext(ctx context.Context) GetInstancesSizeSortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesSizeSortOutput)
}

// GetInstancesSizeSortArrayInput is an input type that accepts GetInstancesSizeSortArray and GetInstancesSizeSortArrayOutput values.
// You can construct a concrete instance of `GetInstancesSizeSortArrayInput` via:
//
//          GetInstancesSizeSortArray{ GetInstancesSizeSortArgs{...} }
type GetInstancesSizeSortArrayInput interface {
	pulumi.Input

	ToGetInstancesSizeSortArrayOutput() GetInstancesSizeSortArrayOutput
	ToGetInstancesSizeSortArrayOutputWithContext(context.Context) GetInstancesSizeSortArrayOutput
}

type GetInstancesSizeSortArray []GetInstancesSizeSortInput

func (GetInstancesSizeSortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesSizeSort)(nil)).Elem()
}

func (i GetInstancesSizeSortArray) ToGetInstancesSizeSortArrayOutput() GetInstancesSizeSortArrayOutput {
	return i.ToGetInstancesSizeSortArrayOutputWithContext(context.Background())
}

func (i GetInstancesSizeSortArray) ToGetInstancesSizeSortArrayOutputWithContext(ctx context.Context) GetInstancesSizeSortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesSizeSortArrayOutput)
}

type GetInstancesSizeSortOutput struct{ *pulumi.OutputState }

func (GetInstancesSizeSortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesSizeSort)(nil)).Elem()
}

func (o GetInstancesSizeSortOutput) ToGetInstancesSizeSortOutput() GetInstancesSizeSortOutput {
	return o
}

func (o GetInstancesSizeSortOutput) ToGetInstancesSizeSortOutputWithContext(ctx context.Context) GetInstancesSizeSortOutput {
	return o
}

// The sort direction. This may be either `asc` or `desc`.
func (o GetInstancesSizeSortOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesSizeSort) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Sort sizes by this key. This may be one of `cpu`, `description`, `disk`, `name`, `ram`, `selectable`, `type`.
func (o GetInstancesSizeSortOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesSizeSort) string { return v.Key }).(pulumi.StringOutput)
}

type GetInstancesSizeSortArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesSizeSortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesSizeSort)(nil)).Elem()
}

func (o GetInstancesSizeSortArrayOutput) ToGetInstancesSizeSortArrayOutput() GetInstancesSizeSortArrayOutput {
	return o
}

func (o GetInstancesSizeSortArrayOutput) ToGetInstancesSizeSortArrayOutputWithContext(ctx context.Context) GetInstancesSizeSortArrayOutput {
	return o
}

func (o GetInstancesSizeSortArrayOutput) Index(i pulumi.IntInput) GetInstancesSizeSortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesSizeSort {
		return vs[0].([]GetInstancesSizeSort)[vs[1].(int)]
	}).(GetInstancesSizeSortOutput)
}

type GetInstancesSort struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction *string `pulumi:"direction"`
	// Sort instances by this key. This may be one of `cpuCores`, `createdAt`, `diskGb`, `firewallId`, `hostname`, `id`, `initialPassword`, `initialUser`, `networkId`, `notes`, `privateIp`, `pseudoIp`, `publicIp`, `ramMb`, `region`, `reverseDns`, `script`, `size`, `sshkeyId`, `status`, `template`.
	Key string `pulumi:"key"`
}

// GetInstancesSortInput is an input type that accepts GetInstancesSortArgs and GetInstancesSortOutput values.
// You can construct a concrete instance of `GetInstancesSortInput` via:
//
//          GetInstancesSortArgs{...}
type GetInstancesSortInput interface {
	pulumi.Input

	ToGetInstancesSortOutput() GetInstancesSortOutput
	ToGetInstancesSortOutputWithContext(context.Context) GetInstancesSortOutput
}

type GetInstancesSortArgs struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Sort instances by this key. This may be one of `cpuCores`, `createdAt`, `diskGb`, `firewallId`, `hostname`, `id`, `initialPassword`, `initialUser`, `networkId`, `notes`, `privateIp`, `pseudoIp`, `publicIp`, `ramMb`, `region`, `reverseDns`, `script`, `size`, `sshkeyId`, `status`, `template`.
	Key pulumi.StringInput `pulumi:"key"`
}

func (GetInstancesSortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesSort)(nil)).Elem()
}

func (i GetInstancesSortArgs) ToGetInstancesSortOutput() GetInstancesSortOutput {
	return i.ToGetInstancesSortOutputWithContext(context.Background())
}

func (i GetInstancesSortArgs) ToGetInstancesSortOutputWithContext(ctx context.Context) GetInstancesSortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesSortOutput)
}

// GetInstancesSortArrayInput is an input type that accepts GetInstancesSortArray and GetInstancesSortArrayOutput values.
// You can construct a concrete instance of `GetInstancesSortArrayInput` via:
//
//          GetInstancesSortArray{ GetInstancesSortArgs{...} }
type GetInstancesSortArrayInput interface {
	pulumi.Input

	ToGetInstancesSortArrayOutput() GetInstancesSortArrayOutput
	ToGetInstancesSortArrayOutputWithContext(context.Context) GetInstancesSortArrayOutput
}

type GetInstancesSortArray []GetInstancesSortInput

func (GetInstancesSortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesSort)(nil)).Elem()
}

func (i GetInstancesSortArray) ToGetInstancesSortArrayOutput() GetInstancesSortArrayOutput {
	return i.ToGetInstancesSortArrayOutputWithContext(context.Background())
}

func (i GetInstancesSortArray) ToGetInstancesSortArrayOutputWithContext(ctx context.Context) GetInstancesSortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesSortArrayOutput)
}

type GetInstancesSortOutput struct{ *pulumi.OutputState }

func (GetInstancesSortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesSort)(nil)).Elem()
}

func (o GetInstancesSortOutput) ToGetInstancesSortOutput() GetInstancesSortOutput {
	return o
}

func (o GetInstancesSortOutput) ToGetInstancesSortOutputWithContext(ctx context.Context) GetInstancesSortOutput {
	return o
}

// The sort direction. This may be either `asc` or `desc`.
func (o GetInstancesSortOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesSort) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Sort instances by this key. This may be one of `cpuCores`, `createdAt`, `diskGb`, `firewallId`, `hostname`, `id`, `initialPassword`, `initialUser`, `networkId`, `notes`, `privateIp`, `pseudoIp`, `publicIp`, `ramMb`, `region`, `reverseDns`, `script`, `size`, `sshkeyId`, `status`, `template`.
func (o GetInstancesSortOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesSort) string { return v.Key }).(pulumi.StringOutput)
}

type GetInstancesSortArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesSortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesSort)(nil)).Elem()
}

func (o GetInstancesSortArrayOutput) ToGetInstancesSortArrayOutput() GetInstancesSortArrayOutput {
	return o
}

func (o GetInstancesSortArrayOutput) ToGetInstancesSortArrayOutputWithContext(ctx context.Context) GetInstancesSortArrayOutput {
	return o
}

func (o GetInstancesSortArrayOutput) Index(i pulumi.IntInput) GetInstancesSortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesSort {
		return vs[0].([]GetInstancesSort)[vs[1].(int)]
	}).(GetInstancesSortOutput)
}

type GetKubernetesClusterInstalledApplication struct {
	Application string `pulumi:"application"`
	Category    string `pulumi:"category"`
	Installed   bool   `pulumi:"installed"`
	Version     string `pulumi:"version"`
}

// GetKubernetesClusterInstalledApplicationInput is an input type that accepts GetKubernetesClusterInstalledApplicationArgs and GetKubernetesClusterInstalledApplicationOutput values.
// You can construct a concrete instance of `GetKubernetesClusterInstalledApplicationInput` via:
//
//          GetKubernetesClusterInstalledApplicationArgs{...}
type GetKubernetesClusterInstalledApplicationInput interface {
	pulumi.Input

	ToGetKubernetesClusterInstalledApplicationOutput() GetKubernetesClusterInstalledApplicationOutput
	ToGetKubernetesClusterInstalledApplicationOutputWithContext(context.Context) GetKubernetesClusterInstalledApplicationOutput
}

type GetKubernetesClusterInstalledApplicationArgs struct {
	Application pulumi.StringInput `pulumi:"application"`
	Category    pulumi.StringInput `pulumi:"category"`
	Installed   pulumi.BoolInput   `pulumi:"installed"`
	Version     pulumi.StringInput `pulumi:"version"`
}

func (GetKubernetesClusterInstalledApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterInstalledApplication)(nil)).Elem()
}

func (i GetKubernetesClusterInstalledApplicationArgs) ToGetKubernetesClusterInstalledApplicationOutput() GetKubernetesClusterInstalledApplicationOutput {
	return i.ToGetKubernetesClusterInstalledApplicationOutputWithContext(context.Background())
}

func (i GetKubernetesClusterInstalledApplicationArgs) ToGetKubernetesClusterInstalledApplicationOutputWithContext(ctx context.Context) GetKubernetesClusterInstalledApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterInstalledApplicationOutput)
}

// GetKubernetesClusterInstalledApplicationArrayInput is an input type that accepts GetKubernetesClusterInstalledApplicationArray and GetKubernetesClusterInstalledApplicationArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterInstalledApplicationArrayInput` via:
//
//          GetKubernetesClusterInstalledApplicationArray{ GetKubernetesClusterInstalledApplicationArgs{...} }
type GetKubernetesClusterInstalledApplicationArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterInstalledApplicationArrayOutput() GetKubernetesClusterInstalledApplicationArrayOutput
	ToGetKubernetesClusterInstalledApplicationArrayOutputWithContext(context.Context) GetKubernetesClusterInstalledApplicationArrayOutput
}

type GetKubernetesClusterInstalledApplicationArray []GetKubernetesClusterInstalledApplicationInput

func (GetKubernetesClusterInstalledApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterInstalledApplication)(nil)).Elem()
}

func (i GetKubernetesClusterInstalledApplicationArray) ToGetKubernetesClusterInstalledApplicationArrayOutput() GetKubernetesClusterInstalledApplicationArrayOutput {
	return i.ToGetKubernetesClusterInstalledApplicationArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterInstalledApplicationArray) ToGetKubernetesClusterInstalledApplicationArrayOutputWithContext(ctx context.Context) GetKubernetesClusterInstalledApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterInstalledApplicationArrayOutput)
}

type GetKubernetesClusterInstalledApplicationOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterInstalledApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterInstalledApplication)(nil)).Elem()
}

func (o GetKubernetesClusterInstalledApplicationOutput) ToGetKubernetesClusterInstalledApplicationOutput() GetKubernetesClusterInstalledApplicationOutput {
	return o
}

func (o GetKubernetesClusterInstalledApplicationOutput) ToGetKubernetesClusterInstalledApplicationOutputWithContext(ctx context.Context) GetKubernetesClusterInstalledApplicationOutput {
	return o
}

func (o GetKubernetesClusterInstalledApplicationOutput) Application() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterInstalledApplication) string { return v.Application }).(pulumi.StringOutput)
}

func (o GetKubernetesClusterInstalledApplicationOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterInstalledApplication) string { return v.Category }).(pulumi.StringOutput)
}

func (o GetKubernetesClusterInstalledApplicationOutput) Installed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesClusterInstalledApplication) bool { return v.Installed }).(pulumi.BoolOutput)
}

func (o GetKubernetesClusterInstalledApplicationOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterInstalledApplication) string { return v.Version }).(pulumi.StringOutput)
}

type GetKubernetesClusterInstalledApplicationArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterInstalledApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterInstalledApplication)(nil)).Elem()
}

func (o GetKubernetesClusterInstalledApplicationArrayOutput) ToGetKubernetesClusterInstalledApplicationArrayOutput() GetKubernetesClusterInstalledApplicationArrayOutput {
	return o
}

func (o GetKubernetesClusterInstalledApplicationArrayOutput) ToGetKubernetesClusterInstalledApplicationArrayOutputWithContext(ctx context.Context) GetKubernetesClusterInstalledApplicationArrayOutput {
	return o
}

func (o GetKubernetesClusterInstalledApplicationArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterInstalledApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterInstalledApplication {
		return vs[0].([]GetKubernetesClusterInstalledApplication)[vs[1].(int)]
	}).(GetKubernetesClusterInstalledApplicationOutput)
}

type GetKubernetesClusterInstance struct {
	CpuCores int    `pulumi:"cpuCores"`
	DiskGb   int    `pulumi:"diskGb"`
	Hostname string `pulumi:"hostname"`
	RamMb    int    `pulumi:"ramMb"`
	Size     string `pulumi:"size"`
	// The status of Kubernetes cluster
	Status string `pulumi:"status"`
	// A list of tags
	Tags []string `pulumi:"tags"`
}

// GetKubernetesClusterInstanceInput is an input type that accepts GetKubernetesClusterInstanceArgs and GetKubernetesClusterInstanceOutput values.
// You can construct a concrete instance of `GetKubernetesClusterInstanceInput` via:
//
//          GetKubernetesClusterInstanceArgs{...}
type GetKubernetesClusterInstanceInput interface {
	pulumi.Input

	ToGetKubernetesClusterInstanceOutput() GetKubernetesClusterInstanceOutput
	ToGetKubernetesClusterInstanceOutputWithContext(context.Context) GetKubernetesClusterInstanceOutput
}

type GetKubernetesClusterInstanceArgs struct {
	CpuCores pulumi.IntInput    `pulumi:"cpuCores"`
	DiskGb   pulumi.IntInput    `pulumi:"diskGb"`
	Hostname pulumi.StringInput `pulumi:"hostname"`
	RamMb    pulumi.IntInput    `pulumi:"ramMb"`
	Size     pulumi.StringInput `pulumi:"size"`
	// The status of Kubernetes cluster
	Status pulumi.StringInput `pulumi:"status"`
	// A list of tags
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetKubernetesClusterInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterInstance)(nil)).Elem()
}

func (i GetKubernetesClusterInstanceArgs) ToGetKubernetesClusterInstanceOutput() GetKubernetesClusterInstanceOutput {
	return i.ToGetKubernetesClusterInstanceOutputWithContext(context.Background())
}

func (i GetKubernetesClusterInstanceArgs) ToGetKubernetesClusterInstanceOutputWithContext(ctx context.Context) GetKubernetesClusterInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterInstanceOutput)
}

// GetKubernetesClusterInstanceArrayInput is an input type that accepts GetKubernetesClusterInstanceArray and GetKubernetesClusterInstanceArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterInstanceArrayInput` via:
//
//          GetKubernetesClusterInstanceArray{ GetKubernetesClusterInstanceArgs{...} }
type GetKubernetesClusterInstanceArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterInstanceArrayOutput() GetKubernetesClusterInstanceArrayOutput
	ToGetKubernetesClusterInstanceArrayOutputWithContext(context.Context) GetKubernetesClusterInstanceArrayOutput
}

type GetKubernetesClusterInstanceArray []GetKubernetesClusterInstanceInput

func (GetKubernetesClusterInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterInstance)(nil)).Elem()
}

func (i GetKubernetesClusterInstanceArray) ToGetKubernetesClusterInstanceArrayOutput() GetKubernetesClusterInstanceArrayOutput {
	return i.ToGetKubernetesClusterInstanceArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterInstanceArray) ToGetKubernetesClusterInstanceArrayOutputWithContext(ctx context.Context) GetKubernetesClusterInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterInstanceArrayOutput)
}

type GetKubernetesClusterInstanceOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterInstance)(nil)).Elem()
}

func (o GetKubernetesClusterInstanceOutput) ToGetKubernetesClusterInstanceOutput() GetKubernetesClusterInstanceOutput {
	return o
}

func (o GetKubernetesClusterInstanceOutput) ToGetKubernetesClusterInstanceOutputWithContext(ctx context.Context) GetKubernetesClusterInstanceOutput {
	return o
}

func (o GetKubernetesClusterInstanceOutput) CpuCores() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesClusterInstance) int { return v.CpuCores }).(pulumi.IntOutput)
}

func (o GetKubernetesClusterInstanceOutput) DiskGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesClusterInstance) int { return v.DiskGb }).(pulumi.IntOutput)
}

func (o GetKubernetesClusterInstanceOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterInstance) string { return v.Hostname }).(pulumi.StringOutput)
}

func (o GetKubernetesClusterInstanceOutput) RamMb() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesClusterInstance) int { return v.RamMb }).(pulumi.IntOutput)
}

func (o GetKubernetesClusterInstanceOutput) Size() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterInstance) string { return v.Size }).(pulumi.StringOutput)
}

// The status of Kubernetes cluster
func (o GetKubernetesClusterInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterInstance) string { return v.Status }).(pulumi.StringOutput)
}

// A list of tags
func (o GetKubernetesClusterInstanceOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKubernetesClusterInstance) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetKubernetesClusterInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterInstance)(nil)).Elem()
}

func (o GetKubernetesClusterInstanceArrayOutput) ToGetKubernetesClusterInstanceArrayOutput() GetKubernetesClusterInstanceArrayOutput {
	return o
}

func (o GetKubernetesClusterInstanceArrayOutput) ToGetKubernetesClusterInstanceArrayOutputWithContext(ctx context.Context) GetKubernetesClusterInstanceArrayOutput {
	return o
}

func (o GetKubernetesClusterInstanceArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterInstance {
		return vs[0].([]GetKubernetesClusterInstance)[vs[1].(int)]
	}).(GetKubernetesClusterInstanceOutput)
}

type GetKubernetesClusterPool struct {
	Count int `pulumi:"count"`
	// The ID of this resource.
	Id            string                             `pulumi:"id"`
	InstanceNames []string                           `pulumi:"instanceNames"`
	Instances     []GetKubernetesClusterPoolInstance `pulumi:"instances"`
	Size          string                             `pulumi:"size"`
}

// GetKubernetesClusterPoolInput is an input type that accepts GetKubernetesClusterPoolArgs and GetKubernetesClusterPoolOutput values.
// You can construct a concrete instance of `GetKubernetesClusterPoolInput` via:
//
//          GetKubernetesClusterPoolArgs{...}
type GetKubernetesClusterPoolInput interface {
	pulumi.Input

	ToGetKubernetesClusterPoolOutput() GetKubernetesClusterPoolOutput
	ToGetKubernetesClusterPoolOutputWithContext(context.Context) GetKubernetesClusterPoolOutput
}

type GetKubernetesClusterPoolArgs struct {
	Count pulumi.IntInput `pulumi:"count"`
	// The ID of this resource.
	Id            pulumi.StringInput                         `pulumi:"id"`
	InstanceNames pulumi.StringArrayInput                    `pulumi:"instanceNames"`
	Instances     GetKubernetesClusterPoolInstanceArrayInput `pulumi:"instances"`
	Size          pulumi.StringInput                         `pulumi:"size"`
}

func (GetKubernetesClusterPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterPool)(nil)).Elem()
}

func (i GetKubernetesClusterPoolArgs) ToGetKubernetesClusterPoolOutput() GetKubernetesClusterPoolOutput {
	return i.ToGetKubernetesClusterPoolOutputWithContext(context.Background())
}

func (i GetKubernetesClusterPoolArgs) ToGetKubernetesClusterPoolOutputWithContext(ctx context.Context) GetKubernetesClusterPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterPoolOutput)
}

// GetKubernetesClusterPoolArrayInput is an input type that accepts GetKubernetesClusterPoolArray and GetKubernetesClusterPoolArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterPoolArrayInput` via:
//
//          GetKubernetesClusterPoolArray{ GetKubernetesClusterPoolArgs{...} }
type GetKubernetesClusterPoolArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterPoolArrayOutput() GetKubernetesClusterPoolArrayOutput
	ToGetKubernetesClusterPoolArrayOutputWithContext(context.Context) GetKubernetesClusterPoolArrayOutput
}

type GetKubernetesClusterPoolArray []GetKubernetesClusterPoolInput

func (GetKubernetesClusterPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterPool)(nil)).Elem()
}

func (i GetKubernetesClusterPoolArray) ToGetKubernetesClusterPoolArrayOutput() GetKubernetesClusterPoolArrayOutput {
	return i.ToGetKubernetesClusterPoolArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterPoolArray) ToGetKubernetesClusterPoolArrayOutputWithContext(ctx context.Context) GetKubernetesClusterPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterPoolArrayOutput)
}

type GetKubernetesClusterPoolOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterPool)(nil)).Elem()
}

func (o GetKubernetesClusterPoolOutput) ToGetKubernetesClusterPoolOutput() GetKubernetesClusterPoolOutput {
	return o
}

func (o GetKubernetesClusterPoolOutput) ToGetKubernetesClusterPoolOutputWithContext(ctx context.Context) GetKubernetesClusterPoolOutput {
	return o
}

func (o GetKubernetesClusterPoolOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesClusterPool) int { return v.Count }).(pulumi.IntOutput)
}

// The ID of this resource.
func (o GetKubernetesClusterPoolOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterPool) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetKubernetesClusterPoolOutput) InstanceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKubernetesClusterPool) []string { return v.InstanceNames }).(pulumi.StringArrayOutput)
}

func (o GetKubernetesClusterPoolOutput) Instances() GetKubernetesClusterPoolInstanceArrayOutput {
	return o.ApplyT(func(v GetKubernetesClusterPool) []GetKubernetesClusterPoolInstance { return v.Instances }).(GetKubernetesClusterPoolInstanceArrayOutput)
}

func (o GetKubernetesClusterPoolOutput) Size() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterPool) string { return v.Size }).(pulumi.StringOutput)
}

type GetKubernetesClusterPoolArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterPool)(nil)).Elem()
}

func (o GetKubernetesClusterPoolArrayOutput) ToGetKubernetesClusterPoolArrayOutput() GetKubernetesClusterPoolArrayOutput {
	return o
}

func (o GetKubernetesClusterPoolArrayOutput) ToGetKubernetesClusterPoolArrayOutputWithContext(ctx context.Context) GetKubernetesClusterPoolArrayOutput {
	return o
}

func (o GetKubernetesClusterPoolArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterPool {
		return vs[0].([]GetKubernetesClusterPool)[vs[1].(int)]
	}).(GetKubernetesClusterPoolOutput)
}

type GetKubernetesClusterPoolInstance struct {
	CpuCores int    `pulumi:"cpuCores"`
	DiskGb   int    `pulumi:"diskGb"`
	Hostname string `pulumi:"hostname"`
	RamMb    int    `pulumi:"ramMb"`
	Size     string `pulumi:"size"`
	// The status of Kubernetes cluster
	Status string `pulumi:"status"`
	// A list of tags
	Tags []string `pulumi:"tags"`
}

// GetKubernetesClusterPoolInstanceInput is an input type that accepts GetKubernetesClusterPoolInstanceArgs and GetKubernetesClusterPoolInstanceOutput values.
// You can construct a concrete instance of `GetKubernetesClusterPoolInstanceInput` via:
//
//          GetKubernetesClusterPoolInstanceArgs{...}
type GetKubernetesClusterPoolInstanceInput interface {
	pulumi.Input

	ToGetKubernetesClusterPoolInstanceOutput() GetKubernetesClusterPoolInstanceOutput
	ToGetKubernetesClusterPoolInstanceOutputWithContext(context.Context) GetKubernetesClusterPoolInstanceOutput
}

type GetKubernetesClusterPoolInstanceArgs struct {
	CpuCores pulumi.IntInput    `pulumi:"cpuCores"`
	DiskGb   pulumi.IntInput    `pulumi:"diskGb"`
	Hostname pulumi.StringInput `pulumi:"hostname"`
	RamMb    pulumi.IntInput    `pulumi:"ramMb"`
	Size     pulumi.StringInput `pulumi:"size"`
	// The status of Kubernetes cluster
	Status pulumi.StringInput `pulumi:"status"`
	// A list of tags
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetKubernetesClusterPoolInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterPoolInstance)(nil)).Elem()
}

func (i GetKubernetesClusterPoolInstanceArgs) ToGetKubernetesClusterPoolInstanceOutput() GetKubernetesClusterPoolInstanceOutput {
	return i.ToGetKubernetesClusterPoolInstanceOutputWithContext(context.Background())
}

func (i GetKubernetesClusterPoolInstanceArgs) ToGetKubernetesClusterPoolInstanceOutputWithContext(ctx context.Context) GetKubernetesClusterPoolInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterPoolInstanceOutput)
}

// GetKubernetesClusterPoolInstanceArrayInput is an input type that accepts GetKubernetesClusterPoolInstanceArray and GetKubernetesClusterPoolInstanceArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterPoolInstanceArrayInput` via:
//
//          GetKubernetesClusterPoolInstanceArray{ GetKubernetesClusterPoolInstanceArgs{...} }
type GetKubernetesClusterPoolInstanceArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterPoolInstanceArrayOutput() GetKubernetesClusterPoolInstanceArrayOutput
	ToGetKubernetesClusterPoolInstanceArrayOutputWithContext(context.Context) GetKubernetesClusterPoolInstanceArrayOutput
}

type GetKubernetesClusterPoolInstanceArray []GetKubernetesClusterPoolInstanceInput

func (GetKubernetesClusterPoolInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterPoolInstance)(nil)).Elem()
}

func (i GetKubernetesClusterPoolInstanceArray) ToGetKubernetesClusterPoolInstanceArrayOutput() GetKubernetesClusterPoolInstanceArrayOutput {
	return i.ToGetKubernetesClusterPoolInstanceArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterPoolInstanceArray) ToGetKubernetesClusterPoolInstanceArrayOutputWithContext(ctx context.Context) GetKubernetesClusterPoolInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterPoolInstanceArrayOutput)
}

type GetKubernetesClusterPoolInstanceOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterPoolInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterPoolInstance)(nil)).Elem()
}

func (o GetKubernetesClusterPoolInstanceOutput) ToGetKubernetesClusterPoolInstanceOutput() GetKubernetesClusterPoolInstanceOutput {
	return o
}

func (o GetKubernetesClusterPoolInstanceOutput) ToGetKubernetesClusterPoolInstanceOutputWithContext(ctx context.Context) GetKubernetesClusterPoolInstanceOutput {
	return o
}

func (o GetKubernetesClusterPoolInstanceOutput) CpuCores() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesClusterPoolInstance) int { return v.CpuCores }).(pulumi.IntOutput)
}

func (o GetKubernetesClusterPoolInstanceOutput) DiskGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesClusterPoolInstance) int { return v.DiskGb }).(pulumi.IntOutput)
}

func (o GetKubernetesClusterPoolInstanceOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterPoolInstance) string { return v.Hostname }).(pulumi.StringOutput)
}

func (o GetKubernetesClusterPoolInstanceOutput) RamMb() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesClusterPoolInstance) int { return v.RamMb }).(pulumi.IntOutput)
}

func (o GetKubernetesClusterPoolInstanceOutput) Size() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterPoolInstance) string { return v.Size }).(pulumi.StringOutput)
}

// The status of Kubernetes cluster
func (o GetKubernetesClusterPoolInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterPoolInstance) string { return v.Status }).(pulumi.StringOutput)
}

// A list of tags
func (o GetKubernetesClusterPoolInstanceOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKubernetesClusterPoolInstance) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetKubernetesClusterPoolInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterPoolInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterPoolInstance)(nil)).Elem()
}

func (o GetKubernetesClusterPoolInstanceArrayOutput) ToGetKubernetesClusterPoolInstanceArrayOutput() GetKubernetesClusterPoolInstanceArrayOutput {
	return o
}

func (o GetKubernetesClusterPoolInstanceArrayOutput) ToGetKubernetesClusterPoolInstanceArrayOutputWithContext(ctx context.Context) GetKubernetesClusterPoolInstanceArrayOutput {
	return o
}

func (o GetKubernetesClusterPoolInstanceArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterPoolInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterPoolInstance {
		return vs[0].([]GetKubernetesClusterPoolInstance)[vs[1].(int)]
	}).(GetKubernetesClusterPoolInstanceOutput)
}

type GetKubernetesVersionFilter struct {
	// Set to `true` to require that a field match all of the `values` instead of just one or more of them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure that all of the `values` are present in the list or set.
	All *bool `pulumi:"all"`
	// Filter versions by this key. This may be one of `default`, `label`, `type`, `version`.
	Key string `pulumi:"key"`
	// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as substrings to find within the string field.
	MatchBy *string `pulumi:"matchBy"`
	// Only retrieves `versions` which keys has value that matches one of the values provided here
	Values []string `pulumi:"values"`
}

// GetKubernetesVersionFilterInput is an input type that accepts GetKubernetesVersionFilterArgs and GetKubernetesVersionFilterOutput values.
// You can construct a concrete instance of `GetKubernetesVersionFilterInput` via:
//
//          GetKubernetesVersionFilterArgs{...}
type GetKubernetesVersionFilterInput interface {
	pulumi.Input

	ToGetKubernetesVersionFilterOutput() GetKubernetesVersionFilterOutput
	ToGetKubernetesVersionFilterOutputWithContext(context.Context) GetKubernetesVersionFilterOutput
}

type GetKubernetesVersionFilterArgs struct {
	// Set to `true` to require that a field match all of the `values` instead of just one or more of them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure that all of the `values` are present in the list or set.
	All pulumi.BoolPtrInput `pulumi:"all"`
	// Filter versions by this key. This may be one of `default`, `label`, `type`, `version`.
	Key pulumi.StringInput `pulumi:"key"`
	// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as substrings to find within the string field.
	MatchBy pulumi.StringPtrInput `pulumi:"matchBy"`
	// Only retrieves `versions` which keys has value that matches one of the values provided here
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetKubernetesVersionFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesVersionFilter)(nil)).Elem()
}

func (i GetKubernetesVersionFilterArgs) ToGetKubernetesVersionFilterOutput() GetKubernetesVersionFilterOutput {
	return i.ToGetKubernetesVersionFilterOutputWithContext(context.Background())
}

func (i GetKubernetesVersionFilterArgs) ToGetKubernetesVersionFilterOutputWithContext(ctx context.Context) GetKubernetesVersionFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesVersionFilterOutput)
}

// GetKubernetesVersionFilterArrayInput is an input type that accepts GetKubernetesVersionFilterArray and GetKubernetesVersionFilterArrayOutput values.
// You can construct a concrete instance of `GetKubernetesVersionFilterArrayInput` via:
//
//          GetKubernetesVersionFilterArray{ GetKubernetesVersionFilterArgs{...} }
type GetKubernetesVersionFilterArrayInput interface {
	pulumi.Input

	ToGetKubernetesVersionFilterArrayOutput() GetKubernetesVersionFilterArrayOutput
	ToGetKubernetesVersionFilterArrayOutputWithContext(context.Context) GetKubernetesVersionFilterArrayOutput
}

type GetKubernetesVersionFilterArray []GetKubernetesVersionFilterInput

func (GetKubernetesVersionFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesVersionFilter)(nil)).Elem()
}

func (i GetKubernetesVersionFilterArray) ToGetKubernetesVersionFilterArrayOutput() GetKubernetesVersionFilterArrayOutput {
	return i.ToGetKubernetesVersionFilterArrayOutputWithContext(context.Background())
}

func (i GetKubernetesVersionFilterArray) ToGetKubernetesVersionFilterArrayOutputWithContext(ctx context.Context) GetKubernetesVersionFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesVersionFilterArrayOutput)
}

type GetKubernetesVersionFilterOutput struct{ *pulumi.OutputState }

func (GetKubernetesVersionFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesVersionFilter)(nil)).Elem()
}

func (o GetKubernetesVersionFilterOutput) ToGetKubernetesVersionFilterOutput() GetKubernetesVersionFilterOutput {
	return o
}

func (o GetKubernetesVersionFilterOutput) ToGetKubernetesVersionFilterOutputWithContext(ctx context.Context) GetKubernetesVersionFilterOutput {
	return o
}

// Set to `true` to require that a field match all of the `values` instead of just one or more of them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure that all of the `values` are present in the list or set.
func (o GetKubernetesVersionFilterOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetKubernetesVersionFilter) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// Filter versions by this key. This may be one of `default`, `label`, `type`, `version`.
func (o GetKubernetesVersionFilterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesVersionFilter) string { return v.Key }).(pulumi.StringOutput)
}

// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as substrings to find within the string field.
func (o GetKubernetesVersionFilterOutput) MatchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKubernetesVersionFilter) *string { return v.MatchBy }).(pulumi.StringPtrOutput)
}

// Only retrieves `versions` which keys has value that matches one of the values provided here
func (o GetKubernetesVersionFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKubernetesVersionFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetKubernetesVersionFilterArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesVersionFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesVersionFilter)(nil)).Elem()
}

func (o GetKubernetesVersionFilterArrayOutput) ToGetKubernetesVersionFilterArrayOutput() GetKubernetesVersionFilterArrayOutput {
	return o
}

func (o GetKubernetesVersionFilterArrayOutput) ToGetKubernetesVersionFilterArrayOutputWithContext(ctx context.Context) GetKubernetesVersionFilterArrayOutput {
	return o
}

func (o GetKubernetesVersionFilterArrayOutput) Index(i pulumi.IntInput) GetKubernetesVersionFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesVersionFilter {
		return vs[0].([]GetKubernetesVersionFilter)[vs[1].(int)]
	}).(GetKubernetesVersionFilterOutput)
}

type GetKubernetesVersionSort struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction *string `pulumi:"direction"`
	// Sort versions by this key. This may be one of `default`, `label`, `type`, `version`.
	Key string `pulumi:"key"`
}

// GetKubernetesVersionSortInput is an input type that accepts GetKubernetesVersionSortArgs and GetKubernetesVersionSortOutput values.
// You can construct a concrete instance of `GetKubernetesVersionSortInput` via:
//
//          GetKubernetesVersionSortArgs{...}
type GetKubernetesVersionSortInput interface {
	pulumi.Input

	ToGetKubernetesVersionSortOutput() GetKubernetesVersionSortOutput
	ToGetKubernetesVersionSortOutputWithContext(context.Context) GetKubernetesVersionSortOutput
}

type GetKubernetesVersionSortArgs struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Sort versions by this key. This may be one of `default`, `label`, `type`, `version`.
	Key pulumi.StringInput `pulumi:"key"`
}

func (GetKubernetesVersionSortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesVersionSort)(nil)).Elem()
}

func (i GetKubernetesVersionSortArgs) ToGetKubernetesVersionSortOutput() GetKubernetesVersionSortOutput {
	return i.ToGetKubernetesVersionSortOutputWithContext(context.Background())
}

func (i GetKubernetesVersionSortArgs) ToGetKubernetesVersionSortOutputWithContext(ctx context.Context) GetKubernetesVersionSortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesVersionSortOutput)
}

// GetKubernetesVersionSortArrayInput is an input type that accepts GetKubernetesVersionSortArray and GetKubernetesVersionSortArrayOutput values.
// You can construct a concrete instance of `GetKubernetesVersionSortArrayInput` via:
//
//          GetKubernetesVersionSortArray{ GetKubernetesVersionSortArgs{...} }
type GetKubernetesVersionSortArrayInput interface {
	pulumi.Input

	ToGetKubernetesVersionSortArrayOutput() GetKubernetesVersionSortArrayOutput
	ToGetKubernetesVersionSortArrayOutputWithContext(context.Context) GetKubernetesVersionSortArrayOutput
}

type GetKubernetesVersionSortArray []GetKubernetesVersionSortInput

func (GetKubernetesVersionSortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesVersionSort)(nil)).Elem()
}

func (i GetKubernetesVersionSortArray) ToGetKubernetesVersionSortArrayOutput() GetKubernetesVersionSortArrayOutput {
	return i.ToGetKubernetesVersionSortArrayOutputWithContext(context.Background())
}

func (i GetKubernetesVersionSortArray) ToGetKubernetesVersionSortArrayOutputWithContext(ctx context.Context) GetKubernetesVersionSortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesVersionSortArrayOutput)
}

type GetKubernetesVersionSortOutput struct{ *pulumi.OutputState }

func (GetKubernetesVersionSortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesVersionSort)(nil)).Elem()
}

func (o GetKubernetesVersionSortOutput) ToGetKubernetesVersionSortOutput() GetKubernetesVersionSortOutput {
	return o
}

func (o GetKubernetesVersionSortOutput) ToGetKubernetesVersionSortOutputWithContext(ctx context.Context) GetKubernetesVersionSortOutput {
	return o
}

// The sort direction. This may be either `asc` or `desc`.
func (o GetKubernetesVersionSortOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKubernetesVersionSort) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Sort versions by this key. This may be one of `default`, `label`, `type`, `version`.
func (o GetKubernetesVersionSortOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesVersionSort) string { return v.Key }).(pulumi.StringOutput)
}

type GetKubernetesVersionSortArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesVersionSortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesVersionSort)(nil)).Elem()
}

func (o GetKubernetesVersionSortArrayOutput) ToGetKubernetesVersionSortArrayOutput() GetKubernetesVersionSortArrayOutput {
	return o
}

func (o GetKubernetesVersionSortArrayOutput) ToGetKubernetesVersionSortArrayOutputWithContext(ctx context.Context) GetKubernetesVersionSortArrayOutput {
	return o
}

func (o GetKubernetesVersionSortArrayOutput) Index(i pulumi.IntInput) GetKubernetesVersionSortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesVersionSort {
		return vs[0].([]GetKubernetesVersionSort)[vs[1].(int)]
	}).(GetKubernetesVersionSortOutput)
}

type GetKubernetesVersionVersion struct {
	Default bool   `pulumi:"default"`
	Label   string `pulumi:"label"`
	Type    string `pulumi:"type"`
	Version string `pulumi:"version"`
}

// GetKubernetesVersionVersionInput is an input type that accepts GetKubernetesVersionVersionArgs and GetKubernetesVersionVersionOutput values.
// You can construct a concrete instance of `GetKubernetesVersionVersionInput` via:
//
//          GetKubernetesVersionVersionArgs{...}
type GetKubernetesVersionVersionInput interface {
	pulumi.Input

	ToGetKubernetesVersionVersionOutput() GetKubernetesVersionVersionOutput
	ToGetKubernetesVersionVersionOutputWithContext(context.Context) GetKubernetesVersionVersionOutput
}

type GetKubernetesVersionVersionArgs struct {
	Default pulumi.BoolInput   `pulumi:"default"`
	Label   pulumi.StringInput `pulumi:"label"`
	Type    pulumi.StringInput `pulumi:"type"`
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetKubernetesVersionVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesVersionVersion)(nil)).Elem()
}

func (i GetKubernetesVersionVersionArgs) ToGetKubernetesVersionVersionOutput() GetKubernetesVersionVersionOutput {
	return i.ToGetKubernetesVersionVersionOutputWithContext(context.Background())
}

func (i GetKubernetesVersionVersionArgs) ToGetKubernetesVersionVersionOutputWithContext(ctx context.Context) GetKubernetesVersionVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesVersionVersionOutput)
}

// GetKubernetesVersionVersionArrayInput is an input type that accepts GetKubernetesVersionVersionArray and GetKubernetesVersionVersionArrayOutput values.
// You can construct a concrete instance of `GetKubernetesVersionVersionArrayInput` via:
//
//          GetKubernetesVersionVersionArray{ GetKubernetesVersionVersionArgs{...} }
type GetKubernetesVersionVersionArrayInput interface {
	pulumi.Input

	ToGetKubernetesVersionVersionArrayOutput() GetKubernetesVersionVersionArrayOutput
	ToGetKubernetesVersionVersionArrayOutputWithContext(context.Context) GetKubernetesVersionVersionArrayOutput
}

type GetKubernetesVersionVersionArray []GetKubernetesVersionVersionInput

func (GetKubernetesVersionVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesVersionVersion)(nil)).Elem()
}

func (i GetKubernetesVersionVersionArray) ToGetKubernetesVersionVersionArrayOutput() GetKubernetesVersionVersionArrayOutput {
	return i.ToGetKubernetesVersionVersionArrayOutputWithContext(context.Background())
}

func (i GetKubernetesVersionVersionArray) ToGetKubernetesVersionVersionArrayOutputWithContext(ctx context.Context) GetKubernetesVersionVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesVersionVersionArrayOutput)
}

type GetKubernetesVersionVersionOutput struct{ *pulumi.OutputState }

func (GetKubernetesVersionVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesVersionVersion)(nil)).Elem()
}

func (o GetKubernetesVersionVersionOutput) ToGetKubernetesVersionVersionOutput() GetKubernetesVersionVersionOutput {
	return o
}

func (o GetKubernetesVersionVersionOutput) ToGetKubernetesVersionVersionOutputWithContext(ctx context.Context) GetKubernetesVersionVersionOutput {
	return o
}

func (o GetKubernetesVersionVersionOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesVersionVersion) bool { return v.Default }).(pulumi.BoolOutput)
}

func (o GetKubernetesVersionVersionOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesVersionVersion) string { return v.Label }).(pulumi.StringOutput)
}

func (o GetKubernetesVersionVersionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesVersionVersion) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetKubernetesVersionVersionOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesVersionVersion) string { return v.Version }).(pulumi.StringOutput)
}

type GetKubernetesVersionVersionArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesVersionVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesVersionVersion)(nil)).Elem()
}

func (o GetKubernetesVersionVersionArrayOutput) ToGetKubernetesVersionVersionArrayOutput() GetKubernetesVersionVersionArrayOutput {
	return o
}

func (o GetKubernetesVersionVersionArrayOutput) ToGetKubernetesVersionVersionArrayOutputWithContext(ctx context.Context) GetKubernetesVersionVersionArrayOutput {
	return o
}

func (o GetKubernetesVersionVersionArrayOutput) Index(i pulumi.IntInput) GetKubernetesVersionVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesVersionVersion {
		return vs[0].([]GetKubernetesVersionVersion)[vs[1].(int)]
	}).(GetKubernetesVersionVersionOutput)
}

type GetRegionFilter struct {
	// Set to `true` to require that a field match all of the `values` instead of just one or more of them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure that all of the `values` are present in the list or set.
	All *bool `pulumi:"all"`
	// Filter regions by this key. This may be one of `code`, `country`, `default`, `name`.
	Key string `pulumi:"key"`
	// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as substrings to find within the string field.
	MatchBy *string `pulumi:"matchBy"`
	// Only retrieves `regions` which keys has value that matches one of the values provided here
	Values []string `pulumi:"values"`
}

// GetRegionFilterInput is an input type that accepts GetRegionFilterArgs and GetRegionFilterOutput values.
// You can construct a concrete instance of `GetRegionFilterInput` via:
//
//          GetRegionFilterArgs{...}
type GetRegionFilterInput interface {
	pulumi.Input

	ToGetRegionFilterOutput() GetRegionFilterOutput
	ToGetRegionFilterOutputWithContext(context.Context) GetRegionFilterOutput
}

type GetRegionFilterArgs struct {
	// Set to `true` to require that a field match all of the `values` instead of just one or more of them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure that all of the `values` are present in the list or set.
	All pulumi.BoolPtrInput `pulumi:"all"`
	// Filter regions by this key. This may be one of `code`, `country`, `default`, `name`.
	Key pulumi.StringInput `pulumi:"key"`
	// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as substrings to find within the string field.
	MatchBy pulumi.StringPtrInput `pulumi:"matchBy"`
	// Only retrieves `regions` which keys has value that matches one of the values provided here
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetRegionFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionFilter)(nil)).Elem()
}

func (i GetRegionFilterArgs) ToGetRegionFilterOutput() GetRegionFilterOutput {
	return i.ToGetRegionFilterOutputWithContext(context.Background())
}

func (i GetRegionFilterArgs) ToGetRegionFilterOutputWithContext(ctx context.Context) GetRegionFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionFilterOutput)
}

// GetRegionFilterArrayInput is an input type that accepts GetRegionFilterArray and GetRegionFilterArrayOutput values.
// You can construct a concrete instance of `GetRegionFilterArrayInput` via:
//
//          GetRegionFilterArray{ GetRegionFilterArgs{...} }
type GetRegionFilterArrayInput interface {
	pulumi.Input

	ToGetRegionFilterArrayOutput() GetRegionFilterArrayOutput
	ToGetRegionFilterArrayOutputWithContext(context.Context) GetRegionFilterArrayOutput
}

type GetRegionFilterArray []GetRegionFilterInput

func (GetRegionFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionFilter)(nil)).Elem()
}

func (i GetRegionFilterArray) ToGetRegionFilterArrayOutput() GetRegionFilterArrayOutput {
	return i.ToGetRegionFilterArrayOutputWithContext(context.Background())
}

func (i GetRegionFilterArray) ToGetRegionFilterArrayOutputWithContext(ctx context.Context) GetRegionFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionFilterArrayOutput)
}

type GetRegionFilterOutput struct{ *pulumi.OutputState }

func (GetRegionFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionFilter)(nil)).Elem()
}

func (o GetRegionFilterOutput) ToGetRegionFilterOutput() GetRegionFilterOutput {
	return o
}

func (o GetRegionFilterOutput) ToGetRegionFilterOutputWithContext(ctx context.Context) GetRegionFilterOutput {
	return o
}

// Set to `true` to require that a field match all of the `values` instead of just one or more of them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure that all of the `values` are present in the list or set.
func (o GetRegionFilterOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetRegionFilter) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// Filter regions by this key. This may be one of `code`, `country`, `default`, `name`.
func (o GetRegionFilterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionFilter) string { return v.Key }).(pulumi.StringOutput)
}

// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as substrings to find within the string field.
func (o GetRegionFilterOutput) MatchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRegionFilter) *string { return v.MatchBy }).(pulumi.StringPtrOutput)
}

// Only retrieves `regions` which keys has value that matches one of the values provided here
func (o GetRegionFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRegionFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetRegionFilterArrayOutput struct{ *pulumi.OutputState }

func (GetRegionFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionFilter)(nil)).Elem()
}

func (o GetRegionFilterArrayOutput) ToGetRegionFilterArrayOutput() GetRegionFilterArrayOutput {
	return o
}

func (o GetRegionFilterArrayOutput) ToGetRegionFilterArrayOutputWithContext(ctx context.Context) GetRegionFilterArrayOutput {
	return o
}

func (o GetRegionFilterArrayOutput) Index(i pulumi.IntInput) GetRegionFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRegionFilter {
		return vs[0].([]GetRegionFilter)[vs[1].(int)]
	}).(GetRegionFilterOutput)
}

type GetRegionRegion struct {
	Code    string `pulumi:"code"`
	Country string `pulumi:"country"`
	Default bool   `pulumi:"default"`
	Name    string `pulumi:"name"`
}

// GetRegionRegionInput is an input type that accepts GetRegionRegionArgs and GetRegionRegionOutput values.
// You can construct a concrete instance of `GetRegionRegionInput` via:
//
//          GetRegionRegionArgs{...}
type GetRegionRegionInput interface {
	pulumi.Input

	ToGetRegionRegionOutput() GetRegionRegionOutput
	ToGetRegionRegionOutputWithContext(context.Context) GetRegionRegionOutput
}

type GetRegionRegionArgs struct {
	Code    pulumi.StringInput `pulumi:"code"`
	Country pulumi.StringInput `pulumi:"country"`
	Default pulumi.BoolInput   `pulumi:"default"`
	Name    pulumi.StringInput `pulumi:"name"`
}

func (GetRegionRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionRegion)(nil)).Elem()
}

func (i GetRegionRegionArgs) ToGetRegionRegionOutput() GetRegionRegionOutput {
	return i.ToGetRegionRegionOutputWithContext(context.Background())
}

func (i GetRegionRegionArgs) ToGetRegionRegionOutputWithContext(ctx context.Context) GetRegionRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionRegionOutput)
}

// GetRegionRegionArrayInput is an input type that accepts GetRegionRegionArray and GetRegionRegionArrayOutput values.
// You can construct a concrete instance of `GetRegionRegionArrayInput` via:
//
//          GetRegionRegionArray{ GetRegionRegionArgs{...} }
type GetRegionRegionArrayInput interface {
	pulumi.Input

	ToGetRegionRegionArrayOutput() GetRegionRegionArrayOutput
	ToGetRegionRegionArrayOutputWithContext(context.Context) GetRegionRegionArrayOutput
}

type GetRegionRegionArray []GetRegionRegionInput

func (GetRegionRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionRegion)(nil)).Elem()
}

func (i GetRegionRegionArray) ToGetRegionRegionArrayOutput() GetRegionRegionArrayOutput {
	return i.ToGetRegionRegionArrayOutputWithContext(context.Background())
}

func (i GetRegionRegionArray) ToGetRegionRegionArrayOutputWithContext(ctx context.Context) GetRegionRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionRegionArrayOutput)
}

type GetRegionRegionOutput struct{ *pulumi.OutputState }

func (GetRegionRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionRegion)(nil)).Elem()
}

func (o GetRegionRegionOutput) ToGetRegionRegionOutput() GetRegionRegionOutput {
	return o
}

func (o GetRegionRegionOutput) ToGetRegionRegionOutputWithContext(ctx context.Context) GetRegionRegionOutput {
	return o
}

func (o GetRegionRegionOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionRegion) string { return v.Code }).(pulumi.StringOutput)
}

func (o GetRegionRegionOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionRegion) string { return v.Country }).(pulumi.StringOutput)
}

func (o GetRegionRegionOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRegionRegion) bool { return v.Default }).(pulumi.BoolOutput)
}

func (o GetRegionRegionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionRegion) string { return v.Name }).(pulumi.StringOutput)
}

type GetRegionRegionArrayOutput struct{ *pulumi.OutputState }

func (GetRegionRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionRegion)(nil)).Elem()
}

func (o GetRegionRegionArrayOutput) ToGetRegionRegionArrayOutput() GetRegionRegionArrayOutput {
	return o
}

func (o GetRegionRegionArrayOutput) ToGetRegionRegionArrayOutputWithContext(ctx context.Context) GetRegionRegionArrayOutput {
	return o
}

func (o GetRegionRegionArrayOutput) Index(i pulumi.IntInput) GetRegionRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRegionRegion {
		return vs[0].([]GetRegionRegion)[vs[1].(int)]
	}).(GetRegionRegionOutput)
}

type GetRegionSort struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction *string `pulumi:"direction"`
	// Sort regions by this key. This may be one of `code`, `country`, `default`, `name`.
	Key string `pulumi:"key"`
}

// GetRegionSortInput is an input type that accepts GetRegionSortArgs and GetRegionSortOutput values.
// You can construct a concrete instance of `GetRegionSortInput` via:
//
//          GetRegionSortArgs{...}
type GetRegionSortInput interface {
	pulumi.Input

	ToGetRegionSortOutput() GetRegionSortOutput
	ToGetRegionSortOutputWithContext(context.Context) GetRegionSortOutput
}

type GetRegionSortArgs struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Sort regions by this key. This may be one of `code`, `country`, `default`, `name`.
	Key pulumi.StringInput `pulumi:"key"`
}

func (GetRegionSortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionSort)(nil)).Elem()
}

func (i GetRegionSortArgs) ToGetRegionSortOutput() GetRegionSortOutput {
	return i.ToGetRegionSortOutputWithContext(context.Background())
}

func (i GetRegionSortArgs) ToGetRegionSortOutputWithContext(ctx context.Context) GetRegionSortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionSortOutput)
}

// GetRegionSortArrayInput is an input type that accepts GetRegionSortArray and GetRegionSortArrayOutput values.
// You can construct a concrete instance of `GetRegionSortArrayInput` via:
//
//          GetRegionSortArray{ GetRegionSortArgs{...} }
type GetRegionSortArrayInput interface {
	pulumi.Input

	ToGetRegionSortArrayOutput() GetRegionSortArrayOutput
	ToGetRegionSortArrayOutputWithContext(context.Context) GetRegionSortArrayOutput
}

type GetRegionSortArray []GetRegionSortInput

func (GetRegionSortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionSort)(nil)).Elem()
}

func (i GetRegionSortArray) ToGetRegionSortArrayOutput() GetRegionSortArrayOutput {
	return i.ToGetRegionSortArrayOutputWithContext(context.Background())
}

func (i GetRegionSortArray) ToGetRegionSortArrayOutputWithContext(ctx context.Context) GetRegionSortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionSortArrayOutput)
}

type GetRegionSortOutput struct{ *pulumi.OutputState }

func (GetRegionSortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionSort)(nil)).Elem()
}

func (o GetRegionSortOutput) ToGetRegionSortOutput() GetRegionSortOutput {
	return o
}

func (o GetRegionSortOutput) ToGetRegionSortOutputWithContext(ctx context.Context) GetRegionSortOutput {
	return o
}

// The sort direction. This may be either `asc` or `desc`.
func (o GetRegionSortOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRegionSort) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Sort regions by this key. This may be one of `code`, `country`, `default`, `name`.
func (o GetRegionSortOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionSort) string { return v.Key }).(pulumi.StringOutput)
}

type GetRegionSortArrayOutput struct{ *pulumi.OutputState }

func (GetRegionSortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionSort)(nil)).Elem()
}

func (o GetRegionSortArrayOutput) ToGetRegionSortArrayOutput() GetRegionSortArrayOutput {
	return o
}

func (o GetRegionSortArrayOutput) ToGetRegionSortArrayOutputWithContext(ctx context.Context) GetRegionSortArrayOutput {
	return o
}

func (o GetRegionSortArrayOutput) Index(i pulumi.IntInput) GetRegionSortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRegionSort {
		return vs[0].([]GetRegionSort)[vs[1].(int)]
	}).(GetRegionSortOutput)
}

type GetSizeFilter struct {
	// Set to `true` to require that a field match all of the `values` instead of just one or more of them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure that all of the `values` are present in the list or set.
	All *bool `pulumi:"all"`
	// Filter sizes by this key. This may be one of `cpu`, `description`, `disk`, `name`, `ram`, `selectable`, `type`.
	Key string `pulumi:"key"`
	// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as substrings to find within the string field.
	MatchBy *string `pulumi:"matchBy"`
	// Only retrieves `sizes` which keys has value that matches one of the values provided here
	Values []string `pulumi:"values"`
}

// GetSizeFilterInput is an input type that accepts GetSizeFilterArgs and GetSizeFilterOutput values.
// You can construct a concrete instance of `GetSizeFilterInput` via:
//
//          GetSizeFilterArgs{...}
type GetSizeFilterInput interface {
	pulumi.Input

	ToGetSizeFilterOutput() GetSizeFilterOutput
	ToGetSizeFilterOutputWithContext(context.Context) GetSizeFilterOutput
}

type GetSizeFilterArgs struct {
	// Set to `true` to require that a field match all of the `values` instead of just one or more of them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure that all of the `values` are present in the list or set.
	All pulumi.BoolPtrInput `pulumi:"all"`
	// Filter sizes by this key. This may be one of `cpu`, `description`, `disk`, `name`, `ram`, `selectable`, `type`.
	Key pulumi.StringInput `pulumi:"key"`
	// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as substrings to find within the string field.
	MatchBy pulumi.StringPtrInput `pulumi:"matchBy"`
	// Only retrieves `sizes` which keys has value that matches one of the values provided here
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSizeFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSizeFilter)(nil)).Elem()
}

func (i GetSizeFilterArgs) ToGetSizeFilterOutput() GetSizeFilterOutput {
	return i.ToGetSizeFilterOutputWithContext(context.Background())
}

func (i GetSizeFilterArgs) ToGetSizeFilterOutputWithContext(ctx context.Context) GetSizeFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSizeFilterOutput)
}

// GetSizeFilterArrayInput is an input type that accepts GetSizeFilterArray and GetSizeFilterArrayOutput values.
// You can construct a concrete instance of `GetSizeFilterArrayInput` via:
//
//          GetSizeFilterArray{ GetSizeFilterArgs{...} }
type GetSizeFilterArrayInput interface {
	pulumi.Input

	ToGetSizeFilterArrayOutput() GetSizeFilterArrayOutput
	ToGetSizeFilterArrayOutputWithContext(context.Context) GetSizeFilterArrayOutput
}

type GetSizeFilterArray []GetSizeFilterInput

func (GetSizeFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSizeFilter)(nil)).Elem()
}

func (i GetSizeFilterArray) ToGetSizeFilterArrayOutput() GetSizeFilterArrayOutput {
	return i.ToGetSizeFilterArrayOutputWithContext(context.Background())
}

func (i GetSizeFilterArray) ToGetSizeFilterArrayOutputWithContext(ctx context.Context) GetSizeFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSizeFilterArrayOutput)
}

type GetSizeFilterOutput struct{ *pulumi.OutputState }

func (GetSizeFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSizeFilter)(nil)).Elem()
}

func (o GetSizeFilterOutput) ToGetSizeFilterOutput() GetSizeFilterOutput {
	return o
}

func (o GetSizeFilterOutput) ToGetSizeFilterOutputWithContext(ctx context.Context) GetSizeFilterOutput {
	return o
}

// Set to `true` to require that a field match all of the `values` instead of just one or more of them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure that all of the `values` are present in the list or set.
func (o GetSizeFilterOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSizeFilter) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// Filter sizes by this key. This may be one of `cpu`, `description`, `disk`, `name`, `ram`, `selectable`, `type`.
func (o GetSizeFilterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSizeFilter) string { return v.Key }).(pulumi.StringOutput)
}

// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as substrings to find within the string field.
func (o GetSizeFilterOutput) MatchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSizeFilter) *string { return v.MatchBy }).(pulumi.StringPtrOutput)
}

// Only retrieves `sizes` which keys has value that matches one of the values provided here
func (o GetSizeFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSizeFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSizeFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSizeFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSizeFilter)(nil)).Elem()
}

func (o GetSizeFilterArrayOutput) ToGetSizeFilterArrayOutput() GetSizeFilterArrayOutput {
	return o
}

func (o GetSizeFilterArrayOutput) ToGetSizeFilterArrayOutputWithContext(ctx context.Context) GetSizeFilterArrayOutput {
	return o
}

func (o GetSizeFilterArrayOutput) Index(i pulumi.IntInput) GetSizeFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSizeFilter {
		return vs[0].([]GetSizeFilter)[vs[1].(int)]
	}).(GetSizeFilterOutput)
}

type GetSizeSize struct {
	Cpu         int    `pulumi:"cpu"`
	Description string `pulumi:"description"`
	Disk        int    `pulumi:"disk"`
	Name        string `pulumi:"name"`
	Ram         int    `pulumi:"ram"`
	Selectable  bool   `pulumi:"selectable"`
	Type        string `pulumi:"type"`
}

// GetSizeSizeInput is an input type that accepts GetSizeSizeArgs and GetSizeSizeOutput values.
// You can construct a concrete instance of `GetSizeSizeInput` via:
//
//          GetSizeSizeArgs{...}
type GetSizeSizeInput interface {
	pulumi.Input

	ToGetSizeSizeOutput() GetSizeSizeOutput
	ToGetSizeSizeOutputWithContext(context.Context) GetSizeSizeOutput
}

type GetSizeSizeArgs struct {
	Cpu         pulumi.IntInput    `pulumi:"cpu"`
	Description pulumi.StringInput `pulumi:"description"`
	Disk        pulumi.IntInput    `pulumi:"disk"`
	Name        pulumi.StringInput `pulumi:"name"`
	Ram         pulumi.IntInput    `pulumi:"ram"`
	Selectable  pulumi.BoolInput   `pulumi:"selectable"`
	Type        pulumi.StringInput `pulumi:"type"`
}

func (GetSizeSizeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSizeSize)(nil)).Elem()
}

func (i GetSizeSizeArgs) ToGetSizeSizeOutput() GetSizeSizeOutput {
	return i.ToGetSizeSizeOutputWithContext(context.Background())
}

func (i GetSizeSizeArgs) ToGetSizeSizeOutputWithContext(ctx context.Context) GetSizeSizeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSizeSizeOutput)
}

// GetSizeSizeArrayInput is an input type that accepts GetSizeSizeArray and GetSizeSizeArrayOutput values.
// You can construct a concrete instance of `GetSizeSizeArrayInput` via:
//
//          GetSizeSizeArray{ GetSizeSizeArgs{...} }
type GetSizeSizeArrayInput interface {
	pulumi.Input

	ToGetSizeSizeArrayOutput() GetSizeSizeArrayOutput
	ToGetSizeSizeArrayOutputWithContext(context.Context) GetSizeSizeArrayOutput
}

type GetSizeSizeArray []GetSizeSizeInput

func (GetSizeSizeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSizeSize)(nil)).Elem()
}

func (i GetSizeSizeArray) ToGetSizeSizeArrayOutput() GetSizeSizeArrayOutput {
	return i.ToGetSizeSizeArrayOutputWithContext(context.Background())
}

func (i GetSizeSizeArray) ToGetSizeSizeArrayOutputWithContext(ctx context.Context) GetSizeSizeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSizeSizeArrayOutput)
}

type GetSizeSizeOutput struct{ *pulumi.OutputState }

func (GetSizeSizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSizeSize)(nil)).Elem()
}

func (o GetSizeSizeOutput) ToGetSizeSizeOutput() GetSizeSizeOutput {
	return o
}

func (o GetSizeSizeOutput) ToGetSizeSizeOutputWithContext(ctx context.Context) GetSizeSizeOutput {
	return o
}

func (o GetSizeSizeOutput) Cpu() pulumi.IntOutput {
	return o.ApplyT(func(v GetSizeSize) int { return v.Cpu }).(pulumi.IntOutput)
}

func (o GetSizeSizeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSizeSize) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetSizeSizeOutput) Disk() pulumi.IntOutput {
	return o.ApplyT(func(v GetSizeSize) int { return v.Disk }).(pulumi.IntOutput)
}

func (o GetSizeSizeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSizeSize) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSizeSizeOutput) Ram() pulumi.IntOutput {
	return o.ApplyT(func(v GetSizeSize) int { return v.Ram }).(pulumi.IntOutput)
}

func (o GetSizeSizeOutput) Selectable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSizeSize) bool { return v.Selectable }).(pulumi.BoolOutput)
}

func (o GetSizeSizeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetSizeSize) string { return v.Type }).(pulumi.StringOutput)
}

type GetSizeSizeArrayOutput struct{ *pulumi.OutputState }

func (GetSizeSizeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSizeSize)(nil)).Elem()
}

func (o GetSizeSizeArrayOutput) ToGetSizeSizeArrayOutput() GetSizeSizeArrayOutput {
	return o
}

func (o GetSizeSizeArrayOutput) ToGetSizeSizeArrayOutputWithContext(ctx context.Context) GetSizeSizeArrayOutput {
	return o
}

func (o GetSizeSizeArrayOutput) Index(i pulumi.IntInput) GetSizeSizeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSizeSize {
		return vs[0].([]GetSizeSize)[vs[1].(int)]
	}).(GetSizeSizeOutput)
}

type GetSizeSort struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction *string `pulumi:"direction"`
	// Sort sizes by this key. This may be one of `cpu`, `description`, `disk`, `name`, `ram`, `selectable`, `type`.
	Key string `pulumi:"key"`
}

// GetSizeSortInput is an input type that accepts GetSizeSortArgs and GetSizeSortOutput values.
// You can construct a concrete instance of `GetSizeSortInput` via:
//
//          GetSizeSortArgs{...}
type GetSizeSortInput interface {
	pulumi.Input

	ToGetSizeSortOutput() GetSizeSortOutput
	ToGetSizeSortOutputWithContext(context.Context) GetSizeSortOutput
}

type GetSizeSortArgs struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Sort sizes by this key. This may be one of `cpu`, `description`, `disk`, `name`, `ram`, `selectable`, `type`.
	Key pulumi.StringInput `pulumi:"key"`
}

func (GetSizeSortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSizeSort)(nil)).Elem()
}

func (i GetSizeSortArgs) ToGetSizeSortOutput() GetSizeSortOutput {
	return i.ToGetSizeSortOutputWithContext(context.Background())
}

func (i GetSizeSortArgs) ToGetSizeSortOutputWithContext(ctx context.Context) GetSizeSortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSizeSortOutput)
}

// GetSizeSortArrayInput is an input type that accepts GetSizeSortArray and GetSizeSortArrayOutput values.
// You can construct a concrete instance of `GetSizeSortArrayInput` via:
//
//          GetSizeSortArray{ GetSizeSortArgs{...} }
type GetSizeSortArrayInput interface {
	pulumi.Input

	ToGetSizeSortArrayOutput() GetSizeSortArrayOutput
	ToGetSizeSortArrayOutputWithContext(context.Context) GetSizeSortArrayOutput
}

type GetSizeSortArray []GetSizeSortInput

func (GetSizeSortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSizeSort)(nil)).Elem()
}

func (i GetSizeSortArray) ToGetSizeSortArrayOutput() GetSizeSortArrayOutput {
	return i.ToGetSizeSortArrayOutputWithContext(context.Background())
}

func (i GetSizeSortArray) ToGetSizeSortArrayOutputWithContext(ctx context.Context) GetSizeSortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSizeSortArrayOutput)
}

type GetSizeSortOutput struct{ *pulumi.OutputState }

func (GetSizeSortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSizeSort)(nil)).Elem()
}

func (o GetSizeSortOutput) ToGetSizeSortOutput() GetSizeSortOutput {
	return o
}

func (o GetSizeSortOutput) ToGetSizeSortOutputWithContext(ctx context.Context) GetSizeSortOutput {
	return o
}

// The sort direction. This may be either `asc` or `desc`.
func (o GetSizeSortOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSizeSort) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Sort sizes by this key. This may be one of `cpu`, `description`, `disk`, `name`, `ram`, `selectable`, `type`.
func (o GetSizeSortOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSizeSort) string { return v.Key }).(pulumi.StringOutput)
}

type GetSizeSortArrayOutput struct{ *pulumi.OutputState }

func (GetSizeSortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSizeSort)(nil)).Elem()
}

func (o GetSizeSortArrayOutput) ToGetSizeSortArrayOutput() GetSizeSortArrayOutput {
	return o
}

func (o GetSizeSortArrayOutput) ToGetSizeSortArrayOutputWithContext(ctx context.Context) GetSizeSortArrayOutput {
	return o
}

func (o GetSizeSortArrayOutput) Index(i pulumi.IntInput) GetSizeSortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSizeSort {
		return vs[0].([]GetSizeSort)[vs[1].(int)]
	}).(GetSizeSortOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterInstalledApplicationInput)(nil)).Elem(), KubernetesClusterInstalledApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterInstalledApplicationArrayInput)(nil)).Elem(), KubernetesClusterInstalledApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterInstanceInput)(nil)).Elem(), KubernetesClusterInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterInstanceArrayInput)(nil)).Elem(), KubernetesClusterInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterPoolInput)(nil)).Elem(), KubernetesClusterPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterPoolArrayInput)(nil)).Elem(), KubernetesClusterPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterPoolInstanceInput)(nil)).Elem(), KubernetesClusterPoolInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterPoolInstanceArrayInput)(nil)).Elem(), KubernetesClusterPoolInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDiskImageDiskimageInput)(nil)).Elem(), GetDiskImageDiskimageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDiskImageDiskimageArrayInput)(nil)).Elem(), GetDiskImageDiskimageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDiskImageFilterInput)(nil)).Elem(), GetDiskImageFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDiskImageFilterArrayInput)(nil)).Elem(), GetDiskImageFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDiskImageSortInput)(nil)).Elem(), GetDiskImageSortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDiskImageSortArrayInput)(nil)).Elem(), GetDiskImageSortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesFilterInput)(nil)).Elem(), GetInstancesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesFilterArrayInput)(nil)).Elem(), GetInstancesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceInput)(nil)).Elem(), GetInstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceArrayInput)(nil)).Elem(), GetInstancesInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesSizeFilterInput)(nil)).Elem(), GetInstancesSizeFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesSizeFilterArrayInput)(nil)).Elem(), GetInstancesSizeFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesSizeSizeInput)(nil)).Elem(), GetInstancesSizeSizeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesSizeSizeArrayInput)(nil)).Elem(), GetInstancesSizeSizeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesSizeSortInput)(nil)).Elem(), GetInstancesSizeSortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesSizeSortArrayInput)(nil)).Elem(), GetInstancesSizeSortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesSortInput)(nil)).Elem(), GetInstancesSortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesSortArrayInput)(nil)).Elem(), GetInstancesSortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterInstalledApplicationInput)(nil)).Elem(), GetKubernetesClusterInstalledApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterInstalledApplicationArrayInput)(nil)).Elem(), GetKubernetesClusterInstalledApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterInstanceInput)(nil)).Elem(), GetKubernetesClusterInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterInstanceArrayInput)(nil)).Elem(), GetKubernetesClusterInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterPoolInput)(nil)).Elem(), GetKubernetesClusterPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterPoolArrayInput)(nil)).Elem(), GetKubernetesClusterPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterPoolInstanceInput)(nil)).Elem(), GetKubernetesClusterPoolInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterPoolInstanceArrayInput)(nil)).Elem(), GetKubernetesClusterPoolInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesVersionFilterInput)(nil)).Elem(), GetKubernetesVersionFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesVersionFilterArrayInput)(nil)).Elem(), GetKubernetesVersionFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesVersionSortInput)(nil)).Elem(), GetKubernetesVersionSortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesVersionSortArrayInput)(nil)).Elem(), GetKubernetesVersionSortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesVersionVersionInput)(nil)).Elem(), GetKubernetesVersionVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesVersionVersionArrayInput)(nil)).Elem(), GetKubernetesVersionVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionFilterInput)(nil)).Elem(), GetRegionFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionFilterArrayInput)(nil)).Elem(), GetRegionFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionRegionInput)(nil)).Elem(), GetRegionRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionRegionArrayInput)(nil)).Elem(), GetRegionRegionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionSortInput)(nil)).Elem(), GetRegionSortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionSortArrayInput)(nil)).Elem(), GetRegionSortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSizeFilterInput)(nil)).Elem(), GetSizeFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSizeFilterArrayInput)(nil)).Elem(), GetSizeFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSizeSizeInput)(nil)).Elem(), GetSizeSizeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSizeSizeArrayInput)(nil)).Elem(), GetSizeSizeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSizeSortInput)(nil)).Elem(), GetSizeSortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSizeSortArrayInput)(nil)).Elem(), GetSizeSortArray{})
	pulumi.RegisterOutputType(KubernetesClusterInstalledApplicationOutput{})
	pulumi.RegisterOutputType(KubernetesClusterInstalledApplicationArrayOutput{})
	pulumi.RegisterOutputType(KubernetesClusterInstanceOutput{})
	pulumi.RegisterOutputType(KubernetesClusterInstanceArrayOutput{})
	pulumi.RegisterOutputType(KubernetesClusterPoolOutput{})
	pulumi.RegisterOutputType(KubernetesClusterPoolArrayOutput{})
	pulumi.RegisterOutputType(KubernetesClusterPoolInstanceOutput{})
	pulumi.RegisterOutputType(KubernetesClusterPoolInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetDiskImageDiskimageOutput{})
	pulumi.RegisterOutputType(GetDiskImageDiskimageArrayOutput{})
	pulumi.RegisterOutputType(GetDiskImageFilterOutput{})
	pulumi.RegisterOutputType(GetDiskImageFilterArrayOutput{})
	pulumi.RegisterOutputType(GetDiskImageSortOutput{})
	pulumi.RegisterOutputType(GetDiskImageSortArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesFilterOutput{})
	pulumi.RegisterOutputType(GetInstancesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesSizeFilterOutput{})
	pulumi.RegisterOutputType(GetInstancesSizeFilterArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesSizeSizeOutput{})
	pulumi.RegisterOutputType(GetInstancesSizeSizeArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesSizeSortOutput{})
	pulumi.RegisterOutputType(GetInstancesSizeSortArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesSortOutput{})
	pulumi.RegisterOutputType(GetInstancesSortArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterInstalledApplicationOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterInstalledApplicationArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterInstanceOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterPoolOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterPoolArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterPoolInstanceOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterPoolInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesVersionFilterOutput{})
	pulumi.RegisterOutputType(GetKubernetesVersionFilterArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesVersionSortOutput{})
	pulumi.RegisterOutputType(GetKubernetesVersionSortArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesVersionVersionOutput{})
	pulumi.RegisterOutputType(GetKubernetesVersionVersionArrayOutput{})
	pulumi.RegisterOutputType(GetRegionFilterOutput{})
	pulumi.RegisterOutputType(GetRegionFilterArrayOutput{})
	pulumi.RegisterOutputType(GetRegionRegionOutput{})
	pulumi.RegisterOutputType(GetRegionRegionArrayOutput{})
	pulumi.RegisterOutputType(GetRegionSortOutput{})
	pulumi.RegisterOutputType(GetRegionSortArrayOutput{})
	pulumi.RegisterOutputType(GetSizeFilterOutput{})
	pulumi.RegisterOutputType(GetSizeFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSizeSizeOutput{})
	pulumi.RegisterOutputType(GetSizeSizeArrayOutput{})
	pulumi.RegisterOutputType(GetSizeSortOutput{})
	pulumi.RegisterOutputType(GetSizeSortArrayOutput{})
}
