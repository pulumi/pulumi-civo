// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package civo

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Template struct {
	pulumi.CustomResourceState

	// Commonly referred to as 'user-data', this is a customisation script that is run afterthe instance is first booted. We
	// recommend using cloud-config as it's a great distribution-agnosticway of configuring cloud servers. If you put
	// $INITIAL_USER in your script, this will automaticallybe replaced by the initial user chosen when creating the instance,
	// $INITIAL_PASSWORD will bereplaced with the random password generated by the system, $HOSTNAME is the fully
	// qualifieddomain name of the instance and $SSH_KEY will be the content of the SSH public key.(this is technically
	// optional, but you won't really be able to use instances without it -see our learn guide on templates for more
	// information)
	CloudConfig pulumi.StringPtrOutput `pulumi:"cloudConfig"`
	// This is a unqiue, alphanumerical, short, human readable code for the template (required).
	Code pulumi.StringOutput `pulumi:"code"`
	// The default username to suggest that the user creates (optional: defaults to civo).
	DefaultUsername pulumi.StringPtrOutput `pulumi:"defaultUsername"`
	// A multi-line description of the template, in Markdown format (optional).
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// This is the Image ID of any default template or the ID of another template,either owned by you or global (optional; but
	// must be specified if no volume_id is specified).
	ImageId pulumi.StringPtrOutput `pulumi:"imageId"`
	// This is a short human readable name for the template (optional).
	Name pulumi.StringOutput `pulumi:"name"`
	// A one line description of the template (optional)
	ShortDescription pulumi.StringPtrOutput `pulumi:"shortDescription"`
	// This is the ID of a bootable volume, either owned by you or global(optional; but must be specified if no image_id is
	// specified).
	VolumeId pulumi.StringPtrOutput `pulumi:"volumeId"`
}

// NewTemplate registers a new resource with the given unique name, arguments, and options.
func NewTemplate(ctx *pulumi.Context,
	name string, args *TemplateArgs, opts ...pulumi.ResourceOption) (*Template, error) {
	if args == nil || args.Code == nil {
		return nil, errors.New("missing required argument 'Code'")
	}
	if args == nil {
		args = &TemplateArgs{}
	}
	var resource Template
	err := ctx.RegisterResource("civo:index/template:Template", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTemplate gets an existing Template resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TemplateState, opts ...pulumi.ResourceOption) (*Template, error) {
	var resource Template
	err := ctx.ReadResource("civo:index/template:Template", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Template resources.
type templateState struct {
	// Commonly referred to as 'user-data', this is a customisation script that is run afterthe instance is first booted. We
	// recommend using cloud-config as it's a great distribution-agnosticway of configuring cloud servers. If you put
	// $INITIAL_USER in your script, this will automaticallybe replaced by the initial user chosen when creating the instance,
	// $INITIAL_PASSWORD will bereplaced with the random password generated by the system, $HOSTNAME is the fully
	// qualifieddomain name of the instance and $SSH_KEY will be the content of the SSH public key.(this is technically
	// optional, but you won't really be able to use instances without it -see our learn guide on templates for more
	// information)
	CloudConfig *string `pulumi:"cloudConfig"`
	// This is a unqiue, alphanumerical, short, human readable code for the template (required).
	Code *string `pulumi:"code"`
	// The default username to suggest that the user creates (optional: defaults to civo).
	DefaultUsername *string `pulumi:"defaultUsername"`
	// A multi-line description of the template, in Markdown format (optional).
	Description *string `pulumi:"description"`
	// This is the Image ID of any default template or the ID of another template,either owned by you or global (optional; but
	// must be specified if no volume_id is specified).
	ImageId *string `pulumi:"imageId"`
	// This is a short human readable name for the template (optional).
	Name *string `pulumi:"name"`
	// A one line description of the template (optional)
	ShortDescription *string `pulumi:"shortDescription"`
	// This is the ID of a bootable volume, either owned by you or global(optional; but must be specified if no image_id is
	// specified).
	VolumeId *string `pulumi:"volumeId"`
}

type TemplateState struct {
	// Commonly referred to as 'user-data', this is a customisation script that is run afterthe instance is first booted. We
	// recommend using cloud-config as it's a great distribution-agnosticway of configuring cloud servers. If you put
	// $INITIAL_USER in your script, this will automaticallybe replaced by the initial user chosen when creating the instance,
	// $INITIAL_PASSWORD will bereplaced with the random password generated by the system, $HOSTNAME is the fully
	// qualifieddomain name of the instance and $SSH_KEY will be the content of the SSH public key.(this is technically
	// optional, but you won't really be able to use instances without it -see our learn guide on templates for more
	// information)
	CloudConfig pulumi.StringPtrInput
	// This is a unqiue, alphanumerical, short, human readable code for the template (required).
	Code pulumi.StringPtrInput
	// The default username to suggest that the user creates (optional: defaults to civo).
	DefaultUsername pulumi.StringPtrInput
	// A multi-line description of the template, in Markdown format (optional).
	Description pulumi.StringPtrInput
	// This is the Image ID of any default template or the ID of another template,either owned by you or global (optional; but
	// must be specified if no volume_id is specified).
	ImageId pulumi.StringPtrInput
	// This is a short human readable name for the template (optional).
	Name pulumi.StringPtrInput
	// A one line description of the template (optional)
	ShortDescription pulumi.StringPtrInput
	// This is the ID of a bootable volume, either owned by you or global(optional; but must be specified if no image_id is
	// specified).
	VolumeId pulumi.StringPtrInput
}

func (TemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*templateState)(nil)).Elem()
}

type templateArgs struct {
	// Commonly referred to as 'user-data', this is a customisation script that is run afterthe instance is first booted. We
	// recommend using cloud-config as it's a great distribution-agnosticway of configuring cloud servers. If you put
	// $INITIAL_USER in your script, this will automaticallybe replaced by the initial user chosen when creating the instance,
	// $INITIAL_PASSWORD will bereplaced with the random password generated by the system, $HOSTNAME is the fully
	// qualifieddomain name of the instance and $SSH_KEY will be the content of the SSH public key.(this is technically
	// optional, but you won't really be able to use instances without it -see our learn guide on templates for more
	// information)
	CloudConfig *string `pulumi:"cloudConfig"`
	// This is a unqiue, alphanumerical, short, human readable code for the template (required).
	Code string `pulumi:"code"`
	// The default username to suggest that the user creates (optional: defaults to civo).
	DefaultUsername *string `pulumi:"defaultUsername"`
	// A multi-line description of the template, in Markdown format (optional).
	Description *string `pulumi:"description"`
	// This is the Image ID of any default template or the ID of another template,either owned by you or global (optional; but
	// must be specified if no volume_id is specified).
	ImageId *string `pulumi:"imageId"`
	// This is a short human readable name for the template (optional).
	Name *string `pulumi:"name"`
	// A one line description of the template (optional)
	ShortDescription *string `pulumi:"shortDescription"`
	// This is the ID of a bootable volume, either owned by you or global(optional; but must be specified if no image_id is
	// specified).
	VolumeId *string `pulumi:"volumeId"`
}

// The set of arguments for constructing a Template resource.
type TemplateArgs struct {
	// Commonly referred to as 'user-data', this is a customisation script that is run afterthe instance is first booted. We
	// recommend using cloud-config as it's a great distribution-agnosticway of configuring cloud servers. If you put
	// $INITIAL_USER in your script, this will automaticallybe replaced by the initial user chosen when creating the instance,
	// $INITIAL_PASSWORD will bereplaced with the random password generated by the system, $HOSTNAME is the fully
	// qualifieddomain name of the instance and $SSH_KEY will be the content of the SSH public key.(this is technically
	// optional, but you won't really be able to use instances without it -see our learn guide on templates for more
	// information)
	CloudConfig pulumi.StringPtrInput
	// This is a unqiue, alphanumerical, short, human readable code for the template (required).
	Code pulumi.StringInput
	// The default username to suggest that the user creates (optional: defaults to civo).
	DefaultUsername pulumi.StringPtrInput
	// A multi-line description of the template, in Markdown format (optional).
	Description pulumi.StringPtrInput
	// This is the Image ID of any default template or the ID of another template,either owned by you or global (optional; but
	// must be specified if no volume_id is specified).
	ImageId pulumi.StringPtrInput
	// This is a short human readable name for the template (optional).
	Name pulumi.StringPtrInput
	// A one line description of the template (optional)
	ShortDescription pulumi.StringPtrInput
	// This is the ID of a bootable volume, either owned by you or global(optional; but must be specified if no image_id is
	// specified).
	VolumeId pulumi.StringPtrInput
}

func (TemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*templateArgs)(nil)).Elem()
}
